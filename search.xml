<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Breeze微型四轴系列（五）：STM32嵌入式开发-代码编写规范]]></title>
      <url>http://myyerrol.io/zh-cn/2017/12/16/breeze_quadcopter_5_stm32_code_guide/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><a id="more"></a>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> Breeze微型四轴系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Micro Quadcopter </tag>
            
            <tag> STM32 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Breeze微型四轴系列（四）：STM32嵌入式开发-链接脚本原理]]></title>
      <url>http://myyerrol.io/zh-cn/2017/12/01/breeze_quadcopter_4_stm32_linkscript/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><a id="more"></a>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> Breeze微型四轴系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Micro Quadcopter </tag>
            
            <tag> STM32 </tag>
            
            <tag> GNU/Linux </tag>
            
            <tag> ARM-GCC </tag>
            
            <tag> LinkScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Breeze微型四轴系列（三）：STM32嵌入式开发-Makefile详解]]></title>
      <url>http://myyerrol.io/zh-cn/2017/11/18/breeze_quadcopter_3_stm32_makefile/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在上一篇文章中，我详细介绍了STM32嵌入式开发工具的相关内容，也通过具体的操作向大家展现了STM32嵌入式开发环境的整个搭建过程，但是如果你想看懂本篇文章或者想尝试自己在GNU/Linux下编写STM32嵌入式程序，那以上的知识是远远不够的，你还需要自学<strong>Make</strong>和<strong>Makefile</strong>，理解它的语法和用法，并亲手进行实践。</p>
<p>本篇文章因为篇幅有限，并不对Make和Makefile进行详细介绍，请大家先自行上网查找教程资料进行学习，这里我个人强烈推荐大神<a href="http://blog.csdn.net/haoel" target="_blank" rel="external">陈皓</a>曾在CSDN上发表过的《跟我一起写Makefile》系列文章（当初我就是通过这份教程学会Makefile的），里面对Makefile的基本规则、命令、变量、条件判断、函数、运行和隐含规则等内容进行了详细的介绍，讲的非常棒，网上也有PDF版本的，可以下载到本地，方便阅读。</p>
<a id="more"></a>
<h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a>系统架构</h3><p><img src="/images/breeze/embedded/breeze_embedded_architecture.png" alt="breeze_embedded_architecture"></p>
<p>如上图所示，Breeze微型四轴飞行器的嵌入式系统架构自底向上共由五个部分组成，它们分别为<strong>硬件设备层</strong>、<strong>官方开发库层</strong>、<strong>底层驱动层</strong>、<strong>外设模块层</strong>和<strong>飞控算法层</strong>（其中官方开发库层比较特殊，因为它为底层驱动层和外设模块层代码的编写均提供STM32底层函数实现，因此当初我在构思嵌入式架构图的时候，为简化设计，并且能更好体现官方开发库层在整个架构图中的层级关系，就将其放置在了驱动层和模块层的右侧，只表示逻辑上的调用关系，不存在层级上的高低之分）。</p>
<ul>
<li><h4 id="硬件设备层"><a href="#硬件设备层" class="headerlink" title="硬件设备层"></a>硬件设备层</h4><p>硬件设备层是整个嵌入式系统架构的基础，其中包括电机驱动、电源管理、传感器、无线通信以及主控制器共五个核心电路模块。关于这部分的内容我已经在<a href="http://myyerrol.io/zh-cn/2017/10/21/breeze_quadcopter_1_hardware_design/">Breeze微型四轴系列（一）：硬件电路板设计</a>文章中进行了详细的讲解，这里就不再重复介绍了。</p>
</li>
<li><h4 id="官方开发库层"><a href="#官方开发库层" class="headerlink" title="官方开发库层"></a>官方开发库层</h4><p>官方开发库层主要由<strong>CMSIS</strong>、<strong>FWLib</strong>和<strong>LinkScript</strong>这三个部分组成：</p>
<p><strong>CMSIS</strong><br>CMSIS是Cortex Microcontroller Software Interface Standard的简写，即ARM Cortex™微控制器软件接口标准。CMSIS是独立于供应商的Cortex-M处理器系列硬件抽象层，为芯片厂商和中间件供应商提供了简单的处理器软件接口，简化了软件复用工作，降低了Cortex-M上操作系统的移植难度，并减少了新入门的微控制器开发者的学习曲线和新产品的上市时间。以下是CMSIS 5.x标准的软件架构图：</p>
<p><img src="/images/breeze/embedded/cmsis_architecture.png" alt="cmsis_architecture"></p>
<p>从上图可以看到，CMSIS 5.x软件架构主要分为以下三层：<strong>应用代码层</strong>、<strong>CMSIS软件层</strong>和<strong>微控制器层</strong>，其中CMSIS软件层起着承上启下的作用，一方面该层对微控制器层进行了统一的实现，屏蔽了不同厂商对Cortex-M系列微处理器核内外设寄存器的不同定义，另一方面又向上层的操作系统和应用层提供接口，简化了应用程序开发的难度，使开发人员能够在完全透明的情况下进行一些应用程序的开发。也正是如此，CMSIS层的实现也相对复杂.有关CMSIS更详细的介绍请访问<a href="https://developer.arm.com/embedded/cmsis" target="_blank" rel="external">CMSIS官网</a>。</p>
<hr>
<p><strong>FWLib</strong><br>FWLib是STM32官方提供的固件库源码，它基于STM32F1系列芯片的内部寄存器架构并根据CMSIS命名规范封装了一套完整的底层操作函数，方便用户进行应用开发。FWLib下的inc目录下存放的是stm32f10x_xxx.h形式的头文件，src目录下存放的是stm32f10x_xxx.c形式的固件库源码文件，每一个.c文件和一个.h文件相对应，用于实现命名中由xxx所指定的功能。注意：在开发的时候，不要修改这些源码文件，直接调用其中的函数即可。</p>
<hr>
<p><strong>LinkScript</strong><br>LinkScript即链接脚本，它的主要功能是描述如何把输入文件中的节（sections）映射到输出文件中，并控制输出文件的存储布局。当然，在大多数情况下我们都不会注意到链接脚本的存在，主要原因在于链接器在我们没有指定特定链接脚本的时候，会使用一个默认缺省的脚本。最后如果你对链接脚本的工作原理很感兴趣，并且想要获得更多有关链接脚本的介绍，请阅读下一篇LinkScript专题文章。</p>
</li>
<li><h4 id="底层驱动层"><a href="#底层驱动层" class="headerlink" title="底层驱动层"></a>底层驱动层</h4><p>底层驱动层包含了常用的通信接口（IIC、SPI、USART、IO）和内部核心功能（时钟、延时、嵌套中断、定时器、EEPROM、Flash），它们全部是基于官方开发库层中的FWLib，即STM32官方固件库中的相应外设驱动代码进行编写，以便对系统外设接口或内部核心功能进行进一步的封装，在实现与硬件设备进行数据通信的同时也能满足外设模块对其调用的需要。</p>
</li>
<li><h4 id="外设模块层"><a href="#外设模块层" class="headerlink" title="外设模块层"></a>外设模块层</h4><p>外设模块层包含传感器模块（MPU6050、MS5611、NRF24L01）、LED显示模块、电机驱动模块、电池管理模块和CommLink通信协议栈模块等。外设模块层是对具体外设硬件进行操作的函数库，它主要通过调用底层驱动层中已封装好的函数来实现与硬件之间的双向数据通信，其中CommLink通信协议栈模块定义并实现了微型四轴飞行器与远程控制端之间，微型四轴飞行器与电脑调试端口之间的通信数据格式，提高系统整体的数据传输准确性。</p>
</li>
<li><h4 id="飞控算法层"><a href="#飞控算法层" class="headerlink" title="飞控算法层"></a>飞控算法层</h4><p>飞控算法层位于整个嵌入式架构的最顶端，其实现主要是建立在硬件设备层、底层驱动层和外设模块层三者已有的基础之上。飞控算法层包含有高度融合算法、数据滤波算法、高度闭环算法、IMU融合算法以及最重要的PID控制算法等，由于整个微型四轴飞行器的核心功能都是由飞控算法所决定的，所以飞控算法层是嵌入式系统的绝对核心，也是开发的重点和难点。</p>
</li>
</ul>
<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>根据上一节所讲的嵌入式系统架构图，我设计了如下图所示的工程根目录结构，它共由八个子功能目录组成，分别为<strong>Algorithm</strong>（飞控算法源码）、<strong>Documents</strong>（工程开发文档）、<strong>Drivers</strong>（底层驱动源码）、<strong>Libraries</strong>（官方开发库）、<strong>Modules</strong>（外设模块源码）、<strong>Project</strong>（Makefile文件）、<strong>Tools</strong>（功能脚本）和<strong>User</strong>（工程核心源码）。</p>
<p><img src="/images/breeze/embedded/breeze_dir_make.png" alt="breeze_dir_make"></p>
<ul>
<li><h4 id="目录Algorithm"><a href="#目录Algorithm" class="headerlink" title="目录Algorithm"></a>目录Algorithm</h4><p>该目录下存放有Breeze微型四轴飞行器所有顶层飞控算法的源码，其中包含高度融合算法、数据滤波算法、高度闭环算法、IMU融合算法以及最重要的PID控制算法等，有关飞控算法的具体内容我会在之后的文章中进行详细的介绍。</p>
<p><img src="/images/breeze/embedded/breeze_dir_algorithm.png" alt="breeze_dir_algorithm"></p>
</li>
<li><h4 id="目录Drivers"><a href="#目录Drivers" class="headerlink" title="目录Drivers"></a>目录Drivers</h4><p>该目录下存放的是硬件驱动层源码，其所有的子目录也是根据系统架构图中底层驱动层里面的相应内容进行组织的。如下图所示，为便于源码管理，每个子目录命名统一为<strong>Driver_XXX</strong>。</p>
<p><img src="/images/breeze/embedded/breeze_dir_drivers.png" alt="breeze_dir_drivers"></p>
</li>
<li><h4 id="目录Libraries"><a href="#目录Libraries" class="headerlink" title="目录Libraries"></a>目录Libraries</h4><p>该目录下存放的是STM32官方开发库的相关内容，其中CMSIS子目录下包含有STM32内核源码、硬件寄存器和中断定义源码以及启动汇编源码等，FWLib子目录下包含有STM32提供的官方固件库源码，而LinkScript目录下则存有基于ARM-GCC的链接脚本文件。</p>
<p><img src="/images/breeze/embedded/breeze_dir_libraries.png" alt="breeze_dir_libraries"></p>
</li>
<li><h4 id="目录Modules"><a href="#目录Modules" class="headerlink" title="目录Modules"></a>目录Modules</h4><p>该目录下存放的是所有外设模块层中的源码，其中每个外设模块的子目录中都包含有同名的.h和.c文件（下图中子目录文件夹显示包含有三个文件，其中第三个文件是编译生成的.o中间文件），便于源码管理和调用。</p>
<p><img src="/images/breeze/embedded/breeze_dir_modules.png" alt="breeze_dir_modules"></p>
</li>
<li><h4 id="目录Project"><a href="#目录Project" class="headerlink" title="目录Project"></a>目录Project</h4><p>该目录下主要存放有工程的Makefile文件，除此之外，根据Makefile中所定义的规则（在下面一节中会讲到），工程在被成功编译之后还会在本目录下生成.hex和.bin等可供烧写的文件。</p>
<p><img src="/images/breeze/embedded/breeze_dir_project.png" alt="breeze_dir_project"></p>
</li>
<li><h4 id="目录Tools"><a href="#目录Tools" class="headerlink" title="目录Tools"></a>目录Tools</h4><p>该目录目前包含有命名为setup.sh的Shell脚本文件，以管理员权限运行这个脚本可以实现一键安装ARM-GCC交叉编译工具链、OpenOCD烧写工具和Minicom终端串口软件。</p>
<p><img src="/images/breeze/embedded/breeze_dir_tools.png" alt="breeze_dir_tools"></p>
</li>
<li><h4 id="目录User"><a href="#目录User" class="headerlink" title="目录User"></a>目录User</h4><p>该目录主要是参考原子KEIL MDK工程模板中的USER目录进行设计的，里面存放的是工程的main.c（工程主源码文件）、stm32f10x_conf.h（工程头文件引用）、stm32f10x_it.h（中断函数定义）和stm32f10x_it.c（中断函数实现）等源码文件。</p>
<p><img src="/images/breeze/embedded/breeze_dir_user.png" alt="breeze_dir_user"></p>
</li>
</ul>
<h3 id="Makefile详解"><a href="#Makefile详解" class="headerlink" title="Makefile详解"></a>Makefile详解</h3><p>根据工程目录结构、ARM-GCC和OpenOCD等工具的使用手册以及HandsFree项目所提供的STM32学习资料，我编写了工程的Makefile文件。在开始详细讲解相关内容之前，还是先放上工程的Makefile文件，好让大家对其能有一个整体的印象。</p>
<div class="alert alert-warning"><i class="fa fa-bell"></i>  因为我在把Makefile中的内容拷过来的时候，为了能够让其中的命令以Soft Wrap（Atom等现代编辑器所提供的功能，可以自动让一行文字在某个特定列换行显示）的形式进行显示，我把原本Makefile中的TAB全部替换成空格，并且在80列的边界处进行了换行处理，所以如果你想自己编写Makefile，请复制并编辑工程目录里的Makefile，而不要直接复制下面的内容到你自己的Makefile文件中，否则运行make肯定会报错！</div>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div></pre></td><td class="code"><pre><div class="line">PROJECT := breeze_firmware_none</div><div class="line"></div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_Clock/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_Delay/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_EEPROM/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_Flash/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_IIC/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_IO/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_NVIC/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_SPI/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_Timer/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_USART/</div><div class="line"></div><div class="line">DIR_MODULES   += ../Modules/Module_Battery/</div><div class="line">DIR_MODULES   += ../Modules/Module_CommLink/</div><div class="line">DIR_MODULES   += ../Modules/Module_LED/</div><div class="line">DIR_MODULES   += ../Modules/Module_Motor/</div><div class="line">DIR_MODULES   += ../Modules/Module_MPU6050/</div><div class="line">DIR_MODULES   += ../Modules/Module_MS5611/</div><div class="line">DIR_MODULES   += ../Modules/Module_NRF24L01/</div><div class="line"></div><div class="line">DIR_ALGORITHM += ../Algorithm/Algorithm_Altitude/</div><div class="line">DIR_ALGORITHM += ../Algorithm/Algorithm_Control/</div><div class="line">DIR_ALGORITHM += ../Algorithm/Algorithm_Filter/</div><div class="line">DIR_ALGORITHM += ../Algorithm/Algorithm_Flight/</div><div class="line">DIR_ALGORITHM += ../Algorithm/Algorithm_IMU/</div><div class="line"></div><div class="line">DIR_INCLUDE   += -I../Libraries/CMSIS/ \</div><div class="line">                 -I../Libraries/FWLib/inc/ \</div><div class="line">                 <span class="variable">$(<span class="built_in">addprefix</span> -I, <span class="variable">$(DIR_DRIVERS)</span>)</span> \</div><div class="line">                 <span class="variable">$(<span class="built_in">addprefix</span> -I, <span class="variable">$(DIR_MODULES)</span>)</span> \</div><div class="line">                 <span class="variable">$(<span class="built_in">addprefix</span> -I, <span class="variable">$(DIR_ALGORITHM)</span>)</span> \</div><div class="line">                 -I../User/ \</div><div class="line"></div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> ../Libraries/CMSIS/*.c)</span></div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> ../Libraries/FWLib/src/*.c)</span></div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> $(<span class="built_in">addsuffix</span> *.c, <span class="variable">$(DIR_DRIVERS)</span>)</span>)</div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> $(<span class="built_in">addsuffix</span> *.c, <span class="variable">$(DIR_MODULES)</span>)</span>)</div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> $(<span class="built_in">addsuffix</span> *.c, <span class="variable">$(DIR_ALGORITHM)</span>)</span>)</div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> ../User/*.c)</span></div><div class="line"></div><div class="line">SRC_ASM := ../Libraries/CMSIS/startup/gcc/startup_stm32f10x_md.s</div><div class="line"></div><div class="line">OBJS    := <span class="variable">$(<span class="built_in">filter</span> %.o, $(SRC_ASM:.s=.o)</span>) <span class="variable">$(<span class="built_in">filter</span> %.o, $(SRC_C:.c=.o)</span>)</div><div class="line"></div><div class="line">LINK_SCRIPT := ../Libraries/LinkScript/stm32f10x_flash.lds</div><div class="line"></div><div class="line">CC_PREFIX := arm-none-eabi-</div><div class="line"></div><div class="line">CC        := <span class="variable">$(CC_PREFIX)</span>gcc</div><div class="line">CXX       := <span class="variable">$(CC_PREFIX)</span>g++</div><div class="line">CP        := <span class="variable">$(CC_PREFIX)</span>objcopy</div><div class="line">GDB       := <span class="variable">$(CC_PREFIX)</span>gdb</div><div class="line">SIZE      := <span class="variable">$(CC_PREFIX)</span>size</div><div class="line">AS        := <span class="variable">$(CC)</span> -x assembler-with-cpp</div><div class="line">HEX       := <span class="variable">$(CP)</span> -O ihex</div><div class="line">BIN       := <span class="variable">$(CP)</span> -O binary -S</div><div class="line"></div><div class="line">DDEFS += -DSTM32F10X_MD</div><div class="line">DDEFS += -DHSE_VALUE=8000000 -DUSE_STDPERIPH_DRIVER</div><div class="line"></div><div class="line">DEFS  := <span class="variable">$(DDEFS)</span> -DRUN_FROM_FLASH=1</div><div class="line"></div><div class="line">MCU   := cortex-m3</div><div class="line"></div><div class="line">OPT   += -Os</div><div class="line">OPT   += -fsingle-precision-constant</div><div class="line">OPT   += -fno-common</div><div class="line">OPT   += -ffunction-sections</div><div class="line">OPT   += -fdata-sections</div><div class="line"></div><div class="line">SPECS := --specs=rdimon.specs -u _printf_float</div><div class="line"></div><div class="line">FLAGS_MCU := -mcpu=<span class="variable">$(MCU)</span></div><div class="line">FLAGS_AS  := <span class="variable">$(SPECS)</span> <span class="variable">$(FLAGS_MCU)</span> <span class="variable">$(OPT)</span> -c -g -gdwarf-2 -mthumb</div><div class="line">FLAGS_C   := <span class="variable">$(SPECS)</span> <span class="variable">$(FLAGS_MCU)</span> <span class="variable">$(OPT)</span> -c -g -gdwarf-2 -mthumb \</div><div class="line">             -fomit-frame-pointer -Wall -fverbose-asm <span class="variable">$(DEFS)</span></div><div class="line">FLAGS_CXX := <span class="variable">$(SPECS)</span> <span class="variable">$(FLAGS_MCU)</span> <span class="variable">$(OPT)</span> -c -g -gdwarf-2 -mthumb \</div><div class="line">             -fomit-frame-pointer -Wall -fverbose-asm -fno-exceptions \</div><div class="line">             -fno-rtti -fno-threadsafe-statics -fvisibility=hidden -std=c++11 \</div><div class="line">             <span class="variable">$(DEFS)</span></div><div class="line">FLAGS_LD  := <span class="variable">$(SPECS)</span> <span class="variable">$(FLAGS_MCU)</span> <span class="variable">$(OPT)</span> -lm -g -gdwarf-2 -mthumb \</div><div class="line">             -nostartfiles -Xlinker --gc-sections -T<span class="variable">$(LINK_SCRIPT)</span> \</div><div class="line">             -Wl,-Map=<span class="variable">$(PROJECT)</span>.map,--cref,--no-warn-mismatch</div><div class="line"></div><div class="line">TYPE_BURN  := openocd_swd_flash</div><div class="line">TYPE_DEBUG := openocd_swd_debug</div><div class="line">TYPE_ERASE := openocd_swd_erase</div><div class="line"></div><div class="line"><span class="comment">###############################################################################</span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: all burn debug erase clean</span></div><div class="line"></div><div class="line"><span class="section">all: <span class="variable">$(OBJS)</span> <span class="variable">$(PROJECT)</span>.elf <span class="variable">$(PROJECT)</span>.hex <span class="variable">$(PROJECT)</span>.bin</span></div><div class="line">    <span class="variable">$(SIZE)</span> <span class="variable">$(PROJECT)</span>.elf</div><div class="line"></div><div class="line"><span class="section">%.o: %.c</span></div><div class="line">    <span class="variable">$(CC)</span> <span class="variable">$(FLAGS_C)</span> <span class="variable">$(DIR_INCLUDE)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></div><div class="line"></div><div class="line"><span class="section">%.o: %.s</span></div><div class="line">    <span class="variable">$(AS)</span> <span class="variable">$(FLAGS_AS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></div><div class="line"></div><div class="line"><span class="section">%.elf: <span class="variable">$(OBJS)</span></span></div><div class="line">    <span class="variable">$(CC)</span> <span class="variable">$(OBJS)</span> <span class="variable">$(FLAGS_LD)</span> -o <span class="variable">$@</span></div><div class="line"></div><div class="line"><span class="section">%.hex: %.elf</span></div><div class="line">    <span class="variable">$(HEX)</span> <span class="variable">$&lt;</span> <span class="variable">$@</span></div><div class="line"></div><div class="line"><span class="section">%.bin: %.elf</span></div><div class="line">    <span class="variable">$(BIN)</span> <span class="variable">$&lt;</span> <span class="variable">$@</span></div><div class="line"></div><div class="line"><span class="comment">###############################################################################</span></div><div class="line"></div><div class="line"><span class="section">burn:  <span class="variable">$(TYPE_BURN)</span></span></div><div class="line"><span class="section">debug: <span class="variable">$(TYPE_DEBUG)</span></span></div><div class="line"><span class="section">erase: <span class="variable">$(TYPE_ERASE)</span></span></div><div class="line"></div><div class="line"><span class="section">openocd_swd_flash: <span class="variable">$(PROJECT)</span>.bin</span></div><div class="line">    openocd -f interface/jlink.cfg -c <span class="string">"transport select swd"</span> -f</div><div class="line">    target/stm32f1x.cfg -c <span class="string">"init"</span> -c <span class="string">"reset halt"</span> -c <span class="string">"sleep 100"</span> -c <span class="string">"wait_halt</span></div><div class="line">    2" -c <span class="string">"flash write_image erase <span class="variable">$(PROJECT)</span>.bin 0x08000000"</span> -c <span class="string">"sleep 100"</span> -c</div><div class="line">    <span class="string">"verify_image <span class="variable">$(PROJECT)</span>.bin 0x08000000"</span> -c <span class="string">"sleep 100"</span> -c <span class="string">"reset run"</span> -c</div><div class="line">    shutdown</div><div class="line"></div><div class="line"><span class="section">openocd_swd_debug: <span class="variable">$(PROJECT)</span>.bin</span></div><div class="line">    xterm -e openocd -f interface/jlink.cfg -c <span class="string">"transport select swd"</span> -f</div><div class="line">    target/stm32f1x.cfg -c <span class="string">"init"</span> -c <span class="string">"halt"</span> -c <span class="string">"reset halt"</span> &amp;</div><div class="line">    <span class="variable">$(GDB)</span> --eval-command=<span class="string">"target extended-remote localhost:3333"</span> <span class="variable">$(PROJECT)</span>.elf</div><div class="line"></div><div class="line"><span class="section">openocd_swd_erase:</span></div><div class="line">    openocd -f interface/jlink.cfg -c <span class="string">"transport select swd"</span> -f</div><div class="line">    target/stm32f1x.cfg  -c <span class="string">"init"</span> -c <span class="string">"reset halt"</span> -c <span class="string">"sleep 100"</span> -c <span class="string">"stm32f1x</span></div><div class="line">    mass_erase 0" -c <span class="string">"sleep 100"</span> -c shutdown</div><div class="line"></div><div class="line"><span class="comment">###############################################################################</span></div><div class="line"></div><div class="line"><span class="section">clean:</span></div><div class="line">    -rm -rf <span class="variable">$(OBJS)</span></div><div class="line">    -rm -rf <span class="variable">$(PROJECT)</span>.elf</div><div class="line">    -rm -rf <span class="variable">$(PROJECT)</span>.map</div><div class="line">    -rm -rf <span class="variable">$(PROJECT)</span>.hex</div><div class="line">    -rm -rf <span class="variable">$(PROJECT)</span>.bin</div></pre></td></tr></table></figure>
<ul>
<li><h4 id="编译选项"><a href="#编译选项" class="headerlink" title="编译选项"></a>编译选项</h4><p><strong>工程命名</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PROJECT := breeze_firmware_none</div></pre></td></tr></table></figure>
<p>使用变量的方式来存储工程的名字，以便为之后编译生成的程序提供统一的命名。</p>
<hr>
<p><strong>目录引用</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">DIR_DRIVERS   += ../Drivers/Driver_Clock/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_Delay/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_EEPROM/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_Flash/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_IIC/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_IO/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_NVIC/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_SPI/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_Timer/</div><div class="line">DIR_DRIVERS   += ../Drivers/Driver_USART/</div><div class="line"></div><div class="line">DIR_MODULES   += ../Modules/Module_Battery/</div><div class="line">DIR_MODULES   += ../Modules/Module_CommLink/</div><div class="line">DIR_MODULES   += ../Modules/Module_LED/</div><div class="line">DIR_MODULES   += ../Modules/Module_Motor/</div><div class="line">DIR_MODULES   += ../Modules/Module_MPU6050/</div><div class="line">DIR_MODULES   += ../Modules/Module_MS5611/</div><div class="line">DIR_MODULES   += ../Modules/Module_NRF24L01/</div><div class="line"></div><div class="line">DIR_ALGORITHM += ../Algorithm/Algorithm_Altitude/</div><div class="line">DIR_ALGORITHM += ../Algorithm/Algorithm_Control/</div><div class="line">DIR_ALGORITHM += ../Algorithm/Algorithm_Filter/</div><div class="line">DIR_ALGORITHM += ../Algorithm/Algorithm_Flight/</div><div class="line">DIR_ALGORITHM += ../Algorithm/Algorithm_IMU/</div><div class="line"></div><div class="line">DIR_INCLUDE   += -I../Libraries/CMSIS/ \</div><div class="line">                 -I../Libraries/FWLib/inc/ \</div><div class="line">                 <span class="variable">$(<span class="built_in">addprefix</span> -I, <span class="variable">$(DIR_DRIVERS)</span>)</span> \</div><div class="line">                 <span class="variable">$(<span class="built_in">addprefix</span> -I, <span class="variable">$(DIR_MODULES)</span>)</span> \</div><div class="line">                 <span class="variable">$(<span class="built_in">addprefix</span> -I, <span class="variable">$(DIR_ALGORITHM)</span>)</span> \</div><div class="line">                 -I../User/ \</div></pre></td></tr></table></figure>
<p><strong>DIR_DRIVERS</strong>、<strong>DIR_MODULES</strong>和<strong>DIR_ALGORITHM</strong>这三个变量的作用是根据工程目录结构设计，使用相对路径的方式将底层驱动层、外设模块层和飞控算法层中的子目录分别添加到其中，为之后提取目录中的源码提供搜索路径。</p>
<p>而<strong>DIR_INCLUDE</strong>变量主要用于获取工程目录结构中的所有.h头文件，其中包括官方开发库层中CMSIS和FWLib里的头文件，以及底层驱动层、外设模块层、飞控算法层和用户主函数目录中所有相关的头文件。这里，为了让大家看得更加清楚，我在每个目录后面都添加了反斜杠来进行转义，表示所有目录路径在逻辑上依然同处一行，但可以通过多行的形式进行显示。此外，我还用了GNU/Make中的<strong>addprefix</strong>函数，以下引用自《跟我一起学Makefile》：</p>
<blockquote>
<p>$(addprefix &lt;prefix&gt;, &lt;names…&gt;)<br>名称：加前缀函数——addprefix。<br>功能：把前缀&lt;prefix&gt;加到&lt;names&gt;中的每个单词后面。<br>返回：返回加过前缀的文件名序列。<br>示例：$(addprefix src/,foo bar)返回值是“src/foo src/bar”。</p>
</blockquote>
<p>因此在工程Makefile中，$(addprefix -I, $(DIR_DRIVERS))函数操作会在<strong>DIR_DRIVERS</strong>变量前面添加<strong>-I</strong>标志，即将DIR_DRIVERS目录下的头文件添加到编译器的头文件搜索路径中。这样做简单灵活，且具有更好的可扩展性。</p>
<hr>
<p><strong>源文件搜索</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> ../Libraries/CMSIS/*.c)</span></div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> ../Libraries/FWLib/src/*.c)</span></div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> $(<span class="built_in">addsuffix</span> *.c, <span class="variable">$(DIR_DRIVERS)</span>)</span>)</div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> $(<span class="built_in">addsuffix</span> *.c, <span class="variable">$(DIR_MODULES)</span>)</span>)</div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> $(<span class="built_in">addsuffix</span> *.c, <span class="variable">$(DIR_ALGORITHM)</span>)</span>)</div><div class="line">SRC_C   += <span class="variable">$(<span class="built_in">wildcard</span> ../User/*.c)</span></div><div class="line"></div><div class="line">SRC_ASM := ../Libraries/CMSIS/startup/gcc/startup_stm32f10x_md.s</div><div class="line"></div><div class="line">OBJS    := <span class="variable">$(<span class="built_in">filter</span> %.o, $(SRC_ASM:.s=.o)</span>) <span class="variable">$(<span class="built_in">filter</span> %.o, $(SRC_C:.c=.o)</span>)</div></pre></td></tr></table></figure>
<p>根据操作不难看出，<strong>SRC_C</strong>和<strong>SCR_ASM</strong>这两个变量用于分别存储C源码和汇编文件，其中SRC_C里用到了<strong>wildcard</strong>和<strong>addsuffix</strong>两个函数，这里首先对<strong>wildcard</strong>函数进行简单讲解，以下内容引用自liangkaiming的《<a href="http://blog.csdn.net/liangkaiming/article/details/6267357" target="_blank" rel="external">Makefile中的wildcard用法</a>》中的部分内容：</p>
<blockquote>
<p>在Makefile规则中，通配符会被自动展开。但在变量的定义和函数引用时，通配符将失效。这种情况下如果需要通配符有效，就需要使用函数“wildcard”，它的用法是：$(wildcard PATTERN…) 。在Makefile中，它被展开为已经存在的、使用空格分开的、匹配此模式的所有文件列表。如果不存在任何符合此模式的文件，函数会忽略模式字符并返回空。</p>
</blockquote>
<p>所以，$(wildcard ../Libraries/CMSIS/*.c)的含义是获取../Libraries/CMSIS/目录下的所有.c源文件，其它的类似。而$(wildcard $(addsuffix *.c, $(DIR_DRIVERS)))则在wildcard函数的基础上又嵌套了<strong>addsuffix</strong>函数，它跟之前讲过的<strong>addprefix</strong>功能类似，主要用来添加后缀。以内容下依旧引用自《跟我一起学Makefile》：</p>
<blockquote>
<p>$(addsuffix &lt;suffix&gt;, &lt;names…&gt;)<br>名称：加后缀函数——addsuffix。<br>功能：把后缀&lt;suffix&gt;加到&lt;names&gt;中的每个单词后面。<br>返回：返回加过后缀的文件名序列。<br>示例：$(addsuffix .c,foo bar)返回值是“foo.c bar.c”</p>
</blockquote>
<p>因此，$(wildcard $(addsuffix *.c, $(DIR_DRIVERS)))函数的含义是首先在DIR_DRIVERS变量的后边添加.c后缀，然后再调用wildcard函数获取其中的所有.c源文件。这种通过函数组合来实现指定功能的方式可以大大减少编写Makefile的工作量，提高项目的开发效率。</p>
<p><strong>OBJS</strong>变量用于存储所有通过.c和.s源文件生成的中间目标文件（object files），这里用到了<strong>filter</strong>函数和变量的<strong>替换规则</strong>，先介绍一下filter函数：</p>
<blockquote>
<p>$(filter &lt;pattern…&gt;, &lt;text&gt;)<br>名称：过滤函数——filter。<br>功能：以&lt;pattern&gt;模式过滤&lt;text&gt;字符串中的单词，保留符合模式&lt;pattern&gt;的单词。可以有多个模式。<br>返回：返回符合模式&lt;pattern&gt;的字串。<br>示例：<br>sources := foo.c bar.c baz.s ugh.h<br>foo: $(sources)<br>cc $(filter %.c %.s,$(sources)) -o foo<br>$(filter %.c %.s,$(sources))返回的值是“foo.c bar.c baz.s”。</p>
</blockquote>
<p>综上所述，$(filter %.o, $(SRC_ASM:.s=.o))和$(filter %.o, $(SRC_C:.c=.o))函数的执行过程如下：filter函数首先根据$(SRC_ASM:.s=.o)和$(SRC_C:.c=.o)所定义好的替换规则，分别将SRC_ASM和SRC_C变量中的.s和.c字符串替换成.o，然后从替换之后的变量中匹配出符合.o后缀的文件，最后返回字符串结果给OBJS变量。</p>
<hr>
<p><strong>链接脚本</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LINK_SCRIPT := ../Libraries/LinkScript/stm32f10x_flash.lds</div></pre></td></tr></table></figure>
<p><strong>LINK_SCRIPT</strong>变量存储的是基于ARM-GCC编译器的链接脚本。</p>
<hr>
<p><strong>编译器可执行程序</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">CC_PREFIX := arm-none-eabi-</div><div class="line"></div><div class="line">CC        := <span class="variable">$(CC_PREFIX)</span>gcc</div><div class="line">CXX       := <span class="variable">$(CC_PREFIX)</span>g++</div><div class="line">CP        := <span class="variable">$(CC_PREFIX)</span>objcopy</div><div class="line">GDB       := <span class="variable">$(CC_PREFIX)</span>gdb</div><div class="line">SIZE      := <span class="variable">$(CC_PREFIX)</span>size</div><div class="line">AS        := <span class="variable">$(CC)</span> -x assembler-with-cpp</div><div class="line">HEX       := <span class="variable">$(CP)</span> -O ihex</div><div class="line">BIN       := <span class="variable">$(CP)</span> -O binary -S</div></pre></td></tr></table></figure>
<p>以上一系列变量用于为ARM-GCC编译器相关可执行程序赋予新的别名，方便之后编译过程的使用。</p>
<hr>
<p><strong>编译选项</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">DDEFS += -DSTM32F10X_MD</div><div class="line">DDEFS += -DHSE_VALUE=8000000 -DUSE_STDPERIPH_DRIVER</div><div class="line"></div><div class="line">DEFS  := <span class="variable">$(DDEFS)</span> -DRUN_FROM_FLASH=1</div><div class="line"></div><div class="line">MCU   := cortex-m3</div><div class="line"></div><div class="line">OPT   += -Os</div><div class="line">OPT   += -fsingle-precision-constant</div><div class="line">OPT   += -fno-common</div><div class="line">OPT   += -ffunction-sections</div><div class="line">OPT   += -fdata-sections</div><div class="line"></div><div class="line">SPECS := --specs=rdimon.specs -u _printf_float</div></pre></td></tr></table></figure>
<p><strong>DDEFS</strong>和<strong>DEFS</strong>变量是ARM-GCC编译器的预处理宏定义，用于将指定的功能编译到可执行程序当中去：</p>
<ul>
<li><p><strong>-DSTM32F10X_MD</strong><br>-DSTM32F10X_MD选项表示该工程使用的是STM32F1系列的中容量芯片。如果你用的是小容量或大容量的芯片，请将此处对应地修改为-DSTM32F10X_LD或-DSTM32F10X_HD等选项。</p>
</li>
<li><p><strong>-DHSE_VALUE=8000000</strong><br>-DHSE_VALUE=8000000选项用于配置STM32的外部晶振频率，其中8000000表示芯片使用的晶振频率为8MHz。</p>
</li>
<li><p><strong>-DUSE_STDPERIPH_DRIVER</strong><br>-DUSE_STDPERIPH_DRIVER选项表示该工程会使用STM32官方提供的固件库。如果你自己的工程里没有使用STM32官方固件库，也可以不添加该选项。</p>
</li>
<li><p><strong>-DRUN_FROM_FLASH=1</strong><br>-DRUN_FROM_FLASH=1选项用于指定程序从硬件的FLASH中开始运行。</p>
</li>
</ul>
<p><strong>MCU</strong>变量表示当前工程所用芯片的架构。我们用的是STM32F1系列的芯片，所以该变量的值为cortex-m3。</p>
<p><strong>OPT</strong>(Optimization)变量用于表示<strong>编译优化</strong>方面的选项：</p>
<ul>
<li><strong>-Os</strong><br>-Os(Optimize size)选项指定编译器以-O2级别优化来进一步减少可执行程序所占空间的大小。</li>
</ul>
<ul>
<li><p><strong>fsingle-precision-constant</strong><br>fsingle-precision-constant选项指定编译器将浮点型（floating-point）常量看成单精度常量而不把它们隐式地转换成双精度常量。</p>
</li>
<li><p><strong>-fno-common</strong><br>-fno-common选项指定编译器应该将未初始化的全局变量放置到.o目标文件（object file）的数据段中而不是生成它们作为公共块（common blocks）。虽然当出现同一个变量在两个不同的编译中被声明的情况时，编译器会在链接过程中报<strong>重复定义</strong>的错误，但使用-fno-common选项编译目标程序可以更好地提高程序的性能（Unix C编译器传统上通过将变量放置在公共块中，以允许在不同编译单元中对这些变量进行多个定义，这种行为主要通过-fcommon选项来进行指定。但另一方面，ISO C标准并不要求这种行为，且对于某些可执行程序来说这种行为会带来变量引用上的速度或空间开销，因此-fno-common选项便出现了）。</p>
</li>
<li><p><strong>-ffunction-sections</strong>和<strong>-fdata-sections</strong><br>-ffunction-sections和-fdata-sections选项指定编译器将每一个函数或数据项放置到输出文件的相应段里去，函数或数据项的名字决定了输出文件中相应段的名字。使用该选项可以让链接器执行优化来改进指令空间中引用的局部性，但代价是牺牲了目标文件和可执行文件的空间大小和速度。</p>
</li>
</ul>
<p><strong>SPECS</strong>变量用于指定编译器所要读取的<strong>规格</strong>（specs）文件，在命令行里可以指定多个规格文件，编译器会根据顺序从左到右依次进行处理。</p>
<hr>
<p><strong>编译标签</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">FLAGS_MCU := -mcpu=<span class="variable">$(MCU)</span></div><div class="line">FLAGS_AS  := <span class="variable">$(SPECS)</span> <span class="variable">$(FLAGS_MCU)</span> <span class="variable">$(OPT)</span> -c -g -gdwarf-2 -mthumb</div><div class="line">FLAGS_C   := <span class="variable">$(SPECS)</span> <span class="variable">$(FLAGS_MCU)</span> <span class="variable">$(OPT)</span> -c -g -gdwarf-2 -mthumb \</div><div class="line">             -fomit-frame-pointer -Wall -fverbose-asm <span class="variable">$(DEFS)</span></div><div class="line">FLAGS_CXX := <span class="variable">$(SPECS)</span> <span class="variable">$(FLAGS_MCU)</span> <span class="variable">$(OPT)</span> -c -g -gdwarf-2 -mthumb \</div><div class="line">             -fomit-frame-pointer -Wall -fverbose-asm -fno-exceptions \</div><div class="line">             -fno-rtti -fno-threadsafe-statics -fvisibility=hidden -std=c++11 \</div><div class="line">             <span class="variable">$(DEFS)</span></div><div class="line">FLAGS_LD  := <span class="variable">$(SPECS)</span> <span class="variable">$(FLAGS_MCU)</span> <span class="variable">$(OPT)</span> -lm -g -gdwarf-2 -mthumb \</div><div class="line">             -nostartfiles -Xlinker --gc-sections -T<span class="variable">$(LINK_SCRIPT)</span> \</div><div class="line">             -Wl,-Map=<span class="variable">$(PROJECT)</span>.map,--cref,--no-warn-mismatch</div></pre></td></tr></table></figure>
<hr>
<p><strong>调试器类型</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">TYPE_BURN  := openocd_swd_flash</div><div class="line">TYPE_DEBUG := openocd_swd_debug</div><div class="line">TYPE_ERASE := openocd_swd_erase</div></pre></td></tr></table></figure>
<p>根据名字可以知道，以上三个变量分别代表调试器烧写、调试和擦除的类型。由于目前该工程使用的调试器为J-Link，软件为OpenOCD，并且基于J-Link的SWD模式与硬件进行数据通信，所以上述三个变量的值是固定的。如果以后工程添加了新的调试器命令（比如ST-Link等），用户可以通过修改相应变量的值（必须要在下面的<strong>调试器命令</strong>部分中存在）来自行选择使用哪种调试器进行烧写、调试和擦除操作。</p>
</li>
<li><h4 id="编译命令"><a href="#编译命令" class="headerlink" title="编译命令"></a>编译命令</h4><p><strong>伪目标定义</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: all burn debug erase clean</span></div></pre></td></tr></table></figure>
<hr>
<p><strong>编译规则</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="section">all: <span class="variable">$(OBJS)</span> <span class="variable">$(PROJECT)</span>.elf <span class="variable">$(PROJECT)</span>.hex <span class="variable">$(PROJECT)</span>.bin</span></div><div class="line">    <span class="variable">$(SIZE)</span> <span class="variable">$(PROJECT)</span>.elf</div><div class="line"></div><div class="line"><span class="section">%.o: %.c</span></div><div class="line">    <span class="variable">$(CC)</span> <span class="variable">$(FLAGS_C)</span> <span class="variable">$(DIR_INCLUDE)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></div><div class="line"></div><div class="line"><span class="section">%.o: %.s</span></div><div class="line">    <span class="variable">$(AS)</span> <span class="variable">$(FLAGS_AS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></div><div class="line"></div><div class="line"><span class="section">%.elf: <span class="variable">$(OBJS)</span></span></div><div class="line">    <span class="variable">$(CC)</span> <span class="variable">$(OBJS)</span> <span class="variable">$(FLAGS_LD)</span> -o <span class="variable">$@</span></div><div class="line"></div><div class="line"><span class="section">%.hex: %.elf</span></div><div class="line">    <span class="variable">$(HEX)</span> <span class="variable">$&lt;</span> <span class="variable">$@</span></div><div class="line"></div><div class="line"><span class="section">%.bin: %.elf</span></div><div class="line">    <span class="variable">$(BIN)</span> <span class="variable">$&lt;</span> <span class="variable">$@</span></div></pre></td></tr></table></figure>
</li>
<li><h4 id="调试器命令"><a href="#调试器命令" class="headerlink" title="调试器命令"></a>调试器命令</h4><p><strong>调试器定义</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="section">burn:  <span class="variable">$(TYPE_BURN)</span></span></div><div class="line"><span class="section">debug: <span class="variable">$(TYPE_DEBUG)</span></span></div><div class="line"><span class="section">erase: <span class="variable">$(TYPE_ERASE)</span></span></div></pre></td></tr></table></figure>
<p><strong>调试命令</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="section">openocd_swd_flash: <span class="variable">$(PROJECT)</span>.bin</span></div><div class="line">    openocd -f interface/jlink.cfg -c <span class="string">"transport select swd"</span> -f</div><div class="line">    target/stm32f1x.cfg -c <span class="string">"init"</span> -c <span class="string">"reset halt"</span> -c <span class="string">"sleep 100"</span> -c <span class="string">"wait_halt</span></div><div class="line">    2" -c <span class="string">"flash write_image erase <span class="variable">$(PROJECT)</span>.bin 0x08000000"</span> -c <span class="string">"sleep 100"</span> -c</div><div class="line">    <span class="string">"verify_image <span class="variable">$(PROJECT)</span>.bin 0x08000000"</span> -c <span class="string">"sleep 100"</span> -c <span class="string">"reset run"</span> -c</div><div class="line">    shutdown</div></pre></td></tr></table></figure>
<hr>
<p><strong>调试命令</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="section">openocd_swd_debug: <span class="variable">$(PROJECT)</span>.bin</span></div><div class="line">    xterm -e openocd -f interface/jlink.cfg -c <span class="string">"transport select swd"</span> -f</div><div class="line">    target/stm32f1x.cfg -c <span class="string">"init"</span> -c <span class="string">"halt"</span> -c <span class="string">"reset halt"</span> &amp;</div><div class="line">    <span class="variable">$(GDB)</span> --eval-command=<span class="string">"target extended-remote localhost:3333"</span> <span class="variable">$(PROJECT)</span>.elf</div></pre></td></tr></table></figure>
<hr>
<p><strong>擦除命令</strong></p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="section">openocd_swd_erase:</span></div><div class="line">    openocd -f interface/jlink.cfg -c <span class="string">"transport select swd"</span> -f</div><div class="line">    target/stm32f1x.cfg  -c <span class="string">"init"</span> -c <span class="string">"reset halt"</span> -c <span class="string">"sleep 100"</span> -c <span class="string">"stm32f1x</span></div><div class="line">    mass_erase 0" -c <span class="string">"sleep 100"</span> -c shutdown</div></pre></td></tr></table></figure>
</li>
<li><h4 id="清理命令"><a href="#清理命令" class="headerlink" title="清理命令"></a>清理命令</h4><figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="section">clean:</span></div><div class="line">    -rm -rf <span class="variable">$(OBJS)</span></div><div class="line">    -rm -rf <span class="variable">$(PROJECT)</span>.elf</div><div class="line">    -rm -rf <span class="variable">$(PROJECT)</span>.map</div><div class="line">    -rm -rf <span class="variable">$(PROJECT)</span>.hex</div><div class="line">    -rm -rf <span class="variable">$(PROJECT)</span>.bin</div></pre></td></tr></table></figure>
<p>通过调用Shell中的rm -rf命令来强制递归删除工程的所有因编译所产生的文件。</p>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>读到这里，我相信大家对Breeze微型四轴飞行器的嵌入式架构以及工程本身的Makefile有了一个比较清楚的认识。这里，我想再强调一下项目整体架构以及目录组织结构的重要性，一个开源项目能否成功在很大程度上取决于系统架构设计的好坏，优秀的系统架构可以降低各模块之间的耦合性，提高底层代码的封装性，并向上提供较为丰富的API接口，除此之外，最重要的是它统一了接口标准，降低程序开发的复杂程度，从而提高系统整体的鲁棒性。当然，拥有设计出色的系统架构之后，我们还需要根据其来组织整个项目工程的目录结构，把不同功能的代码、Makefile以及开发文档等放到不同的目录当中去，这样有利于后期项目代码的编写和维护等工作。</p>
<p>在接下来的文章中，我将会为大家讲解STM32链接脚本的工作原理和相关配置，并分析其在程序链接和运行阶段的作用。由于下一篇的链接脚本部分涉及很多非常深奥的软件底层知识，所以我希望那些想深入理解STM32嵌入式程序是如何在硬件上运行的同学可以提前先看看《C专家编程》这本书中的<strong>“第6章 运动的诗章：运行时数据结构”</strong>，里面对程序的堆、栈和段进行了介绍，对你理解链接脚本中的相关内容有着很好的促进作用。最后，我还是希望能有更多的爱好者可以从本系列教程中受益匪浅。</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> Breeze微型四轴系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Micro Quadcopter </tag>
            
            <tag> STM32 </tag>
            
            <tag> GNU/Linux </tag>
            
            <tag> GNU/Make </tag>
            
            <tag> Makefile </tag>
            
            <tag> ARM-GCC </tag>
            
            <tag> OpenOCD </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Breeze微型四轴系列（二）：STM32嵌入式开发-开发环境搭建]]></title>
      <url>http://myyerrol.io/zh-cn/2017/11/07/breeze_quadcopter_2_stm32_development/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我跟很多刚开始接触STM32的同学一样，都是先通过各种渠道获得战舰的开发板（我是从机器人基地电子组那里借了一个STM32最小系统板），然后边看着《原子教你玩转STM32》，边用KEIL MDK编写代码来入门STM32嵌入式开发的。在学习的过程中，我发现虽然KEIL MDK集代码编辑、编译、下载、调试为一体，并且提供了非常友好的图形操作界面，但是它的代码编辑功能实在是做得很一般，而且最关键的是它不能在GNU/Linux和Mac OS上跨平台运行。因此，为了提高项目的开发效率并且践行开源的宗旨，我决定遵循<a href="https://hands-free.github.io" target="_blank" rel="external">HandsFree</a>的<a href="https://github.com/HANDS-FREE/OpenRE" target="_blank" rel="external">OpenRE</a>库（由我们西工大舞蹈机器人基地学长们联合创立的开源机器人软硬件项目）以及很多国外开源飞控项目所做的那样，使用GNU/Linux下的开源工具链来搭建Breeze微型四轴飞行器的嵌入式开发环境。</p>
<a id="more"></a>
<h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><ul>
<li><h4 id="GNU-Make"><a href="#GNU-Make" class="headerlink" title="GNU/Make"></a>GNU/Make</h4><p><a href="https://www.gnu.org/software/make" target="_blank" rel="external">GNU/Make</a>是一个控制从程序的源文件中生成程序的可执行文件和其他非源文件的自动化工具，它可以通过读取包含有每个非源文件以及生成依赖规则的Makefile文件来构建程序。GNU/Make拥有以下几个能力：</p>
<ul>
<li><p>GNU/Make允许最终的用户不需要知道整个构建的具体细节就可以完成软件包的编译和安装，因为这些细节都存在于软件提供者的Makefile文件中。</p>
</li>
<li><p>GNU/Make能够根据哪些源文件已经更改，自动生成需要更新的文件。除此之外，它也会自动确定更新文件的正确顺序，以防止一个非源文件依赖于另一个非源文件。因此，如果开发者修改了几个源文件，然后运行make命令，GNU/Make只会更新那些直接或间接依赖于已修改的源文件的非源文件，而不会重新编译所有的程序。</p>
</li>
<li><p>GNU/Make不限于任何特定的语言。对于程序中的每个非源文件，Makefile都会指定Shell命令来处理它，比如使用Shell命令运行编译器或链接器来生成目标文件或可执行文件，使用TeX或Makeinfo工具来格式化文档等。</p>
</li>
<li><p>GNU/Make的功能不仅限于构建软件包。开发者还可以使用它来控制安装或卸载软件包，为其生成标签表或实现其他任何开发者想要做的操作。</p>
</li>
</ul>
</li>
<li><h4 id="ARM-GCC"><a href="#ARM-GCC" class="headerlink" title="ARM-GCC"></a>ARM-GCC</h4><div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  以下内容部分摘自VeryARM网站中的《arm交叉编译器gnueabi、none-eabi、arm-eabi、gnueabihf、gnueabi区别》文章。</div>
<p>ARM-GCC是一套交叉编译工具链家族，其命名规则统一为：<strong>arch [-vendor] [-os] [-(gnu)eabi]</strong>：</p>
<ul>
<li><p><strong>arch</strong><br>代表芯片的体系架构，比如ARM，MIPS等。</p>
</li>
<li><p><strong>vendor</strong><br>代表工具链的提供商。</p>
</li>
<li><p><strong>os</strong><br>代表目标开发板所使用的操作系统。</p>
</li>
<li><p><strong>eabi</strong><br>代表<strong>Embedded Application Binary Interface</strong>，即嵌入式应用二进制接口。</p>
</li>
</ul>
<p>ARM-GCC家族主要成员具体如下：</p>
<ul>
<li><p><strong>arm-none-eabi-gcc</strong><br>(ARM architecture, <strong>no</strong> vendor, <strong>not</strong> target an operating system, complies with the ARM EABI)<br>主要用于编译ARM架构的裸机系统（包括ARM Linux的Boot和Kernel，不适用编译Linux应用），一般适合ARM7、Cortex-M和Cortex-R内核等芯片使用，不支持那些跟操作系统关系密切的函数。除此之外，该编译器在底层使用了<strong>newlib</strong>这个专用于嵌入式系统的C库。</p>
</li>
<li><p><strong>arm-none-linux-gnueabi-gcc</strong><br>(ARM architecture, <strong>no</strong> vendor, creates binaries that run on the Linux operating system, and uses the GNU EABI)<br>arm-none-linux-gnueabi-gcc是一款基于GCC，底层使用<strong>glibc</strong>库，并经过Codesourcery公司优化后所推出的编译器，其浮点运算的处理能力非常优秀，主要用于编译基于ARM架构（ARM9、ARM11以及Cortex-A9）的Linux系统（包括ARM架构的U-boot、Linux内核和Linux应用等）。</p>
</li>
<li><p><strong>arm-eabi-gcc</strong><br>主要用于编译运行在Android ARM架构上的应用程序。</p>
</li>
<li><p><strong>armcc</strong><br>ARM公司官方推出的编译工具，功能和arm-none-eabi-gcc类似，可以编译裸机程序（U-boot和Kernel），但是不能编译Linux应用程序。armcc一般是和ARM集成开发工具一起进行发布的，比如KEIL MDK、ADS、RVDS和DS-5中都将armcc作为自己默认的编译器，是付费软件。</p>
</li>
</ul>
<p>根据以上的介绍，由于Breeze微型四轴飞行器采用的是基于Cortex-M3架构的STM32F1芯片，所以我们选择用<strong>arm-none-eabi-gcc</strong>来作为该项目交叉编译的工具链，目前该工具链的预编译二进制版本可以在<a href="https://launchpad.net/gcc-arm-embedded" target="_blank" rel="external">GNU ARM Embedded Toolchain</a>官网上查看并进行下载。</p>
</li>
<li><h4 id="OpenOCD"><a href="#OpenOCD" class="headerlink" title="OpenOCD"></a>OpenOCD</h4><p><a href="http://openocd.org" target="_blank" rel="external">OpenOCD</a>项目最早是由Dominic Rath发起，它的目标是开发出一种能够接入市场上大多数常见MCU、MPU和FPGA等平台的通用开源片上调试器（Open On-Chip Debuger），并提供调试、系统内在线编程和边界扫描测试等功能。具体使用的时候，OpenOCD需要依靠一种叫做<strong>调试适配器</strong>（点击<a href="http://openocd.org/doc-release/html/Debug-Adapter-Hardware.html#Debug-Adapter-Hardware" target="_blank" rel="external">这里</a>获得OpenOCD所支持的完成设备列表）的硬件模块来帮助其在底层提供与目标板子相一致的电信号，因此只要在配置文件中对所使用的芯片和调试适配器的具体型号进行指定，OpenOCD就可以通过驱动与连接有硬件芯片的适配器进行数据通信，从而最终实现板级代码的烧写和调试。</p>
<p>通常市场上常见的调试适配器都可以支持一种或多种传输协议，比如在本项目中，我使用的 SEGGER J-Link设备就支持JTAG(Joint Test Action Group，即联合测试工作组)和SWD(Serial Wire Debug，即串口总线调试)两种通信协议。这里我推荐使用SWD模式来烧写和调试代码，主要是因为SWD只需要两根线就可以轻松完成适配器与硬件之间的连接，而且在SWD模式下，适配器烧写代码的速度更快。最后，有关项目中OpenOCD的具体配置，我会在下一篇文章中进行详细介绍。</p>
</li>
<li><h4 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h4><p><a href="https://atom.io" target="_blank" rel="external">Atom</a>是GitHub开发团队“为21世纪创造的可配置的编辑器”，它拥有非常精致细腻的界面，并且可配置项丰富，加上它提供了包管理功能，人们可以非常方便地安装和管理各种插件，并将Atom打造成真正适合自己的开发工具。除此之外，Atom代码编辑器还支持Windows、Mac、GNU/Linux三大桌面平台，完全免费，并且已经在GitHub上开放了全部的源代码，在经过一段长时间的迭代开发和不断改进后，Atom在性能和稳定性方面都有着显著的改善。</p>
<p>这里我选用Atom作为编辑器主要是因为它完全免费，并且拥有很多功能丰富的插件，其中我最喜爱的就是Atom编辑器本身所集成的Git插件，它可以通过颜色的不同（新添加的为绿色，修改的为黄色，删除的为红色）把对代码和文本的修改显示在编辑器的界面上，而且有改动的文件其文件名和所在文件夹名都会被标记为高亮显示，编辑器底部也会显示当前代码仓库所在分支和对文件所修改的行数统计，这对于像我这样基本每天都会Commit的用户来说是非常方便的。</p>
</li>
</ul>
<h3 id="配置流程"><a href="#配置流程" class="headerlink" title="配置流程"></a>配置流程</h3><ul>
<li><h4 id="安装基础环境"><a href="#安装基础环境" class="headerlink" title="安装基础环境"></a>安装基础环境</h4><p>以下命令主要安装Git和GNU/Make这两个开发工具，其中make软件是包含在build-essential元包（meta-package）当中的（build-essential元包是GNU/Linux为方便开发者所特别制作的，里面除make软件外，还有gcc、g++以及软件库等编译代码时所需要的相关组件）。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$&gt; sudo apt-get update</div><div class="line">$&gt; sudo apt-get install git build-essential</div></pre></td></tr></table></figure>
</li>
<li><h4 id="安装ARM-GCC"><a href="#安装ARM-GCC" class="headerlink" title="安装ARM-GCC"></a>安装ARM-GCC</h4><p><strong>PPA源安装</strong><br>以下命令来源于<a href="https://launchpad.net/~team-gcc-arm-embedded/+archive/ubuntu/ppa" target="_blank" rel="external">GNU ARM Embedded Toolchain PPA</a>网站，目前支持Ubuntu 12.04/14.04/16.04/16.10 32/64-bit操作系统，是官方<strong>推荐</strong>的安装方法，本项目使用的就是这种安装方法。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$&gt; sudo add-apt-repository ppa:team-gcc-arm-embedded/ppa</div><div class="line">$&gt; sudo apt-get udpate</div><div class="line">$&gt; sudo apt-get install gcc-arm-embedded</div></pre></td></tr></table></figure>
<p>当然，如果你之前也看过国外开源飞控中有关交叉工具链安装方法方面的资料，你就会发现下面这种PPA源安装方式也很常见：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$&gt; sudo add-apt-repository ppa:terry.guo/gcc-arm-embedded</div><div class="line">$&gt; sudo apt-get update</div><div class="line">$&gt; sudo apt-get install gcc-arm-none-eabi</div></pre></td></tr></table></figure>
<p>这里我要解释一下以上两种PPA源安装方式的区别，以下内容摘自<a href="https://launchpad.net/gcc-arm-embedded/+announcement/13824" target="_blank" rel="external">GNU ARM Embedded Toolchain官网的通告</a>：</p>
<blockquote>
<p>For our 2015Q4 GCC 5 release we decided to move from the old PPA maintained by Terry Guo to a team maintained one. We also took advantage of that move to rename the package from <strong>gcc-arm-none-eabi</strong> to <strong>gcc-arm-embedded</strong>.</p>
</blockquote>
<p>上面的文字已经写得非常清楚了，从2015Q4 GCC 5版本开始，官方就将PPA源由原先Terry Guo个人维护改成新的基于团队管理的模式，并且将安装包的名字从gcc-arm-none-eabi改为gcc-arm-embedded。所以以上两种安装方式都没问题，只是Terry Guo的PPA源中arm-none-eabi-gcc的版本可能会偏低。</p>
<p><strong>手动安装</strong><br>在终端中运行以下命令来手动安装arm-none-eabi-gcc。首先通过wget命令把工具链下载到本地，然后使用tar命令对文件进行解压缩，最后将工具链的bin目录添加到系统环境变量当中，并用source命令对PATH路径进行更新就可以了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$&gt; <span class="built_in">cd</span> ~/Downloads</div><div class="line">$&gt; wget https://launchpad.net/gcc-arm-embedded/5.0/5-2016-q3-update/+download/gcc-arm-none-eabi-5_4-2016q3-20160926-linux.tar.bz2</div><div class="line">$&gt; tar -xvf gcc-arm-none-eabi-5_4-2016q3-20160926-linux.tar.bz2</div><div class="line">$&gt; <span class="built_in">echo</span> <span class="string">"export PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/Downloads/gcc-arm-none-eabi-5_4-2016q3/bin"</span> &gt;&gt; ~/.bashrc</div><div class="line">$&gt; <span class="built_in">source</span> ~/.bashrc</div></pre></td></tr></table></figure>
<p>最后，根据<a href="http://my.csdn.net/zhengyangliu123" target="_blank" rel="external">zhengyangliu123</a>在《<a href="http://blog.csdn.net/zhengyangliu123/article/details/54783443" target="_blank" rel="external">STM32高级开发(5)-gcc-arm-none-eabi</a>》博客中所讲到的内容，64位的Ubuntu需要安装lsb-core工具才可以正常使用工具链，使用下面的命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$&gt; sudo apt-get update</div><div class="line">$&gt; sudo apt-get install lsb-core</div></pre></td></tr></table></figure>
</li>
<li><h4 id="安装OpenOCD"><a href="#安装OpenOCD" class="headerlink" title="安装OpenOCD"></a>安装OpenOCD</h4><p>OpenOCD工具很好安装，因为Ubuntu的官方仓库中已经包含有该软件包，所以直接使用下面的命令安装即可（不是最新版本的，如果需要最新的0.10.0版本可以从官方仓库中进行下载，并使用make进行编译和安装）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$&gt; sudo apt-get update</div><div class="line">$&gt; sudo apt-get install openocd</div></pre></td></tr></table></figure>
</li>
<li><h4 id="安装Atom"><a href="#安装Atom" class="headerlink" title="安装Atom"></a>安装Atom</h4><p>Atom编辑器可以使用下面PPA源的方式安装，也可以直接到官网上下载对应操作系统位数的.deb包来进行安装（个人喜欢PPA源安装方式，主要是因为系统可以帮你自动解决软件依赖问题）。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$&gt; sudo add-apt-repository ppa:webupd8team/atom</div><div class="line">$&gt; sudo apt-get update</div><div class="line">$&gt; sudo apt-get install atom</div></pre></td></tr></table></figure>
</li>
<li><h4 id="下载并编译源码"><a href="#下载并编译源码" class="headerlink" title="下载并编译源码"></a>下载并编译源码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$&gt; <span class="built_in">cd</span> ~/Desktop</div><div class="line">$&gt; git <span class="built_in">clone</span> https://github.com/microdynamics-quadcopter/breeze_firmware_none.git</div><div class="line">$&gt; <span class="built_in">cd</span> breeze_firmware_none/make</div><div class="line">$&gt; make all</div></pre></td></tr></table></figure>
<p><img src="/images/breeze/embedded/breeze_make_all.png" alt="breeze_make_all"></p>
</li>
<li><h4 id="烧写或调试程序"><a href="#烧写或调试程序" class="headerlink" title="烧写或调试程序"></a>烧写或调试程序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; make burn</div></pre></td></tr></table></figure>
<p><img src="/images/breeze/embedded/breeze_make_burn.png" alt="breeze_make_burn"></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; make Debug</div></pre></td></tr></table></figure>
<p><img src="/images/breeze/embedded/breeze_make_debug.png" alt="breeze_make_debug"></p>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>首先我要说的是目前国内高校的STM32嵌入式教育基本上被KEIL+IAR所垄断了，虽然这些商业化的软件把代码编辑、编译和调试等功能集成在一个带有界面的程序当中，这对于很多刚开始接触STM32开发的新手来说是非常方便的，但是其缺点也非常明显：<strong>它们阻碍了初学者对交叉编译工具链以及整个编译过程的理解</strong>。而且相比于开发X86或X64架构的桌面程序，我个人认为编写嵌入式程序的开发者更需要理解编译器的相关知识，因为往往硬件的ROM、RAM或FLASH空间是非常有限的，你只有通过学习才能知道如何通过设置编译器的命令参数来优化.bin或.elf生成文件的大小。除此之外，你还能通过配置链接脚本中TEXT段、DATA段、BSS段以及堆、栈的起始地址和空间容量等参数来获得定制STM32程序运行时的能力。因此，对于那些刚开始学习STM32并打算精通其开发的同学来说，我推荐一开始就放弃<strong>Windows+KEIL MDK</strong>的固有学习模式，而直接使用<strong>GNU/Linux+ARM GCC+OpenOCD</strong>搭建开发环境来进行学习。虽然大家在刚开始学的过程中会出现很多问题，也会觉得很不适应，但是我相信过一段时间之后你就会明白这套开源工具链的强大之处了。</p>
<p>最后通过以上的介绍，我想大家对开发工具链以及其整个配置流程都有了一个比较清晰的认识，接下来我会通过介绍项目仓库中Makefile的设计思想和参数配置来详细讲解在GNU/Linux下是如何像KEIL MDK那样对STM32工程进行组织的，以及ARM-GCC和OpenOCD这两个软件的具体使用方法。当然，这里我要特别感谢HandsFree OpenRE库的创建者（马学长和陈学长）和相关维护人员，让我可以非常方便地学习到GNU/Linux下STM32嵌入式开发的相关知识。除此之外，我也非常感谢以上文章中所介绍过的开发工具的缔造者们，是他们让我真正体会到了什么是嵌入式开发应有的效率和乐趣！</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> Breeze微型四轴系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Micro Quadcopter </tag>
            
            <tag> STM32 </tag>
            
            <tag> GNU/Linux </tag>
            
            <tag> GNU/Make </tag>
            
            <tag> Makefile </tag>
            
            <tag> ARM-GCC </tag>
            
            <tag> OpenOCD </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Breeze微型四轴系列（一）：硬件电路板设计]]></title>
      <url>http://myyerrol.io/zh-cn/2017/10/21/breeze_quadcopter_1_hardware_design/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我曾经在大二的时候为完成数字电路实验而简单地学过一些硬件电路板设计，当时我看的是郭天祥老师的教程视频，里面有关Altium Designer 6.9软件的操作可以说是讲得非常细致，但是由于后来临近期末考试，时间较为紧迫，而且实验电路本身并不复杂，所以我只学了其中的PCB部分之后就没再深入地学习下去了。</p>
<p>可能是之前我还有一些PCB设计的基础，所以这次在设计Breeze微型四轴飞行器PCB的时候感觉还是比较容易上手的。我最早是在Ubuntu 14.04上用<a href="http://kicad-pcb.org" target="_blank" rel="external">KiCad</a>来设计硬件（因为Crazyflie 1.0四轴飞行器的PCB就是用KiCAD画的），但是后来综合考虑到KiCAD在处理复杂元器件布线以及规则约束方面的短板，所以我们最终还是决定使用功能更加强大的Altium Designer 16来重新完成对PCB的绘制工作。</p>
<a id="more"></a>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Breeze微型四轴飞行器硬件电路主要由五个部分组成，以下是硬件的架构图：</p>
<p><img src="/images/breeze/hardware/breeze_hardware_architecture.png" alt="breeze_hardware_architecture"></p>
<p><strong>电机驱动模块</strong><br>电机驱动模块主要负责接收主控制器发过来的PWM（脉冲宽度调制）信号来控制四轴飞行器每个有刷空心杯电机的转速。</p>
<p><strong>电源管理模块</strong><br>电源管理模块是四轴飞行器能量的来源，它的主要功能有：负责USB和锂电池电源的切换、管理锂电池的充放电以及对输入的电源进行降稳压操作。</p>
<p><strong>传感器模块</strong><br>传感器模块包括了陀螺仪、加速度计、磁力计和气压计。正是由以上这些传感器所构成的10自由度IMU（惯性测量单元）为四轴飞行器提供了绝对或相对的位置和姿态信息，使得四轴飞行器可以在运动过程中获知自身的运动状态，使其可以更好地预估自己的行为。</p>
<p><strong>无线通信模块</strong><br>无线通信模块根据预先制订的通信协议，在四轴飞行器和远程PC端之间建立起数据通信的桥梁，便于在PC端控制和监视飞行器的运动状态。</p>
<p><strong>主控制器模块</strong><br>主控制器模块是四轴飞行器的核心，它主要接收从上层传感器和无线通信模块发过来的数据，并根据不同的控制命令对姿态数据进行数学解算，最后将解算结果以PWM信号的形式发送给电机驱动模块。</p>
<h2 id="PCB软件"><a href="#PCB软件" class="headerlink" title="PCB软件"></a>PCB软件</h2><h3 id="KiCad"><a href="#KiCad" class="headerlink" title="KiCad"></a>KiCad</h3><p><img src="/images/breeze/hardware/logo_kicad.png" alt="kicad_logo"></p>
<ul>
<li><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p><a href="http://kicad-pcb.org" target="_blank" rel="external">KiCad</a>是一款开源的电路原理图和PCB设计工具，它可以被用来设计较为简单的硬件电路板。KiCad软件不对电路板的尺寸做任何的限制，它最多可以处理32个覆铜层、14个工艺层以及4个辅助层。KiCad可以创建所有与构建PCB有关的文件，比如光绘文件、钻孔文件、元器件位置文件等。</p>
</li>
<li><h4 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h4><p>以下是我前期在Ubuntu 14.04上用KiCad软件所设计的Breeze微型四轴飞行器PCB图，由于KiCad软件不像Altium Designer那样带有各种IC封装生成的向导功能，所以当时我是边看IC的Datasheet边用KiCad的PCB库编辑功能来进行封装的绘制，这个过程很花费时间，不过也确实让我学到一些PCB封装设计方面的技巧和经验（比如根据手焊或机焊方式的不同来确定IC四周引脚的长宽度等）。最后很遗憾的是，由于我们对Breeze微型四轴飞行器的功能需求进行了较大的变更并考虑到后期PCB打板制作方面的问题，因此我们决定放弃KiCad转而使用Altium Designer来完成PCB电路板的设计工作（这也是为什么下图中的PCB没有完成的原因），但有一点我不得不说，作为一个开源且跨平台的EDA软件，KiCad真的很好上手，而且它在国外Hack界拥有非常高的人气的，毕竟<a href="https://www.bitcraze.io" target="_blank" rel="external">Crazyflie</a>和<a href="https://pixhawk.org" target="_blank" rel="external">Pixhawk</a>两大知名的开源项目都曾使用KiCad作为其PCB设计的工具。</p>
<p><img src="/images/breeze/hardware/breeze_pcb_kicad.png" alt="breeze_pcb_kicad"></p>
</li>
</ul>
<h3 id="Altium-Designer"><a href="#Altium-Designer" class="headerlink" title="Altium Designer"></a>Altium Designer</h3><p><img src="/images/breeze/hardware/logo_altium.jpg" alt="altium_logo"></p>
<ul>
<li><h4 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h4><p><a href="http://www.altium.com" target="_blank" rel="external">Altium Designer</a>是原Protel软件开发商Altium公司推出的一款EDA（电子设计自动化）软件，它集成了原理图设计、电路仿真、PCB绘制编辑、拓扑逻辑自动布线、信号完整性分析和设计输出等功能。除此之外，Altium Designer设计平台还拓宽了板级设计的传统界面，全面集成了FPGA和SOPC设计，为设计者提供了全新的一体化解决方案，提高了电路设计的质量和效率。</p>
</li>
<li><h4 id="成果-1"><a href="#成果-1" class="headerlink" title="成果"></a>成果</h4><p>下图所展示的就是我最终用Altium Designer所完成的Breeze微型四轴飞行器的PCB文件，该PCB采用双面布局走线、双面覆铜处理、四层电路板设计。除此之外，我对连接有直流电机器件的电源线路进行了加粗处理，以提高电流对电机的驱动能力，还有就是由于该PCB使用了陶瓷天线（下图最中间上面那个突出的长方形区域），为了减少电源层对其信号传输的干扰，我对四层电路板中的VCC和GND层进行了分割处理，即将陶瓷天线元器件下方的VCC和GND层掏空，这样电流不从陶瓷天线的底部通过，自然便可降低由电流所产生的电磁干扰。最后总结一下，Altium Designer这款EDA软件是我用过的PCB设计工具（其它有KiCad和Cadence SPB）中对初学者最友好的，原因主要得益于其美观的人机交互界面、便捷强大的设计功能和丰富的教程案例，总之，如果你是刚开始接触PCB设计的新人，我推荐你学习Altium Designer。</p>
<p><img src="/images/breeze/hardware/breeze_pcb_altium.png" alt="breeze_pcb_altium"></p>
</li>
</ul>
<h3 id="Cadence-SPB"><a href="#Cadence-SPB" class="headerlink" title="Cadence SPB"></a>Cadence SPB</h3><p><img src="/images/breeze/hardware/logo_cadence.jpg" alt="cadence_logo"></p>
<ul>
<li><h4 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h4><p><a href="https://www.cadence.com" target="_blank" rel="external">Cadance SPB</a>Cadence旗下用于PCB板级设计的EDA软件。Cadence SPB是一套PCB板级设计完整解决方案，涵盖了从原理图设计到PCB设计以及生产加工装配输出的整个流程。Cadence SPB包括原理图输入设计工具，元件库管理工具，PCB设计工具和一个自动/交互式的强大的布线工具。</p>
<p><strong>OrCAD</strong><br>Cadence OrCAD Capture是一款多功能的PCB原理图输入工具。OrCAD Capture作为行业标准的PCB原理图输入方式，是当今世界最流行的原理图输入工具之一，具有简单直观的用户设计界面。OrCAD Capture CIS具有功能强大的元件信息系统，可以在线和集中管理元件数据库，从而大幅提升电路设计的效率。</p>
<p><strong>Allergo</strong><br>Cadence Allegro PCB Designer是一个可扩展的，经过验证的PCB设计环境，在解决技术和方法的挑战同时，可以使设计周期可控并尽可能缩短。Allegro PCB Designer解决方案采用了基础软件加选项的配置方案，包含了与PCB设计相关的一个完整的设计流程所需的一切。</p>
</li>
</ul>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="电机驱动"><a href="#电机驱动" class="headerlink" title="电机驱动"></a>电机驱动</h3><p>电机驱动模块部分负责接收主控发送的PWM信号，并控制每个空心杯电机的转速。</p>
<ul>
<li><h4 id="器件"><a href="#器件" class="headerlink" title="器件"></a>器件</h4><p><strong>SI2302场效应管</strong><br>SI2302是N沟道增强型场效应管，它的源极和漏级接在N 型半导体上。相比于三极管，它的优点在于其完全导通的时候，源漏级电阻为毫欧级别，即它自身的耗散非常小，这使得用它作为电机驱动管是非常合适的。</p>
<p>SI2302的工作原理为当施加在栅极上的正电压达到栅压的时候，由于电场的作用，此时N型半导体的源极和漏级的负电子就会被吸引出来而涌向栅极，但由于金属氧化膜的阻挡，使得电子聚集在两个N沟道之间的P型半导体中，从而形成电流，使源极和漏级之间导通。</p>
<p><strong>720有刷空心杯电机</strong><br>空心杯电机属于直流、永磁、伺服微特电机。空心杯电机在结构上突破了传统电机的转子结构，采用的是无铁芯转子。空心杯电机具有十分突出的节能、控制和拖动特性。</p>
<p>Breeze微型四轴飞行器使用的是有刷空心杯电机（转子无铁芯），转速为30000转/分钟，直径为7mm，长度为20mm（简称720电机），电机轴直径为1mm。</p>
</li>
<li><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><p><img src="/images/breeze/hardware/breeze_motor.png" alt="breeze_motor"></p>
<p>Breeze微型四轴飞行器使用的是有刷空心杯电机，所以电机的控制属于有刷直流电机控制，这相对于无刷电调来说要简单很多。只需要将信号的驱动能力增大，就可以驱动有刷电机。</p>
<p>电机调速主要利用了PWM（脉冲宽度调制）原理，PWM是一种模拟控制方式，它根据相应载荷的变化来调制场效应管栅极的偏置，来实现场效应管导通时间的变化，从而实现开关稳压电源输出的改变。这种方式能使电源的输出电压在工作条件变化时保持恒定，是利用微处理器的数字信号对模拟电路进行控制的一种非常有效地技术。</p>
<p>上图中，电源和电机之间连接了一个型号为BAT54KFLM的二极管，它的功能主要是分流有刷空心杯电机在PWM工作模式下产生的反电动势尖峰。接下来，电路中使用SI2302场效应管作为电机驱动，这得益于其在完全导通的时候，源漏级电阻非常小，即当将其用作大电流负载的驱动管时，其自身的耗散非常小，因此接近全部的电流可以被用来驱动电机，使得该电路表现出了很好的驱动能力。</p>
<p>最后，每个SI2302场效应管的栅极都接了一个阻值为10K欧姆的下拉电阻，目的是为了防止主控在没有给栅极发送PWM信号的时候，电机由于PWM信号不稳定而开始猛转。在栅极接一个下拉电阻，确保了场效应管的输入信号要么是高，要么是低，没有不确定的第三种状态。因此，电机也就只用两种状态，要么转，要么不转。主控输出的是PWM波形，用于控制场效应管的导通和截止，从而控制电机的转动速度。</p>
</li>
</ul>
<h3 id="电源管理"><a href="#电源管理" class="headerlink" title="电源管理"></a>电源管理</h3><p>电源管理模块负责USB和锂电池电源的切换、管理锂电池的充放电以及对输入的电源进行降稳压操作。</p>
<ul>
<li><h4 id="器件-1"><a href="#器件-1" class="headerlink" title="器件"></a>器件</h4><p><strong>NUF2221W1T2</strong><br>NUF2221W1T2是带有ESD保护的USB终止器。它可以对USB电路进行保护，防止过高的输入电压对整个系统的损坏。</p>
<p><strong>MAX16054</strong><br>MAX16054是带有ESD保护的单个开关去抖以及内部闭锁电路的按键通/断控制器，可接受机械开关产生的嘈杂输入，并经过一个有工厂设置的延迟时间后产生干净的数字锁存输出。在开关通、断期间，MAX16054无接触抖动，只有对开关输入去抖后的下降沿触发时，输出状态才会改变。在输入上升沿，输出保持不变。</p>
<p><strong>BQ24075</strong><br>BQ24075芯片集成了锂电池线性充电和系统电源管理。它接受USB或锂电池的输入并且支持最大为1.5A的充电电流。其内置的动态电源管理功能可以防止在USB配置出错时出现充电崩溃的情况。</p>
<p>除此之外，BQ24075还拥有强大的动态电源路径管理功能，它可以不断地监视电池充电的状态，并根据输入电流的大小，提供最佳的充电电流。这使得其能有效地减少电池充电以及放电的循环次数，提高了电池的使用寿命和工作效率。</p>
<p>BQ24075有三种输入限制模式：100mA、500mA和用户自定义，这使得它能更容易地遵守不同USB的标准。</p>
<p><strong>TPS79301</strong><br>TPS79301是可调的低压差线性稳压器。它具有高电源抑制比、超低噪声、快速启动以及很好的线性负载瞬态响应等特点。TPS79301可以通过在对应的引脚连接不同阻值的电阻，来改变输出电压的大小。</p>
</li>
<li><h4 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h4><p><img src="/images/breeze/hardware/breeze_power_battery.png" alt="breeze_power_battery"></p>
<p>当不连接USB，而仅采用电池供电时，BQ24075对电池进行放电管理，其10号引脚输出的VCOM信号使电路中的2N7002场效应管导通，R22和R26两个电阻对电池进行分压，此时处理器开始不断地采样VBAT的值，如果VBAT的值过低，处理器就会给MAX16054发送SYSOFF信号，使其关断系统，防止因电池过放而导致的损害。</p>
<p><img src="/images/breeze/hardware/breeze_power_nuf2221w1t2.png" alt="breeze_power_nuf2221w1t2"></p>
<p>NUF2221W1T2在电路中的作用主要是对USB进行缓冲或保护，防止因为USB的错误导致电路系统出现意外情况。</p>
<p><img src="/images/breeze/hardware/breeze_power_max16054.png" alt="breeze_power_max16054"></p>
<p>MAX16054电路右上部分的2N7002场效应管以及10K欧姆的电阻组成了可控的下拉。VUSB连接到USB供电端，若有USB供电，则场效应管导通，从而BQ24075的SYSOFF引脚被拉低，此时BQ24075不会识别处理器间接发送过来的关机信号。保证了在使用USB进行调试的时候，不会因为此时电池电压低而出现关机的情况。</p>
<p><img src="/images/breeze/hardware/breeze_power_bq24075.png" alt="breeze_power_bq24075"></p>
<p>BQ24075 充电时的参数可以通过连接不同阻值大小的电阻来确定，以下是具体的计算公式：</p>
<p><strong>快速充电电流（ISET）</strong><br><img src="/images/breeze/hardware/breeze_formula_1.jpg" alt="breeze_formula_1"></p>
<p><strong>输入电流限制（ILIM）</strong><br><img src="/images/breeze/hardware/breeze_formula_2.jpg" alt="breeze_formula_2"></p>
<p><strong>快速充电安全定时器（TMR）</strong><br><img src="/images/breeze/hardware/breeze_formula_3.jpg" alt="breeze_formula_3"></p>
<p>根据以上官方提供的公式和电路图中的电阻阻值，可以得出此时BQ24075的快速充电电流为740mA，输入电流限制为1.3A，安全定时器为80min左右。</p>
<p><img src="/images/breeze/hardware/breeze_power_tps79301_vcca.png" alt="breeze_power_tps79301_vcca"></p>
<p><img src="/images/breeze/hardware/breeze_power_tps79301_vcc.png" alt="breeze_power_tps79301_vcc"></p>
<p><img src="/images/breeze/hardware/breeze_power_tps79301_guide.png" alt="breeze_power_tps79301_guide"></p>
<p>TPS79301可调输出的稳压值可以通过以下计算公式得到：<br><img src="/images/breeze/hardware/breeze_formula_4.jpg" alt="breeze_formula_4"></p>
<p>首先以上图中的模拟电源部分为例讲解。根据官方提供的连接关系图，可以得知上述公式中的R1和R2分别对应模拟电源部分中的R和R9，因此计算得到输出的VCCA电压为2.8V。</p>
<p>同理，对于数字电源部分，当不接USB供电时，BQ24075的PGOOD引脚输出为高电平，此时公式中的R1对应于R11和R15的并联，公式中的R2对应R16。当连接USB供电并且电池充满电时，PGOOD输出低电平，此时公式中的R1对应R11，公式中的R2对应R15和R16的并联。通过计算，输出的VCC电压为3.3V。</p>
</li>
</ul>
<h3 id="传感器"><a href="#传感器" class="headerlink" title="传感器"></a>传感器</h3><p>本电路模块使用的IMU传感器包含三轴陀螺仪、三轴加速度和三轴数字罗盘。基本原理是对陀螺仪测量到的角速度进行积分得出姿态角，并使用数字罗盘测量得到偏航角、加速度传感器测量到的横滚角和俯仰角对陀螺仪的飘移进行补偿，从而得到较高精度的姿态信息。</p>
<ul>
<li><h4 id="器件-2"><a href="#器件-2" class="headerlink" title="器件"></a>器件</h4><p><strong>MPU6050</strong><br>MPU6050模块是InvenSense公司推出的一款低成本的6轴传感器模块，包括三轴加速度，三轴角速度。其体积小巧，用途广阔。</p>
<p>MPU6050对陀螺仪和加速度计分别用了三个16位的ADC，将其测量的模拟量转化为可输出的数字量。并通过最高至400kHz的IIC接口输出测量数据，为了精确跟踪快速和慢速的运动，传感器的测量范围都是用户可控的，陀螺仪可测范围为±250，±500，±1000，±2000°/秒，加速度计可测范围为±2，±4，±8，±16g可准确追踪快速与慢速动作。</p>
<p><strong>HMC5883L</strong><br>HMC5883L模块是Honeywell公司推出的一种表面贴装的高集成模块，并带有数字接口的弱磁传感器芯片，应用于低成本罗盘和磁场检测领域。</p>
<p>HMC5883L包含最先进的高分辨率HMC118X系列磁阻传感器，并附带Honeywell专利的集成电路包括放大器、自动消磁驱动器、偏差校准、能使罗盘精度控制在1°~2°的12位模数转换器等。HMC5883L采用Honeywell各向异性磁阻 (AMR) 技术，这使得其拥有轴向高灵敏度和线性高精度的特点。HMC5883L传感器带有的对于正交轴低敏感性的固相结构能用于测量地球磁场的方向和大小，其测量范围从毫高斯到8高斯。除此之外，它使用IIC系列总线接口与其他器件进行数据通信。</p>
<p><strong>MS5611</strong><br>MS5611气压传感器是由MEAS（瑞士）推出的一款SPI和I²C总线接口的新一代高分辨率气压传感器，分辨率可达到10cm。该传感器模块包括一个高线性度的压力传感器和一个超低功耗的24位模数转换器（工厂校准系数）。MS5611提供了一个精确的24位数字压力值和温度值以及不同的操作模式，可以提高转换速度并优化电流消耗。高分辨率的温度输出无须额外传感器可实现气压计/温度计功能。可以与几乎任何微控制器连接。通信协议简单，无需在设备内部寄存器编程。MS5611压力传感器只有5.0毫米×3.0毫米×1.0毫米的小尺寸可以集成在移动设备中。这款传感器采用领先的MEMS技术并得益于MEAS（瑞士）十余年的成熟设计以及大批量制造经验，保证产品具有高稳定性以及非常低的压力信号滞后。</p>
</li>
<li><h4 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h4><p><img src="/images/breeze/hardware/breeze_sensor_mpu6050.png" alt="breeze_sensor_mpu6050"></p>
<p><img src="/images/breeze/hardware/breeze_sensor_hmc5883l.png" alt="breeze_sensor_hmc5883l"></p>
<p><img src="/images/breeze/hardware/breeze_sensor_ms5611.png" alt="breeze_sensor_ms5611"></p>
<p>MPU6050和MS5611连接到STM32的主IIC总线上，而HMC5883L连接到MPU6050的从IIC总线上。在初始化MPU6050时，可以设置主IIC总线和从IIC总线直通，这样STM32就可以直接通过主IIC总线访问从IIC总线，从而读取HMC5883L中的数据了。</p>
<p>数据更新模式采用硬件中断模式，即MPU6050和HMC5883L都有一个硬件中断引脚MPU_INT和HM_INT，这样能保证数据到来时间的准确，让CPU资源最大化利用。</p>
</li>
</ul>
<h3 id="无线通信"><a href="#无线通信" class="headerlink" title="无线通信"></a>无线通信</h3><p>无线通信模块负责四轴飞行器与远程PC之间的数据通信。</p>
<ul>
<li><h4 id="器件-3"><a href="#器件-3" class="headerlink" title="器件"></a>器件</h4><p>nRF51822是一个超低功耗的2.4GHz无线SoC。它集成了2.4GHz收发器、ARM Cortex-M0架构的32位CPU、闪存以及数字和模拟外设接口。它支持蓝牙低功耗和一系列专有2.4GHz通信协议，功能非常强大。</p>
</li>
<li><h4 id="原理-4"><a href="#原理-4" class="headerlink" title="原理"></a>原理</h4><p><img src="/images/breeze/hardware/breeze_wireless.png" alt="breeze_wireless"></p>
<p><img src="/images/breeze/hardware/breeze_wireless_guide.png" alt="breeze_wireless_guide"></p>
<p>Breeze微型四轴飞行器的无线通信电路主要参考了上图的官方示例，并在原有的基础之上修改了部分GPIO引脚的功能，使其可以对电源管理模块进行监视和控制。除此之外，nRF51822芯片使用USART接口与主控STM32进行数据的交互，而且预留的SCLK和SDIO也方便之后使用J-Link的SWD模式来进行代码的下载和调试。</p>
</li>
</ul>
<h3 id="主控制器"><a href="#主控制器" class="headerlink" title="主控制器"></a>主控制器</h3><p>主控制器模块的核心是微处理器，它负责采集传感器的数据，并根据命令对数据进行融合和计算，最后将计算好的数据发送给四轴飞行器的执行机构。</p>
<ul>
<li><h4 id="器件-4"><a href="#器件-4" class="headerlink" title="器件"></a>器件</h4><p><strong>STM32F103T6U6</strong><br>STM32F103T6U6是意法半导体公司推出的基于ARM Cortex-M3内核的32位高性能微处理器。它工作在72MHz的主频下，拥有32K字节的Flash和10K字节的SRAM，并且提供了增强型的I/O和外设接口，其中包含2路12位ADC、1路7通道DMA、2路16位通用定时器和1路PWM定时器。同时，STM32F103T6U6也包含标准和先进的通信接口：1路IIC和SPI总线、2路USART、1路USB和1路CAN。</p>
<p><strong>CP2102</strong><br>CP2102是高度集成的USB转UART控制器芯片，其内置了USB2.0全速功能控制器、USB收发器、晶体振荡器、EEPROM及异步串行数据总线（UART），支持调制解调器全功能信号，无需任何外部的USB器件。</p>
<p>CP2102与其他USB转串口电路的工作原理类似，通过驱动程序将PC的USB口虚拟成COM口以达到扩展的目的。</p>
</li>
<li><h4 id="原理-5"><a href="#原理-5" class="headerlink" title="原理"></a>原理</h4><p><img src="/images/breeze/hardware/breeze_controller_stm32f103t6u6.png" alt="breeze_controller_stm32f103t6u6"></p>
<p>如上图所示，该电路包含了STM32的最小系统：复位电路、外部时钟电路、启动模式选择电路和电源退耦电路等。查阅意法半导的官方手册可以知道，STM32系列单片机都是低电平复位。于是采用如图所示的方法，将NRST引脚连接到对应的复位电路中。该电路图中STM32外接了一个16MHz的无源晶振，通过内部倍频，STM32的系统时钟最高可达72MHz。STM32的启动模式分为三种，可以从下面的表格给出：</p>
<p><img src="/images/breeze/hardware/breeze_table.png" alt="breeze_table"></p>
<p>电路图中STM32的BOOT0引脚默认是被拉低的，即STM32默认是运行在正常工作模式下的。BOOT0和BOOT1引脚的电平都可以进行配置以满足不同的实际需求。</p>
<p>电源退耦电路不仅是主控电路才需要，对于所有的数字电路和模拟电路共存的系统，电源退耦都是必不可少的。电源退耦就是将电源上的噪声电压引入到地面，让电源电压保持在一个稳定的值，从而使系统也能够稳定地工作。上图中右上角就是典型的电源退耦电路，其实现方法是在电源的正负极之间并联一大一小两个电容。</p>
<p>因为电容对频率高的信号，呈现低阻性，对直流呈现高阻特性。电源上的噪声对地平面而言就是一个交流信号，交流信号能通过电容到达地平面，而电源本身是直流的，电容对它会呈现出无穷大的阻力。因此，通过示波器可以看到，加了退耦电容的电源要比没加的波形要稳定得多。</p>
<p><img src="/images/breeze/hardware/breeze_controller_cp2102.png" alt="breeze_controller_cp2102"></p>
<p>CP2102电路原理比较简单，它负责转换USB和RS232接口的电平，主要用于后期的代码调试中。</p>
<p><img src="/images/breeze/hardware/breeze_controller_expansion.png" alt="breeze_controller_expansion"></p>
<p>扩展电路将主控制器和无线通信模块中的一些引脚引到排插上，提高了四轴飞行器的可扩展性，并方便了之后的代码下载和调试。</p>
</li>
</ul>
<h2 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h2><h3 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h3><ul>
<li><p>使用Altium Designer修改完原理图的一些电气连接，并将更改同步到PCB中的时候，软件提示有<strong>Unknown Pin</strong>和<strong>Failed to add class member</strong>这两种形式的错误。</p>
</li>
<li><p>手动给QFN封装的中间散热焊盘添加DGND等电源网络时，软件提示有多个DRC报错，错误内容是QFN封装中间焊盘和焊盘上的多个过孔之间发生了碰撞。</p>
</li>
<li><p>在给PCB正反面进行覆铜的时候，有些布局靠内部的元件焊盘并没有被覆上铜，导致DRC检查报错。</p>
</li>
</ul>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><ul>
<li><p>错误原因是元件网络表和对象类表发生改变（比如添加、删除元件的某个引脚），这与之前PCB中的已有内容发生冲突。解决办法是首先使用快捷键D+N+N，打开Netlist Manager，删除板子上的所有Net；接着使用快捷键D+C，打开Object Class Explorer，删除Component Classes中与项目有关的所有Class；最后选择重新从原理图中导入。</p>
</li>
<li><p>错误原因是没有给QFN封装中间焊盘的过孔添加DGND等网络属性，导致DRC误报。因此解决办法是在出错变绿的地方按下Shitf+V，调出Board Insight管理器，然后在里面逐一对过孔的网络属性进行修改。</p>
</li>
<li><p>错误原因是元件布局较为密集，导致没有将所有元件的焊盘都覆上铜。因此解决办法是拉大内部元件之间的空间，使其与外围的覆铜切面要尽可能的大，而对于那些实在无法与其它地层相连的覆铜，可以使用过孔的方式，将其划分到相应的电源分割层中去。</p>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>经过三周左右的时间，我终于完成了Breeze微型四轴飞行器的硬件电路板设计工作。通过参考其他四轴飞行器爱好者所设计的PCB工程并成功解决硬件设计过程中所出现的一些问题，我感觉自己收获很多，当然我希望阅读本篇文章的四轴飞行器初学者或爱好者也能够从中了解到PCB设计的基本流程以及所需掌握的知识。</p>
<p>接下来，我会用几篇文章的篇幅来重点地讲解Breeze微型四轴飞行器的嵌入式开发工作，内容主要涉及Linux下STM32开发环境的搭建、编译和链接原理讲解、飞控算法详细剖析等，欢迎对此感兴趣的爱好者前来阅读。</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> Breeze微型四轴系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Micro Quadcopter </tag>
            
            <tag> Altium Designer </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Breeze微型四轴系列（零）：总纲]]></title>
      <url>http://myyerrol.io/zh-cn/2017/10/06/breeze_quadcopter_0_superclass/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我记得自己第一次接触四轴飞行器是在大一，有一次我在<a href="https://www.ted.com" target="_blank" rel="external">TED</a>上看了由瑞士苏黎世联邦理工大学的Raffaello D’Andrea教授所做的关于四轴飞行器的演讲，题目是<strong>“The astounding athletic power of quadcopters”</strong>，教授边用四轴飞行器进行演示并对其中所用到的数学理论进行讲解，对于当时什么理论都不懂的我来说，最令我惊讶的是在演示环节，那些四轴飞行器能够在高速移动的时候保证放在其顶部的细棍和酒杯不失去平衡，可以在桨叶受损的情况下依然可控，可以通过协作接住由人所抛出的小球并将其击回，可以判断人的手势来做不同的动作等。当时看完这段视频之后我的内心难以平静，脑海里萌生了自制四轴飞行器的想法，但由于后来我加入了舞蹈机器人基地并忙于组内的开发任务，所以这个想法就暂时被搁置了。</p>
<a id="more"></a>
<p><img src="/images/ted/ted_quadcopter_1.jpg" alt="ted_quadcopter_1"></p>
<p><img src="/images/ted/ted_quadcopter_2.jpg" alt="ted_quadcopter_2"></p>
<p>一转眼到了大三下学期，我从舞蹈机器人机基地退役。一个偶然的机会，我从<a href="https://github.com/maksyuki" target="_blank" rel="external">maksyuki</a>那里得知有一个叫做<a href="https://www.bitcraze.io" target="_blank" rel="external">Crazyflie</a>的微型四轴飞行器，这一次我算是打从心底里被震撼到了，以下是几点原因：</p>
<ul>
<li><p><strong>硬件</strong></p>
<p>首先Crazyflie微型四轴飞行器的硬件设计得非常优秀，不管是PCB机械层的轮廓设计、信号层上元器件的布局还是整个电路板的走线都非常合理，而且最重要的是Bitcraze团队将模块化的理念带入到Crazyflie产品的设计之中，这使得Crazyflie微型四轴除了基本的飞行功能之外，还可以通过堆叠不同扩展坞的方式来实现不同功能的扩展。</p>
</li>
<li><p><strong>软件</strong></p>
<p>Crazyflie微型四轴飞行器的软件开发全部基于Linux开发环境，并使用已有开源且强大的软件工具（比如ARM-GCC，Make、PyQt等）进行开发。除此之外，Crazyflie微型四轴飞行器的软件源码还被托管在GitHub上，非常方便世界各地的爱好者、研究者对其进行二次开发。</p>
</li>
<li><p><strong>文档</strong></p>
<p>除了以上两点有关技术层面的优势，Crazyflie微型四轴飞行器项目还有一个最令我无法抗拒的因素——丰富的文档。说实话，我从来没有看到过一家不以盈利为主要目的团队可以将自己的开源项目文档写得如此详细，但是Bitcraze团队做到了，他们这种乐于分享的精神实在是值得我们学习。</p>
<p><img src="/images/crazyflie/crazyflie.jpg" alt="crazyflie"></p>
</li>
</ul>
<p>总之，这次在看过Crazyflie微型四轴项目之后，我脑海中有关自制四轴飞行器的想法又被重新唤醒了，于是我们创建了MicroDynamics团队，而Breeze微型四轴项目也就因此顺利地诞生了。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>有人曾经说过：<strong>当你有好的想法时，就要立即去实现它</strong>，特别是如果你从心底里热爱某种事物，你一定会迫不及待地想尽一切办法来完成它，尽管在实现的过程中会遇到很多困难，也会牺牲一些其它的东西，但是当你有朝一日能够看到自己的成果让更多的人受益时，我想没有什么比这更令人快乐的了。我们在组建团队之前也只是两个喜欢在大学里进行DIY的机器人爱好者，但我们希望可以通过自己的双手来为机器人社区做出自己的贡献，哪怕只要很少的一些。</p>
<p>MicroDynamics团队在组建过程中曾在一定程度上受到基地马文科等学长所创建<strong>Hands Free</strong>项目的影响，有关其项目更详细的介绍，请访问<a href="https://github.com/HANDS-FREE/HANDS-FREE.github.io/wiki" target="_blank" rel="external">Hands Free项目官方Wiki</a>。MicroDynamics，顾名思义微型动力，它的名字分别取自Microsoft和BostonDynamics这两家伟大的公司。我们想做的就如同名字所体现的那样——搭建一个小型或微型的开源机器人平台，它要足够的便宜、易于开发并且拥有较强的动力学特性，可以让更多的大学生等机器人爱好者真正地参与到实体机器人的开发过程中来，并从中学到一些有价值的知识。</p>
<p>MicroDynamics团队目前从四轴飞行器平台开始，从底层到顶层搭建一套完整的、面向未来的开源机器人开发框架，以便降低模块之间的耦合性，提高机器人整体开发效率。关于MicroDynamics更多详细的开发资料，请访问<a href="https://github.com/microdynamics" target="_blank" rel="external">MicroDynamics团队GitHub</a>（包含开发规范、日志、工程模板）和<a href="https://github.com/microdynamics-quadcopter" target="_blank" rel="external">MicroDynamics Quadcopter项目GitHub</a>（包含硬件设计、软件代码）。</p>
<h3 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h3><ul>
<li><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><p>MicroDynamics Quadcopter项目是一个面向微型四轴飞行器开发和研究的开源软硬件系统。它以硬件电路和嵌入式框架为核心，丰富的软件算法为支撑，可以完成不同的实验任务。除此之外，在硬件上它还预留有一些接口，可以与第三方定制模块进行连接，便于飞行器功能的扩展。未来在软件上它还将支持目前流行的ROS，使得更多的算法可以被应用其中。</p>
</li>
<li><h4 id="理念"><a href="#理念" class="headerlink" title="理念"></a>理念</h4><p>我们团队的理念是：<strong>开源、探索、创新</strong>。</p>
</li>
<li><h4 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h4><p>我们团队的宗旨是：以开源共享为基本准则，做到<strong>取之开源，回馈开源</strong>；其次要拥有探索未知技术领域的勇气和决心，遇到困难绝不退缩；最后强调技术至上，鼓励在掌握已有知识的基础之上，不断开拓创新，做出属于自己的成果。</p>
</li>
</ul>
<h3 id="开发现状"><a href="#开发现状" class="headerlink" title="开发现状"></a>开发现状</h3><ul>
<li><h4 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h4><p>Breeze微型四轴飞行器硬件电路主要由五个部分组成，以下是硬件的架构图：</p>
<p><img src="/images/breeze/hardware/breeze_hardware_architecture.png" alt="breeze_hardware_architecture"></p>
<p><strong>电机驱动模块</strong><br>电机驱动模块主要负责接收主控制器发过来的PWM（脉冲宽度调制）信号来控制四轴飞行器每个有刷空心杯电机的转速。</p>
<p><strong>电源管理模块</strong><br>电源管理模块是四轴飞行器能量的来源，它的主要功能有：负责USB和锂电池电源的切换、管理锂电池的充放电以及对输入的电源进行降稳压操作。</p>
<p><strong>传感器模块</strong><br>传感器模块包括了陀螺仪、加速度计、磁力计和气压计。正是由以上这些传感器所构成的10自由度IMU（惯性测量单元）为四轴飞行器提供了绝对或相对的位置和姿态信息，使得四轴飞行器可以在运动过程中获知自身的运动状态，使其可以更好地预估自己的行为。</p>
<p><strong>无线通信模块</strong><br>无线通信模块根据预先制订的通信协议，在四轴飞行器和远程PC端之间建立起数据通信的桥梁，便于在PC端控制和监视飞行器的运动状态。</p>
<p><strong>主控制器模块</strong><br>主控制器模块是四轴飞行器的核心，它主要接收从上层传感器和无线通信模块发过来的数据，并根据不同的控制命令对姿态数据进行数学解算，最后将解算结果以PWM信号的形式发送给电机驱动模块。</p>
</li>
<li><h4 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h4><p>Breeze微型四轴飞行器的嵌入式系统架构如下图所示，其中主要包含硬件设备、底层驱动、外设模块和飞控算法等四个部分。</p>
<p><img src="/images/breeze/embedded/breeze_embedded_architecture.png" alt="breeze_embedded_architecture"></p>
<p><strong>硬件设备</strong><br>硬件设备部分包含上面第介绍过的电路模块：电机驱动、电源管理、传感器、无线通信以及主控制器。</p>
<p><strong>底层驱动</strong><br>底层驱动部分包含了常用的外设接口（如IIC、SPI、USART）和内部核心功能（如时钟、延时、中断、定时器、EEPROM、Flash）。它主要是根据STM32官方固件库（上图Libraries部分）中的内容，对系统外设接口或内部核心功能进行进一步的封装，以满足上层外设模块的使用需要。</p>
<p><strong>外设模块</strong><br>外设模块是对具体外设硬件进行操作的函数库，它使用底层驱动中的大量函数来实现对硬件的控制。外设模块包含了IMU、电机、电池、NRF24L01和CommLink通信协议栈等。本章将会在后面介绍其中比较重要的几个。</p>
<p><strong>飞控算法</strong><br>飞控算法处在整个嵌入式架构的最顶层，它的实现是要建立在以上三者的基础之上的，比如高度融合、数据滤波、控制算法等。由于整个四轴飞行器的核心功能都是由飞控算法决定的，所以飞控算法是该嵌入式系统的绝对核心，也是开发的重点。</p>
</li>
<li><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><p>如下图所示，<a href="https://github.com/microdynamics" target="_blank" rel="external">MicroDynamics团队GitHub</a>中主要包含了我们团队自己制定的代码规范，Linux下STM32开发的工程模板文件以及记录有我们在开发过程中所遇问题以及解决办法的日志文件。<a href="https://github.com/microdynamics-quadcopter" target="_blank" rel="external">MicroDynamics Quadcopter项目GitHub</a>中则主要包含了Breeze微型四轴飞行器的硬件电路设计、嵌入式代码以及图形化的上位机调试工具等。总之我们把所有能开源的资料都放到了以下两个GitHub组织里，方便交流学习。</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  由于我们MicroDynamics团队将正式着手开发新一代的微型四轴飞行器，所以Breeze微型四轴飞行器的代码不会再被开发和维护，目前已有内容仅供学习使用。</div>
<p><img src="/images/microdynamics/github_microdynamics.png" alt="github_microdynamics"></p>
<p><img src="/images/microdynamics/github_microdynamics_quadcopter.png" alt="github_microdynamics_quadcopter"></p>
</li>
</ul>
<h3 id="开源协议"><a href="#开源协议" class="headerlink" title="开源协议"></a>开源协议</h3><p>目前MicroDynamics团队的项目文档、开发模板以及Breeze微型四轴飞行器的硬件电路设计、嵌入式代码和上层调试软件均遵循<strong>GPL-3.0许可协议</strong>，使用者可以免费使用和修改代码，但修改和衍生后的代码不允许做为闭源商业软件进行发布和销售。</p>
<p>MicroDynamics团队拥有其所有项目的版权，而对于项目中所用到的其它开源代码，版权则归其原作者所有。在未经授权的情况下，任何个人、组织不得将MicroDynamics团队的代码用于商业行为，否则追究法律责任！</p>
<h2 id="总纲"><a href="#总纲" class="headerlink" title="总纲"></a>总纲</h2><p>以下是我原创的Breeze微型四轴系列文章：</p>
<p><a href="http://myyerrol.io/zh-cn/2017/10/06/breeze_quadcopter_0_superclass/">Breeze微型四轴系列（零）：总纲</a><br><a href="http://myyerrol.io/zh-cn/2017/10/21/breeze_quadcopter_1_hardware_design/">Breeze微型四轴系列（一）：硬件电路板设计</a><br><a href="http://myyerrol.io/zh-cn/2017/11/07/breeze_quadcopter_2_stm32_development/">Breeze微型四轴系列（二）：STM32嵌入式开发-开发环境搭建</a><br><a href="http://myyerrol.io/zh-cn/2017/11/18/breeze_quadcopter_3_stm32_makefile/">Breeze微型四轴系列（三）：STM32嵌入式开发-Makefile详解</a><br><a href="http://myyerrol.io/zh-cn/2017/12/01/breeze_quadcopter_4_stm32_linkscript/">Breeze微型四轴系列（四）：STM32嵌入式开发-链接脚本原理</a></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Breeze微型四轴飞行器既是我们MicroDynamics团队的第一个项目，也是我本科毕业设计研究的主要内容，虽然它是我们根据国内外开源四轴项目（Crazyflie和Crazepony）模仿制作而来，但是通过亲自动手完成整个四轴飞行器的开发工作，我从其中学到了很多东西，它让我从一个不会用Altium Designer做复杂PCB设计、不懂Linux环境下STM32嵌入式开发以及常用飞控算法原理的普通大四学生真正成长为一名具备基本开发能力的四轴飞行器爱好者。</p>
<p>如果你也是一个喜欢DIY四轴飞行器的大学生或爱好者，但却像当初的我一样没有任何知识基础的话，我希望该Breeze微型四轴系列文章能够让你理解开发四轴飞行器背后所需要的基本知识，并从中受益匪浅。</p>
<p>最后，我要阐明一下我的观点：<strong>虽然我们是站在巨人肩膀上的一代，但这并不意味着重复造轮子就没有意义，因为在这个过程中你能够掌握到绝大多数人都不会去学的知识，而这些知识最终将会成为你之后开发之路上最为宝贵的财富！</strong></p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> Breeze微型四轴系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Micro Quadcopter </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RoboCup比赛系列（九）：RoboCup贵阳公开赛]]></title>
      <url>http://myyerrol.io/zh-cn/2017/10/01/robocup_competition_9_guiyang/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着RoboCup合肥国际赛的结束，我们晓萌队又开始紧锣密鼓地着手准备10月份的RoboCup中国赛。由于之前5月份我们在中国服务机器人大赛上发挥得不理想，再加上即将到来RoboCup中国赛是我们这一届晓萌队成员的最后一战，所以这一次我们根据比赛规则提前制定好了开发计划，每个队员也都尽全力来完成各自的任务，当然我们目标很明确：<strong>把握机会，不留遗憾</strong>。</p>
<p>2015年10月份的RobCup中国赛将会在贵阳举办，由于是一年一度的全国赛，所以国内研究服务机器人的高校队伍基本上都会参加，而最令我们感到意外的是刚刚参加完RoboCup合肥国际赛的中科大蓝鹰队也会携可佳机器人参赛，届时我们的晓萌可以和中科大的可佳同台较量，这绝对是我们向强队学习的绝佳机会。</p>
<a id="more"></a>
<h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><div class="alert alert-warning"><i class="fa fa-bell"></i>  由于之前本人电脑中存储的照片全部丢失，因此该博客中所显示的照片数量比较有限，希望读者可以理解。</div>
<h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>我们吸取了之前比赛失利的教训，提高了赛前调试的次数和强度。由于9月份开学之后，我们的课业都比较繁重，所以那时我们基本上是白天学习专业课，晚上加班加点来舞蹈机器人基地调试机器人。晚上调试机器人最大的好处就是行动比较自由且不会受到外界的干扰，我们可以在楼道走廊里临时搭建好调试场地，并根据比赛内容进行专项联合调试，在联合调试过程中，各个机器人模块（这里的模块主要指的是软件方面，如机器人底盘、机械臂、语音、图像和策略）的负责人需要留在现场，以便出现问题可以大家一起讨论解决。</p>
<ul>
<li><h4 id="自主导航进门"><a href="#自主导航进门" class="headerlink" title="自主导航进门"></a>自主导航进门</h4><p>以下图片展示的是我们晓萌机器人在自主导航调试中有关进门环节的情况，由于门刚开始是处于关闭的状态，所以机器人需要通过激光传感器不断地检测门的开启或关闭状态来判断是否让自己进门。除此之外，门的宽度较窄，为了保证晓萌在进门的时候不会撞到两边的门框，我们在原有SLAM算法的基础之上进行了定制，融合了地图中的边缘信息，使得机器人能够顺利地过门。</p>
<p><img src="/images/guiyang/debug/debug_navigation.jpg" alt="debug_navigation"></p>
<hr>
</li>
<li><h4 id="自主识别抓取物体"><a href="#自主识别抓取物体" class="headerlink" title="自主识别抓取物体"></a>自主识别抓取物体</h4><p>自主识别和抓取物体项目是我们这一次赛前调试的重点内容。早在暑假的时候，我就已经完成了大部分机械臂控制和规划算法的编写工作，不过为了追求整个抓取项目的鲁棒性，我和其他几名队友商量之后还是决定简化机械臂的控制，即只让机械臂负责末端夹持器Z轴高度的变化，而对于末端夹持器其余两个维度的位置调整则交给了更加成熟的底盘模块（使用底盘的前进、后退以及旋转功能来实现）。如下几个图所示，经过大量的调试，简化版的机械臂抓取策略还是相当稳定的，基本上只要图像模块能够识别到物体，机械臂就能将其抓取并放到柜子（由于当时经费紧张，所以我们用桌子和纸箱搭了一个简易的两层“柜子”）的下面一层中，不过缺点也很明显，那就是晓萌完成一次完整的抓取流程需要花费很多时间（主要浪费在底盘多次前进、后退以及缓慢的旋转上），这个问题我们会在比赛之后赛进行改进，以提高晓萌机械臂的抓取效率。</p>
<p><img src="/images/guiyang/debug/debug_object_manipulation_1.jpg" alt="debug_object_manipulation_1"></p>
<p><img src="/images/guiyang/debug/debug_object_manipulation_2.jpg" alt="debug_object_manipulation_2"></p>
<p><img src="/images/guiyang/debug/debug_object_manipulation_3.jpg" alt="debug_object_manipulation_3"></p>
<p><img src="/images/guiyang/debug/debug_object_manipulation_4.jpg" alt="debug_object_manipulation_4"></p>
<p><img src="/images/guiyang/debug/debug_object_manipulation_5.jpg" alt="debug_object_manipulation_5"></p>
</li>
</ul>
<h3 id="比赛"><a href="#比赛" class="headerlink" title="比赛"></a>比赛</h3><ul>
<li><h4 id="RoboZoo"><a href="#RoboZoo" class="headerlink" title="RoboZoo"></a>RoboZoo</h4><p>由于RoboZoo仅是一个展示项目，没有太多涉及技术方面的内容，而且其它几个重要的比赛项目占据了我们大部分的调试时间，所以我们算是在比赛开始前几天才想出一个比较有创意的比赛方案出来。如下图所示，晓萌机器人做静态展示，而其前面的大红机器人（我们基地的上古舞蹈机器人）则在海报上进行动态的舞蹈展示，可惜的是我们本来的设计方案是让晓萌机器人通过语音来命令大红来开始跳舞，但由于现场噪音太大，几次尝试都没有成果，所以我们索性直接通过人的语音来启动大红，不过最后结果还是不错的，我们在这个项目上拿了第一名。</p>
<p><img src="/images/guiyang/competition/robozoo/robozoo.jpg" alt="robozoo"></p>
</li>
<li><h4 id="Speech-Recognition"><a href="#Speech-Recognition" class="headerlink" title="Speech Recognition"></a>Speech Recognition</h4><p>在语音识别这个项目上，技术裁判会根据电脑上安装有的<a href="https://github.com/kyordhel/GPSRCmdGen" target="_blank" rel="external">GPSRCmdGen</a>软件所随机生成的问题序列来询问机器人，机器人需要通过语音重复识别到的问题然后再进行回答，问题总共有15个，每答对一个就加一定的分数，最后哪个队得分高则排在前面。我们晓萌队在语音识别这个单项上依然发挥得非常出色，我记得最后的成绩是正确答对13个问题，效果拔群。</p>
<p><img src="/images/guiyang/competition/speech_recognition/speech_recognition.jpg" alt="speech_recognition"></p>
</li>
<li><h4 id="Face-Recognition"><a href="#Face-Recognition" class="headerlink" title="Face Recognition"></a>Face Recognition</h4><p>人脸识别项目考察机器人如何在人群中找到特定的目标人物。机器人首先需要在比赛开始之后向人群前进一段距离，到达指定的识别地点之后，机器人要通过摄像头来捕捉前排坐在椅子上和后排站立的人的脸部信息，等到机器人成功识别出目标之后，只需走向目标人物并用语音向裁判说明即可。不过由于该项难度较大，除了中科大的可佳能够轻松完成之外，没有队伍可以成功地执行完整个任务流程，当然我们晓萌队在这个项目上得分也不高，看来之后还要继续努力。</p>
<p><img src="/images/guiyang/competition/face_recognition/face_recognition_1.jpg" alt="face_recognition_1"></p>
<p><img src="/images/guiyang/competition/face_recognition/face_recognition_2.jpg" alt="face_recognition_2"></p>
</li>
<li><h4 id="Navigation"><a href="#Navigation" class="headerlink" title="Navigation"></a>Navigation</h4><p>自主导航项目要求机器人在室内能够准确到达几个目标位置点，并在整个移动过程中避开桌椅、墙壁等障碍物。那天的比赛中，我们晓萌机器人在前两轮表现不佳，机器人在裁判下令比赛开始之后并没有移动（当时我们都焦急得满头大汗），我们分析问题主要出在晓萌机器人在进门阶段时没有正常地检测到房门已被打开，所以底盘模块负责人壕神在第三轮比赛前的短暂准备时间内对代码进行了一些调整，还好最后一轮比赛我们的晓萌机器人能够正常地运行，并且完成了一部分比赛任务，总算之前的努力没有白费。</p>
<p><img src="/images/guiyang/competition/navigation/navigation_1.jpg" alt="navigation_1"></p>
<p><img src="/images/guiyang/competition/navigation/navigation_2.jpg" alt="navigation_2"></p>
<p><img src="/images/guiyang/competition/navigation/navigation_3.jpg" alt="navigation_3"></p>
<p><img src="/images/guiyang/competition/navigation/navigation_4.jpg" alt="navigation_4"></p>
<p><img src="/images/guiyang/competition/navigation/navigation_5.jpg" alt="navigation_5"></p>
<p><img src="/images/guiyang/competition/navigation/navigation_6.jpg" alt="navigation_6"></p>
</li>
<li><h4 id="Object-Recognition-amp-Manipulation"><a href="#Object-Recognition-amp-Manipulation" class="headerlink" title="Object Recognition &amp; Manipulation"></a>Object Recognition &amp; Manipulation</h4><p>由于物体识别和抓取项目是最后一个比赛项目，所以留给我们在现场进行调试的时间比较少，我的两个队友也在抓紧时间对裁判公布的每件物品进行拍照和训练。在本次比赛中，只有四个参赛队伍的机器人具有机械臂，它们分别是：中科大、上交大、上应技和西工大，我们在四个队伍中排在最后一个出场，在已经完赛的前三个队伍中，上应技没有实现抓取，上交大在第二轮中成功识别并抓取一个物品，而中科大则是在首轮就相当轻松地识别并抓取了两三个物品。</p>
<p>最后轮到我们出场了，我们在把晓萌机器人摆放在白线（比赛开始位置）上之后，由我来启动晓萌机器人的比赛程序（因为我是机械臂模块的负责人），虽然要启动的7条命令我早已烂熟于心，但是当全场所有人的目光都投向你的时候，未免还是有些紧张。在成功启动所有程序之后，比赛正式开始，第一轮比赛我们识别错了物体，问题可能出在策略模块对所抓物体的选择上，所以在第二轮前的准备时间里，耀神和芳姐讨论之后决定将要抓取的物体名称直接固化在状态机程序中，也就是说我们提前要在两个物品中选一个去抓。最后的事实证明，我们赌赢了但是非常遗憾的是我们离晓萌机器人在正式比赛中成功自主识别和抓取物品这一里程碑事件就差了几个厘米的距离。因为底盘从白线处前进到识别位置时差了几个厘米，导致Kinect没能识别到物体，后来在比赛结束之后，我们把晓萌机器人往前移动了几个厘米，果然程序都一切正常地执行下去了……。</p>
<p><img src="/images/guiyang/competition/object_manipulation/object_manipulation_1.jpg" alt="object_manipulation_1"></p>
<p><img src="/images/guiyang/competition/object_manipulation/object_manipulation_2.jpg" alt="object_manipulation_2"></p>
<p><img src="/images/guiyang/competition/object_manipulation/object_manipulation_3.jpg" alt="object_manipulation_3"></p>
<p><img src="/images/guiyang/competition/object_manipulation/object_manipulation_4.jpg" alt="object_manipulation_4"></p>
<p><img src="/images/guiyang/competition/object_manipulation/object_manipulation_5.jpg" alt="object_manipulation_5"></p>
<p><img src="/images/guiyang/competition/object_manipulation/object_manipulation_6.jpg" alt="object_manipulation_6"></p>
</li>
</ul>
<h3 id="团队"><a href="#团队" class="headerlink" title="团队"></a>团队</h3><p>我们这一届晓萌团队在之前学长开发的基础上对机器人的整体架构进行全新的变革。机械部分：忧神设计了新的机械手爪并为晓萌机器人的显示屏、麦克风和摄像头等设备提供了结实的固定支架；电子部分：东神和派大星为嵌入式系统编写了新的机械臂位置控制算法；软件部分：壕神提高了底盘模块的自主导航能力，耀神根据比赛规则编写了基于状态机跳转的新策略模块，张凡让语音识别的准确度得到进一步的提高，芳姐和刘琪则实现了基于OpenCV和PCL等图像技术的物体和人脸识别算法，朋为我们翻译了英文的比赛规则并为复杂算法提供数学支持，而我负责编写了机械臂的控制和规划算法。总之，团队的阶段性成功离不开每一位成员的辛苦努力和付出，也希望之后的晓萌团队可以发展得越来越好。</p>
<p><img src="/images/guiyang/team/team_cloth_and_logo.jpg" alt="team_cloth_and_logo"></p>
<p><img src="/images/guiyang/team/team_group_photo.jpg" alt="team_group_photo"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们晓萌团队在本次RoboCup贵阳公开赛上的表现相较之前5月份的那次有了很大的提升，但是从过程来看依然暴露了一些问题：比如在物体识别和抓取项目中，我们离成功就差个很小的距离，表面来看问题出现的原因是我们晓萌的底盘离柜子的距离不够，导致Kinect没能识别到物体，而深层次的原因则在于我们在调试的时候没有把所有可能出现的情况都考虑在内，即测试用例理想化，极端或边界情况都没有被进行测试。因此，我们在做一个复杂的机器人系统时，不光要会写代码，还要会用开发规范来提高代码质量，会用Git等软件来做代码版本控制，会用所有可能出现的情况来全方面测试代码，最后要会用文档来记录开发或调试过程中出现的问题、解决方法、经验总结等。个人认为，只要未来的晓萌团队能用上述软件工程的方法来对自己进行严格管理，那我们就会在追逐终极目标——参加RoboCup@Home国际赛的道路上不断前进！</p>
<p>当然，本篇博客的结束也意味着RoboCup比赛系列的正式完结。回想短短一年之内的3次比赛，我们既经历过在基地熬夜调试到凌晨，用椅子拼床用书做枕头的艰苦（由于比赛前住基地的人比较多，行军床不够用了，所以只好简单凑活一下），也在紧张激烈的比赛之余体验过各座城市的风土人情，不过最重要的是我们能够像《速度与激情》系列里的赛车家族一样，可以共同面对未知的困难，并在解决困难的途中各尽所长，甚至在关键时刻能有所牺牲，我想哪怕最后比赛结果不理想，但这份曲折且宝贵的经历也足以配得上最终的胜利！</p>
<p>在基地的时候，我每次跟别的同学或老师讲我们基地或我们家政组所正在研究的内容时，内心就会自然而然地产生一种成就感，我们正在做的是可以在不久的将来能引领人工智能发展的服务机器人领域，虽然我们的研究还处于早期阶段，但有一点可以肯定：目前西工大还没有一支有本科生组成的团队可以达到我们的高度，光这一点就让我发自内心的自豪！</p>
<p>最后，以《速度与激情7》中的片尾经典台词和晓萌的照片来结束这篇文章，以纪念我们大学生活中这段最为宝贵的经历：</p>
<p>No matter where you are, whether it’s a quarter mile away or half way across the world. The most important thing in life will always be the people in this room, right here, right now. You’ll always be with me. And you’ll always be my brother.</p>
<p><img src="/images/guiyang/team/team_xmbot.jpg" alt="team_xmbot"></p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> RoboCup比赛系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RoboCup </tag>
            
            <tag> RoboCup@Home </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RoboCup比赛系列（八）：RoboCup合肥国际赛第六天]]></title>
      <url>http://myyerrol.io/zh-cn/2017/09/21/robocup_competition_8_hefei/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>RoboCup即机器人世界杯，是目前世界上级别规格最高、影响力最广的机器人赛事（当然，DARPA机器人挑战赛除外）。中国曾经在2008年的时候举办过一次RoboCup国际赛，地点是在苏州，而七年之后，RoboCup国际赛又一次降临中国，这次则是在拥有多年举办机器人赛事经验的合肥。非常幸运的是我们晓萌机器人团队能够被邀请参与本次比赛新增的BSR项目，并获得免费近距离观摩比赛的机会。</p>
<p>这篇文章主要讲述我们在RoboCup合肥国际赛<strong>第六天</strong>所发生的一些事情，内容主要以亲身经历为主，其中也会涉及技术方面，但不是重点。</p>
<a id="more"></a>
<h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><h3 id="BSR"><a href="#BSR" class="headerlink" title="BSR"></a>BSR</h3><p>BSR项目的决赛日终于到来，而我们晓萌队也是非常早地进入到了国际会展中心来进行赛前调试。关于决赛，每个参赛队伍共有两次机会，我们在第一轮的比赛过程中表现出色，如下图2-6所示，晓萌机器人有惊无险地避开了放置在道路中间的垃圾桶，并成功地到达了几个由裁判所随机指定的位置点，而第二轮比赛我们的机器人出现了一些问题，基本上只能在原地或附近地方打转，没能继续完成比赛。总的来说，我们的决赛成绩还是相当不错的，但是很可惜，由于最终的成绩是由预赛和决赛两个阶段共同决定，即预赛成绩带入到决赛当中，所以受到预赛得分的影响，我们最后排名第四，没能实现奖项上的突破，不过我们还是对自己的付出和努力十分满意。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/bsr/bsr_1.jpg" alt="bsr_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/bsr/bsr_2.jpg" alt="bsr_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/bsr/bsr_3.jpg" alt="bsr_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/bsr/bsr_4.jpg" alt="bsr_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/bsr/bsr_5.jpg" alt="bsr_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/bsr/bsr_6.jpg" alt="bsr_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/bsr/bsr_7.jpg" alt="bsr_7"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/bsr/bsr_8.jpg" alt="bsr_8"></p>
<h3 id="合影"><a href="#合影" class="headerlink" title="合影"></a>合影</h3><p>我们的比赛结束了，也是时候该与RoboCup合肥国际赛说再见了。在临走之前，我们晓萌团队在一起进行了合影留念，希望我们有朝一日可以真正地站在RoboCup国际赛的舞台上，并继续在追逐梦想的道路上不断前进！</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/group_photo/group_photo_1.jpg" alt="group_photo_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/group_photo/group_photo_2.jpg" alt="group_photo_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_6/group_photo/group_photo_3.jpg" alt="group_photo_3"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在为期七天的RoboCup合肥国际赛当中，我们从其他国内外参赛队伍那里学习到了很多宝贵的经验，其中涉及机器人机械结构、软件架构设计以及团队管理方面的内容，除此之外更重要的是经过前期不懈的努力，我们取得了BSR项目第四的好成绩（虽然只有中国高校参加），当然通过比赛我们也认识到了自己和强队之间的实力差距，我们会在接下来的比赛准备期内对晓萌机器人的软硬件进行优化，提高系统整体的鲁棒性。</p>
<p>最后，我还是要非常感谢中科大能够给予我们这次机会，让我们在2015年7月的这个夏天能够亲身领略到世界级机器人大赛的魅力，并从中感受到无比的幸福与快乐！再见RoboCup，再见合肥，希望我们下次参赛的时候可以变得比现在更加强大！</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> RoboCup比赛系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RoboCup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RoboCup比赛系列（七）：RoboCup合肥国际赛第五天]]></title>
      <url>http://myyerrol.io/zh-cn/2017/09/11/robocup_competition_7_hefei/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>RoboCup即机器人世界杯，是目前世界上级别规格最高、影响力最广的机器人赛事（当然，DARPA机器人挑战赛除外）。中国曾经在2008年的时候举办过一次RoboCup国际赛，地点是在苏州，而七年之后，RoboCup国际赛又一次降临中国，这次则是在拥有多年举办机器人赛事经验的合肥。非常幸运的是我们晓萌机器人团队能够被邀请参与本次比赛新增的BSR项目，并获得免费近距离观摩比赛的机会。</p>
<p>这篇文章主要讲述我们在RoboCup合肥国际赛<strong>第五天</strong>所发生的一些事情，内容主要以亲身经历为主，其中也会涉及技术方面，但不是重点。</p>
<a id="more"></a>
<h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><h3 id="BSR"><a href="#BSR" class="headerlink" title="BSR"></a>BSR</h3><p>BSR项目预赛进行到了第二阶段的争夺当中，我们团队的每个人也是竭尽所能来帮助晓萌机器人走得更远，还好功夫不负有心人，我们最后以预赛第四名的成绩进入到之后BSR项目的决赛阶段（第一名是中科大的可佳低成本移动平台，第二名是上交大的蛟龙机器人，第三名是来自洛阳理工的低成本机器人），算是惊险晋级。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_5/bsr/bsr_1.jpg" alt="bsr_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_5/bsr/bsr_2.jpg" alt="bsr_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_5/bsr/bsr_3.jpg" alt="bsr_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_5/bsr/bsr_4.jpg" alt="bsr_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_5/bsr/bsr_5.jpg" alt="bsr_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_5/bsr/bsr_6.jpg" alt="bsr_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_5/bsr/bsr_7.jpg" alt="bsr_7"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_5/bsr/bsr_8.jpg" alt="bsr_8"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_5/bsr/bsr_9.jpg" alt="bsr_9"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_5/bsr/bsr_10.jpg" alt="bsr_10"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>RoboCup合肥国际赛也即将进行到尾声阶段，而我们晓萌队也顺利地进入到明天的BSR决赛当中，不管明天会遇到什么样的困难，我们都已经做好了充分的准备，力争取得优异的成绩！</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> RoboCup比赛系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RoboCup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RoboCup比赛系列（六）：RoboCup合肥国际赛第四天]]></title>
      <url>http://myyerrol.io/zh-cn/2017/08/31/robocup_competition_6_hefei/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>RoboCup即机器人世界杯，是目前世界上级别规格最高、影响力最广的机器人赛事（当然，DARPA机器人挑战赛除外）。中国曾经在2008年的时候举办过一次RoboCup国际赛，地点是在苏州，而七年之后，RoboCup国际赛又一次降临中国，这次则是在拥有多年举办机器人赛事经验的合肥。非常幸运的是我们晓萌机器人团队能够被邀请参与本次比赛新增的BSR项目，并获得免费近距离观摩比赛的机会。</p>
<p>这篇文章主要讲述我们在RoboCup合肥国际赛<strong>第四天</strong>所发生的一些事情，内容主要以亲身经历为主，其中也会涉及技术方面，但不是重点。</p>
<a id="more"></a>
<h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><h3 id="Workshop"><a href="#Workshop" class="headerlink" title="Workshop"></a>Workshop</h3><p>作为BSR项目的参赛队伍，我们有幸参加了在会议室举办的专题研讨会。从下面的会议日程上可以看到很多在国内外从事机器人研究的专家、学者会来到研讨会现场，与大家一起分享他们的最新成果，当然，我们在Team Spotlight环节也会登上演讲台去介绍我们自己现有所使用的一些成熟技术（演讲内容要全英文）。总之，我们在研讨会中收获很多。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop.jpg" alt="workshop"></p>
<ul>
<li><h4 id="Team-Xmbot"><a href="#Team-Xmbot" class="headerlink" title="Team Xmbot"></a>Team Xmbot</h4><p>以下是我们晓萌队的技术展示部分，演讲者是我们的前任队长狗哥，即<strong>西工大一小学生</strong>（佩服狗哥登台演讲的勇气和英语口语能力！）。PPT中首先介绍了项目发展情况和团队人员组成，接着按照从底到高的架构顺序，依次介绍了晓萌机器人的硬件和所使用的传感器、嵌入式控制系统以及基于ROS的导航软件框架等。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_xmbot_1.jpg" alt="workshop_xmbot_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_xmbot_2.jpg" alt="workshop_xmbot_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_xmbot_3.jpg" alt="workshop_xmbot_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_xmbot_4.jpg" alt="workshop_xmbot_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_xmbot_5.jpg" alt="workshop_xmbot_5"></p>
</li>
<li><h4 id="Team-Kejia"><a href="#Team-Kejia" class="headerlink" title="Team Kejia"></a>Team Kejia</h4><p>以下是可佳低成本移动平台团队的演讲内容，其中主要涉及了硬件设计、软件架构以及建图、定位和导航所使用的算法介绍。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_kejia_1.jpg" alt="workshop_kejia_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_kejia_2.jpg" alt="workshop_kejia_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_kejia_3.jpg" alt="workshop_kejia_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_kejia_4.jpg" alt="workshop_kejia_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_kejia_5.jpg" alt="workshop_kejia_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/workshop/workshop_kejia_6.jpg" alt="workshop_kejia_6"></p>
</li>
</ul>
<h3 id="RoboCup-Home"><a href="#RoboCup-Home" class="headerlink" title="RoboCup@Home"></a>RoboCup@Home</h3><p>RoboCup@Home项目组进行到第二天的争夺，尽管赛事紧凑、挑战性高、各支参赛队伍的水平有高有低，但就像下图所展示的那样，这些因素都妨碍不了RoboCup@Home这个大家庭各成员之间建立起牢固的友谊。在赛场上我们要为捍卫自己队伍的荣誉而战，而在场下我们则是愿意互相分享开发经验、共同为梦想而努力的好朋友，我想这就是RoboCup@Home以及RoboCup本身在赛事之外所教会给我的东西。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/robocup@home/robocup@home.jpg" alt="robocup@home"></p>
<h3 id="BSR"><a href="#BSR" class="headerlink" title="BSR"></a>BSR</h3><p>BSR项目预赛的第一阶段（测试机器人移动的精准程度）已经比完，接下的第二阶段比赛也会在明天拉开战幕。明天的比赛主要考查机器人的自主导航能力，即让机器人自主地从比赛场地的起始位置移动到目标位置，而且在移动的途中机器人不能碰到围墙和障碍物。为了完成比赛任务，如下图所示，我们使用了Robopeak RPLIDAR激光传感器和Kinect深度摄像机，并基于ROS平台进行二次开发。最后总体测试效果还不错，只是需要对算法中的某些参数进行进一步的调整。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/bsr/bsr_1.jpg" alt="bsr_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/bsr/bsr_2.jpg" alt="bsr_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/bsr/bsr_3.jpg" alt="bsr_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/bsr/bsr_4.jpg" alt="bsr_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/bsr/bsr_5.jpg" alt="bsr_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/bsr/bsr_6.jpg" alt="bsr_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/bsr/bsr_7.jpg" alt="bsr_7"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/bsr/bsr_8.jpg" alt="bsr_8"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/bsr/bsr_9.jpg" alt="bsr_9"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_4/bsr/bsr_10.jpg" alt="bsr_10"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>RoboCup第二个正式比赛日结束。在一天的时间中，我们既听了来自卡内基梅隆大学、东京大学、上海交通大学、中国科学技术大学等国内外顶尖研究机构专家学者的报告会，也观看了几场精彩机器人比赛。总之，这一天过得很充实，收获也很多，希望接下来我们团队可以在最后的比赛中取得好成绩！</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> RoboCup比赛系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RoboCup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RoboCup比赛系列（五）：RoboCup合肥国际赛第三天]]></title>
      <url>http://myyerrol.io/zh-cn/2017/08/21/robocup_competition_5_hefei/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>RoboCup即机器人世界杯，是目前世界上级别规格最高、影响力最广的机器人赛事（当然，DARPA机器人挑战赛除外）。中国曾经在2008年的时候举办过一次RoboCup国际赛，地点是在苏州，而七年之后，RoboCup国际赛又一次降临中国，这次则是在拥有多年举办机器人赛事经验的合肥。非常幸运的是我们晓萌机器人团队能够被邀请参与本次比赛新增的BSR项目，并获得免费近距离观摩比赛的机会。</p>
<p>这篇文章主要讲述我们在RoboCup合肥国际赛<strong>第三天</strong>所发生的一些事情，内容主要以亲身经历为主，其中也会涉及技术方面，但不是重点。</p>
<a id="more"></a>
<h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><h3 id="开幕式"><a href="#开幕式" class="headerlink" title="开幕式"></a>开幕式</h3><p>在开幕式的整个过程中，除了RoboCup主席和相关领导的精彩发言之外，最吸引人的就是那个站在演讲台旁边的Alpha 2人形机器人（深圳<a href="https://www.ubtrobot.com/cn/" target="_blank" rel="external">优必选</a>公司的产品），因其搭载了<a href="http://www.iflytek.com/" target="_blank" rel="external">科大讯飞</a>最新的语音识别引擎，所以它能够实时且准确地进行同步翻译，这既方便了国内外与会者理解发言者的意图，也体现出科大讯飞在语音合成和识别领域的强大实力。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/ceremony/ceremony.jpg" alt="ceremony"></p>
<h3 id="比赛项目"><a href="#比赛项目" class="headerlink" title="比赛项目"></a>比赛项目</h3><ul>
<li><h4 id="RoboCup-Home"><a href="#RoboCup-Home" class="headerlink" title="RoboCup@Home"></a>RoboCup@Home</h4><p><strong>RoboZoo</strong><br>根据RoboCup@Home裁判委员会所制定的赛程安排，第一个要比的是RoboZoo项目，其规则比较简单，每支参赛队伍需要尽可能地表现自己机器人的能力，来吸引观众进行投票，成绩按照投票数进行排序，队伍的得票数越多，排名越靠前。通过实际观察，我发现该项目更看重各队的创意，而不是技术水平的高低。举个例子，比如像上交的服务机器人，它在现场表演了如何使用机械臂来对水杯进行抓取。尽管从技术层面上来讲上交的水平相当厉害，但是对于不懂技术的观众来说，机械臂不断重复执行抓取与放下的单调动作肯定比不上外表装饰得Kawaii，能与观众进行互动的机器人更讨人喜欢。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_1.jpg" alt="robocup@home_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_2.jpg" alt="robocup@home_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_3.jpg" alt="robocup@home_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_4.jpg" alt="robocup@home_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_5.jpg" alt="robocup@home_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_6.jpg" alt="robocup@home_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_7.jpg" alt="robocup@home_7"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_8.jpg" alt="robocup@home_8"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_9.jpg" alt="robocup@home_9"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_10.jpg" alt="robocup@home_10"></p>
<hr>
<p><strong>Navigation</strong><br>以下是服务机器人在室内进行自主导航时的一些画面，因为自主导航是RoboCup@Home项目的基本能力，所以绝大部分参赛队伍都能够达到该项测试的基本要求，只是在如何让机器人避开突如其来的障碍物（突然被裁判扔到机器人行进路线上的杂志）这种技术细节方面上，强队与弱队之间的确存在一些差距。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_11.jpg" alt="robocup@home_11"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_12.jpg" alt="robocup@home_12"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_13.jpg" alt="robocup@home_13"></p>
<hr>
<p><strong>Person Recognition</strong><br>以下是中科大的可佳机器人在进行人脸识别测试，从图中可以看到识别的精度还是相当不错的，基本上摄像头里出现的人物都被识别并用方框标了出来。说实话能够在现场环境如此恶劣的情况下，还能够较为精准地识别出多个目标人物，可见可佳的图像识别算法有多鲁棒。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_14.jpg" alt="robocup@home_14"></p>
<hr>
<p><strong>Object Recognition &amp; Manipulation</strong><br>从以下的图片中可以看到，只有前四个参赛队伍的机器人能够成功地至少抓取一个物体，其它的机器人基本上在开始位置没有移动，我估计问题是出在了物体识别上。在四个已完成抓取任务的机器人中，中科大的可佳表现得最为出色，它在有限的比赛时间内总共连续成功地完成了两次自主抓取（本来是三次，很可惜可佳的机器爪在放置第三个物体的时候不小心把它碰到了地面上），毫无悬念地获得了该项测试的第一名。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_15.jpg" alt="robocup@home_15"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_16.jpg" alt="robocup@home_16"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_17.jpg" alt="robocup@home_17"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_18.jpg" alt="robocup@home_18"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_19.jpg" alt="robocup@home_19"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_20.jpg" alt="robocup@home_20"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_21.jpg" alt="robocup@home_21"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/robocup@home_22.jpg" alt="robocup@home_22"></p>
<hr>
<p><strong>Paper</strong><br>以下是贴在比赛场地外围墙壁上的一些文件，主要是向各参赛队伍公示比赛场地中一些物品的摆放位置，机器人所要识别的物体种类和大小等参数信息，以及各队比赛的顺序安排，便于各队提前做好比赛准备。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/paper_1.jpg" alt="paper_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/paper_2.jpg" alt="paper_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/paper_3.jpg" alt="paper_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup@home/paper_4.jpg" alt="paper_4"></p>
</li>
<li><h4 id="RoboCup-Secure"><a href="#RoboCup-Secure" class="headerlink" title="RoboCup Secure"></a>RoboCup Secure</h4><p><strong>场地</strong><br>下图是RoboCup救援组的比赛场地，由于整个场地设计得非常复杂，所以在调试期间，赛事举办方曾邀请一些有经验的国外参赛队员与其一起进行搭建场地的工作。从图中可以看到，场地内部的不同障碍区域是根据颜色进行划分的，除此之外，配备有小型二氧化碳装置的几个仿真人偶也被裁判委员会分散布置到比赛场地的不同区域之中（有的被在墙壁之后的破洞里，有的被放到较高的平台上，还有的被放到图中的车辆中），为之后救援机器人寻找幸存者的比赛项目做好准备。最后，由于比赛中还有空中救援机器人的部分，所以场地四周全部拉上了白色的防撞网，防止四轴飞行器失控伤人。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_secure/robocup_secure_1.jpg" alt="robocup_secure_1"></p>
<hr>
<p><strong>自主建图</strong><br>自主建图应该是RoboCup救援组的第一个比赛项目，大部分参赛队伍都选择下图中这样的小车来完成该项任务。原因也很明显，机器人需要在充满各种障碍物的狭小空间中自由移动，而且对于自主建图项目来说，机器人本身不需要承担搜索幸存者（用仿真人偶代替）的任务，即机器人不用携带机械臂等搜救设备，所以带有激光和视觉传感器的小型四驱车是最好的选择。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_secure/robocup_secure_2.jpg" alt="robocup_secure_2"></p>
<hr>
<p>以下两个图片展示的是救援机器人的远程控制站，铝制箱中上面的两个电脑负责可视化机器人实时建图的整个过程，左下角的电脑负责对相关代码进行调试，而右下角的那台电脑则主要负责远程控制机器人的移动以及监视其自身的各种传感器的实时状态（不得不承认，老外真是有钱，连远程控制站也能做得如此专业，说实话这场面跟欧美大片里的某些桥段没什么两样）。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_secure/robocup_secure_3.jpg" alt="robocup_secure_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_secure/robocup_secure_4.jpg" alt="robocup_secure_4"></p>
</li>
<li><h4 id="RoboCup-Soccer"><a href="#RoboCup-Soccer" class="headerlink" title="RoboCup Soccer"></a>RoboCup Soccer</h4><p><strong>仿真组</strong><br>以下是RoboCup仿真2D和3D组的比赛画面，从图中可以看到仿真组的软件平台和裁判系统都是统一的，它们由RoboCup官方提供，而不同的地方在于各个参赛队伍需要根据比赛规则编写各自的程序算法来控制己方的机器人完成带球、传球、射门以及防守等操作。当然，除了基本的控制之外，整场比赛的策略也是非常重要的，因为足球毕竟不是单独个体的运动，它需要团队之间的协作配合。总之，个人感觉在多智能体协同算法方面，仿真组还是相当厉害的。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_soccer/robocup_soccer_1.jpg" alt="robocup_soccer_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_soccer/robocup_soccer_2.jpg" alt="robocup_soccer_2"></p>
<hr>
<p><strong>实物组</strong><br>RoboCup足球实物组在仿真组软件算法的基础之上，加入了物理实体机器人之间的对抗，这使得足球比赛看起来更加真实，当然这也对各个队伍的技术水平提出了更高的要求（以下是小型组和标准组的比赛）。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_soccer/robocup_soccer_3.jpg" alt="robocup_soccer_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_soccer/robocup_soccer_4.jpg" alt="robocup_soccer_4"></p>
</li>
<li><h4 id="RoboCup-Logistics"><a href="#RoboCup-Logistics" class="headerlink" title="RoboCup Logistics"></a>RoboCup Logistics</h4><p><strong>概述</strong><br>RoboCup物流组是国际机器人竞赛RoboCup的一个组成部分，它专注于工厂物流应用。RoboCup物流组的目标是通过使用自主机器人来解决工业生产过程中物质和信息的灵活交换问题，并提供标准、成熟的软硬件平台来促进物流方面的科学研究力度。</p>
<p><strong>规则</strong><br>机器人需要先从存储箱中获取原材料，接着以动态的顺序在机器之间进行运输，然后在这些机器中处理生产，最后将它们运送到目标位置。一个参赛队伍由三台机器人组成，每个机器人都基于标准化的<a href="http://www.festo-didactic.com/de-de/service/robotino" target="_blank" rel="external">Festo Robotino</a>开发平台，并且在其基础之上可以扩展一些传感器和计算设备。</p>
<p><strong>改革</strong><br>RoboCup物流组从2015合肥国际赛开始进行改革，引入了全新的挑战——机器人不再像前几届那样需要在地板上移动冰球，而是根据<a href="http://www.festo.com/" target="_blank" rel="external">Festo</a>提供的模块化生产系统（MPS）来操作工作站。如下图所示，MPS是用于处理圆筒的小型生产机器，而圆筒代表工件，它由彩色的底座，零个或最多三个彩色的圆环组成。在实际的比赛中，产品顺序是随机确定并且动态发布的，因此由机器人车队所驱动的生产过程中的规划和调度是关键因素，同时各个参赛队伍也会面临一些典型的技术难题，比如具有碰撞检测的导航、自我定位、物体检测以及（受限的）操作等。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_logistics/robocup_logistics_1.jpg" alt="robocup_logistics_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_logistics/robocup_logistics_2.jpg" alt="robocup_logistics_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_logistics/robocup_logistics_3.jpg" alt="robocup_logistics_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/robocup_logistics/robocup_logistics_4.jpg" alt="robocup_logistics_4"></p>
</li>
<li><h4 id="BSR"><a href="#BSR" class="headerlink" title="BSR"></a>BSR</h4><p>随着RoboCup的正式开幕，我们的BSR项目也开始了第一天的比赛。如下图所示，比赛科目主要是测试在无载荷和有载荷这两种情况下，机器人走直线和旋转的误差，误差越小，负重载荷越大，分数越高。虽然我们的底盘看起来比较Low（由于经费紧张，我们直接拆掉晓萌机器人的底盘拿来用的），不过预赛的成绩我记得好像还不错，也算是有了一些心理安慰吧。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/bsr/bsr_1.jpg" alt="bsr_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/bsr/bsr_2.jpg" alt="bsr_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/bsr/bsr_3.jpg" alt="bsr_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/bsr/bsr_4.jpg" alt="bsr_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/bsr/bsr_5.jpg" alt="bsr_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/bsr/bsr_6.jpg" alt="bsr_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/bsr/bsr_7.jpg" alt="bsr_7"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_3/bsr/bsr_8.jpg" alt="bsr_8"></p>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>RoboCup合肥国际赛正式开幕了，每个项目组的比赛都进行得非常激烈，而我们自己作为参赛的队伍之一，也算是真正意义上体会到了赛前准备以及等待结果的那种紧张之情。总之，比赛虽然会有胜负之分，但是我们从失利和其它队伍中所学到的宝贵知识和经验则显得更为重要，希望每个参赛队伍都能在接下来的赛程当中有所收获，并享受其中！</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> RoboCup比赛系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RoboCup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RoboCup比赛系列（四）：RoboCup合肥国际赛第二天]]></title>
      <url>http://myyerrol.io/zh-cn/2017/08/11/robocup_competition_4_hefei/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>RoboCup即机器人世界杯，是目前世界上级别规格最高、影响力最广的机器人赛事（当然，DARPA机器人挑战赛除外）。中国曾经在2008年的时候举办过一次RoboCup国际赛，地点是在苏州，而七年之后，RoboCup国际赛又一次降临中国，这次则是在拥有多年举办机器人赛事经验的合肥。非常幸运的是我们晓萌机器人团队能够被邀请参与本次比赛新增的BSR项目，并获得免费近距离观摩比赛的机会。</p>
<p>这篇文章主要讲述我们在RoboCup合肥国际赛<strong>第二天</strong>所发生的一些事情，内容主要以亲身经历为主，其中也会涉及技术方面，但不是重点。</p>
<a id="more"></a>
<h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><p>由于我们晓萌队要准备接下来的BSR(Benchmark Service Robot)预赛，所以这一天我基本上都待在BSR比赛场地附近的调试区域。当然因为我们自己本身就是做RoboCup@Home项目的，所以每隔一段时间，我还是会来到旁边的RoboCup@Home场地，用自己的手机来记录现场所发生的一些事情。</p>
<h3 id="RoboCup-Home"><a href="#RoboCup-Home" class="headerlink" title="RoboCup@Home"></a>RoboCup@Home</h3><ul>
<li><h4 id="赛程"><a href="#赛程" class="headerlink" title="赛程"></a>赛程</h4><p>RoboCup@Home裁判组终于公布了赛程安排。如下图所示，各队每天要进行的比赛项目多且时间安排紧凑，比如今天就要进行三个测试科目，时间从上午9点一直持续到晚上8点左右。虽然它们不属于正式比赛项目，不计得分和名次，但是却为之后的正赛提供了技术和安全方面的保障。</p>
<p><strong>Mapping Slots</strong><br>每个参赛队伍的机器人都可以使用自身携带的激光传感器来建立比赛场地的地图，这为之后机器人在比赛中的自主导航提供基本保障。</p>
<p><strong>Robot Inspection &amp; Introduction</strong><br>裁判组会对每个参赛的机器人进行详细的检查，以确保机器人的机械、电路等设计满足规则中的要求（比如急停开关的位置是否合适、机器人外部是否有裸露的电线等），防止因机器人在比赛中失控所导致危险情况的发生。</p>
<p><strong>Poster Session &amp; Reception</strong><br>该环节是RoboCup@Home项目的传统组成部分，它规定每个参赛队伍都必须事先准备好有关自己机器人的技术海报，并在现场向裁判和各队领队进行简要的讲解，其目的主要是为了加强各队之间的技术交流，以便促进RoboCup@Home项目的不断发展。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/schedule/schedule.jpg" alt="schedule"></p>
</li>
<li><h4 id="机器人"><a href="#机器人" class="headerlink" title="机器人"></a>机器人</h4><p>从下图可以看到，每个队伍都在积极准备明天各自的比赛项目，其中有一部分队伍的队员正在用视觉传感器对物体进行训练，以便为之后的物体识别和抓取项目做好充足的准备。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/robot/robot_1.jpg" alt="robot_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/robot/robot_2.jpg" alt="robot_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/robot/robot_3.jpg" alt="robot_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/robot/robot_4.jpg" alt="robot_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/robot/robot_5.jpg" alt="robot_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/robot/robot_6.jpg" alt="robot_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/robot/robot_7.jpg" alt="robot_7"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/robot/robot_8.jpg" alt="robot_8"></p>
</li>
<li><h4 id="技术海报"><a href="#技术海报" class="headerlink" title="技术海报"></a>技术海报</h4><p>以下海报是参赛队伍对各自机器人所用技术的概述。通过观察可以看到大部分队伍都将ROS(Robot Operating System)作为机器人的核心框架，并在其基础之上进行了更深入的研究工作。</p>
<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  因为当初我是竖着用手机对海报进行拍照的，所以照片显示在博客里也就横过来了。如果你用的是手机或平板电脑浏览本文章的话，请直接将屏幕顺时针旋转90度即可，但是如果你用的是电脑的话，那就只能请你向左歪脑袋或者直接下载照片进行查看了。</div>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_1.jpg" alt="poster_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_2.jpg" alt="poster_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_3.jpg" alt="poster_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_4.jpg" alt="poster_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_5.jpg" alt="poster_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_6.jpg" alt="poster_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_7.jpg" alt="poster_7"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_8.jpg" alt="poster_8"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_9.jpg" alt="poster_9"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_10.jpg" alt="poster_10"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_11.jpg" alt="poster_11"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_12.jpg" alt="poster_12"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_13.jpg" alt="poster_13"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_14.jpg" alt="poster_14"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_15.jpg" alt="poster_15"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_2/robocup@home/poster/poster_16.jpg" alt="poster_16"></p>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>伴随着RoboCup合肥国际赛第二天的结束，所有参赛队伍的调试工作都接近了尾声。在这两天的现场调试过程当中，我们虽然遇到过一些问题（比如传感器安装位置的不合适所导致机器人避障不准、建立好的地图中存在杂点等），但是经过团队的一起努力，以上问题还是得到了比较好的解决。明天RoboCup合肥国际赛就要正式开幕了，希望所有参赛的队伍都能在正式比赛中竭尽全力，发挥出自己的应有水平，在争取名次的同时也能从互相的技术交流讨论之中受益匪浅！</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> RoboCup比赛系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RoboCup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RoboCup比赛系列（三）：RoboCup合肥国际赛第一天]]></title>
      <url>http://myyerrol.io/zh-cn/2017/07/31/robocup_competition_3_hefei/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>RoboCup即机器人世界杯，是目前世界上级别规格最高、影响力最广的机器人赛事（当然，DARPA机器人挑战赛除外）。中国曾经在2008年的时候举办过一次RoboCup国际赛，地点是在苏州，而七年之后，RoboCup国际赛又一次降临中国，这次则是在拥有多年举办机器人赛事经验的合肥。非常幸运的是我们晓萌机器人团队能够被邀请参与本次比赛新增的BSR项目，并获得免费近距离观摩比赛的机会。</p>
<p>这篇文章主要讲述我们在RoboCup合肥国际赛<strong>第一天</strong>所发生的一些事情，内容主要以亲身经历为主，其中也会涉及技术方面，但不是重点。</p>
<a id="more"></a>
<h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><h3 id="报到注册"><a href="#报到注册" class="headerlink" title="报到注册"></a>报到注册</h3><p>RoboCup国际赛的第一天，我们都起得很早。在宾馆的餐厅里吃完早饭之后，我们立即携带机器人和相关设备直奔国际会展中心，可是等到达场馆之后，我们才发现那里已经有很多参赛队伍在排队等待报到注册（原来老外比我们起得还要早）。在等待的过程中，我发现很多国外的队伍都有自己的队服，而且运输机器人等装备的铝制箱子非常专业，所以就单在硬件这个方面上，个人感觉老外就已经甩我们好几条街了。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/registration/registration_1.jpg" alt="registration_1"></p>
<p>从上图中可以看到，当前排队等待报到注册的队伍已经有不少了，其中大部分队伍来自欧美机器人强国。除此之外，大部分国外队员们都显得很轻松，有说有笑，感觉他们是真的来享受这一年一度的机器人盛会，而不是带着某些硬性指标来的。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/registration/registration_2.jpg" alt="registration_2"></p>
<p>上图的证件和手册是我们报到注册完之后，从工作人员那里领的。纸袋里面装有一本介绍合肥的中英手册、一本介绍中国科学技术大学USTC研究成果的全英文小册子、一本很薄的全英文参赛指南、一本介绍科大讯飞的中英手册以及最重要的参赛证件。</p>
<p>其中参赛证件比较特殊，我这里详细地讲解一下：因为RoboCup比赛本身参赛费较贵，我记得好像是一个队员100美元，一个领队300美元，一个机器人500美元，所以很多缺少经费的高校就没有办法参与。而此次RoboCup在中国举办，作为东道主，USTC希望能有更多的中国高校参与到比赛中来，所以特别创立了BSR项目，并在原有参赛队员数量的基础上增加了很多观摩团席位，而我现在手里拿着的就是观摩证（可能只限于新增的BSR项目）。不过观摩证和参赛证相比还是有一些限制的，比如除了在比赛之前两天的调试期间可以自由进出会展中心以及比赛区域之外，在正式比赛期间观摩证便无法发挥作用，即既不能进入会展中心，也不能进入参赛队伍的调试区域。不过，我们可以使用参赛证将没有或只持有观摩证的队员换进来，这样一来，证件的问题就解决了。</p>
<h3 id="参赛组别"><a href="#参赛组别" class="headerlink" title="参赛组别"></a>参赛组别</h3><ul>
<li><h4 id="RoboCup-Soccer"><a href="#RoboCup-Soccer" class="headerlink" title="RoboCup Soccer"></a>RoboCup Soccer</h4><p><strong>Small Size</strong><br>RoboCup小型组是RoboCup足球比赛中历史最悠久的一个，它主要解决在混合集中/分布式系统的高动态环境下的智能多机器人/智能体协同和控制问题。每个参赛队伍需要派出六个机器人，每个机器人都必须符合规则中设定的尺寸：即机器人的大小要在180毫米直径的圆圈内，且不能高于15厘米。机器人将会在一个9米长6米宽的绿色地毯场上用橙色高尔夫球来进行比赛，场上所有物体均由位于比赛场地上方的视觉系统来进行跟踪，通过应用特定的视觉算法，便可以实现每个机器人的实时精准定位。除此之外，每个队伍与机器人之间是依靠无线通信来进行协调和控制的，为了保证通信的效果，比赛所使用的是专用商业无线电发射/接收单元。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/small_size/small_size_1.jpg" alt="small_size_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/small_size/small_size_2.jpg" alt="small_size_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/small_size/small_size_3.jpg" alt="small_size_3"></p>
<hr>
<p><strong>Middle Size</strong><br>RoboCup中型组采用全自主机器人，其所使用的足球大小与FIFA的相同。该项组别主要考察各个队伍在机电一体化设计、控制和基于规划和感知层面的多智能体协同能力。虽然每个中型组队伍都可以自由设计自己的机器人，但所有的传感器必须全部是机载的。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/middle_size/middle_size_1.jpg" alt="middle_size_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/middle_size/middle_size_2.jpg" alt="middle_size_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/middle_size/middle_size_3.jpg" alt="middle_size_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/middle_size/middle_size_4.jpg" alt="middle_size_4"></p>
<hr>
<p><strong>Standard Platform</strong><br>RoboCup标准平台组采用软银机器人公司的NAO机器人，NAO机器人目前是在学术领域世界范围内运用最广泛的类人机器人，它配备有多种传感器，而且支持跨平台操作系统编程，功能非常强大。如果追溯历史的话，NAO机器人是于2007年7月被RoboCup组委会选定为标准平台，用来替换索尼机器狗AIBO。关于标准平台组比赛，由于各队使用统一的机器人进行比赛，所以参赛队伍只需比拼软件算法水平，虽然每个NAO机器人都必须完全自主地发挥作用，但是本方的几个NAO机器人之间可以联合在一起来共同完成踢球的任务。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/standard_platform/standard_platform_1.jpg" alt="standard_platform_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/standard_platform/standard_platform_2.jpg" alt="standard_platform_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/standard_platform/standard_platform_3.jpg" alt="standard_platform_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/standard_platform/standard_platform_4.jpg" alt="standard_platform_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/standard_platform/standard_platform_5.jpg" alt="standard_platform_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/standard_platform/standard_platform_6.jpg" alt="standard_platform_6"></p>
<hr>
<p><strong>Humanoid</strong><br>RoboCup类人组的机器人是拥有类似人体规划和感知能力的全自主机器人，与类人组之外的人形机器人不同，RoboCup类人组机器人通过使用距离传感器并不会简化感知和建模任务。除了足球比赛之外，技术挑战也在发生，如动态行走和跑步、保持平衡的踢球、视觉感知足球、自我定位以及团队合作目前都是类人组的研究课题之一。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/humanoid/humanoid_1.jpg" alt="humanoid_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/humanoid/humanoid_2.jpg" alt="humanoid_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/humanoid/humanoid_3.jpg" alt="humanoid_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/humanoid/humanoid_4.jpg" alt="humanoid_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/humanoid/humanoid_5.jpg" alt="humanoid_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/humanoid/humanoid_6.jpg" alt="humanoid_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_soccer/humanoid/humanoid_7.jpg" alt="humanoid_7"></p>
</li>
</ul>
<hr>
<ul>
<li><h4 id="RoboCup-Home"><a href="#RoboCup-Home" class="headerlink" title="RoboCup@Home"></a>RoboCup@Home</h4><p><strong>Open Platform</strong><br>RoboCup@Home开放平台组用于评估各个队伍在现实非标准化家庭环境中的能力和性能，重点考察人机交互与合作、动态环境中的导航和建图、自然光下的计算机视觉和物体识别、物体操作、自适应行为、行为整合、环境智能、标准化和系统集成。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_1.jpg" alt="open_platform_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_2.jpg" alt="open_platform_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_3.jpg" alt="open_platform_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_4.jpg" alt="open_platform_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_5.jpg" alt="open_platform_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_6.jpg" alt="open_platform_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_7.jpg" alt="open_platform_7"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_8.jpg" alt="open_platform_8"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_9.jpg" alt="open_platform_9"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_10.jpg" alt="open_platform_10"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_11.jpg" alt="open_platform_11"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_12.jpg" alt="open_platform_12"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_13.jpg" alt="open_platform_13"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/open_platform/open_platform_14.jpg" alt="open_platform_14"></p>
<hr>
<p><strong>BSR</strong><br>RoboCup@Home服务机器人标准测试（Benchmark Service Robot）组并不是官方设立的正式比赛项目，它是由RoboCup合肥国际赛主办方中科大临时发起并创办的，旨在降低机器人平台的成本，让更多的中国高校队伍能够参与其中。由于对机器人的成本进行了限制，所以各个队伍的机器人大小都必须要在规则中所指定的范围之内，而且不允许使用价格昂贵的传感器（这也是为什么很多队伍使用Robopeak RPLIDAR的原因）。BSR项目主要以定量的方式考察机器人底盘移动的精准程度、自主导航以及避障和越障能力。</p>
<ul>
<li><p><strong>精准测试</strong><br>精准测试主要依靠基于摄像机的自动裁判系统来进行评判。具体比赛项目是让机器人在不负重以及负重不同重量的情况下直线前进一段距离和旋转一定的角度，并根据机器人实际完成值与给定目标值之间的偏差来计算出各队的分数，负重越重（不同的负重有不同的权重系数），偏差越小，得分越多。</p>
</li>
<li><p><strong>自主导航</strong><br>自主导航需要机器人事先根据激光或视觉传感器建立好比赛场地的地图，在比赛开始之前，由裁判在场地中随机指定机器人的启动和停止位置，机器人必须要从启动位置启动，并在途中避开障碍物之后才能到达终点。因为自主导航是服务机器人的基本能力，所以大部分队伍都做得不错。</p>
</li>
<li><p><strong>避障和越障</strong><br>因为比赛场地的特殊设置，机器人在自主导航的过程中肯定需要避开障碍物并至少穿过一次宽度较窄的金属小门。其中让机器人穿门而过是比较难的，因为金属门较窄，只比机器人底盘的宽度大一些，如果机器人在自主导航的时候移动得不够精确，就会很容易撞到门柱上；另外一点是比赛的金属小门带有一个门槛，这对使用普通轮的机器人来说可能不算什么，最多过门槛的时候颠簸几下，但是对于使用麦克纳姆轮的队伍来说（包括我们晓萌队），门槛就是一个致命的打击，原因很明显，麦轮因其特殊的构造本身就不适合翻越障碍物。不过还好，大部分队伍的机器人还没到门槛就由于各种问题被抬下场了，这也算是一种心理安慰吧。</p>
</li>
</ul>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/bsr/bsr_1.jpg" alt="bsr_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/bsr/bsr_2.jpg" alt="bsr_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/bsr/bsr_3.jpg" alt="bsr_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup@home/bsr/bsr_4.jpg" alt="bsr_4"></p>
</li>
</ul>
<hr>
<ul>
<li><h4 id="RoboCup-Secure"><a href="#RoboCup-Secure" class="headerlink" title="RoboCup Secure"></a>RoboCup Secure</h4><p><strong>Robot</strong><br>RoboCup救援组的目标是促进在恶劣环境下灾难救援领域机器人的研究和开发工作，在非结构化环境中搜索模拟的受害者时，需要机器人展示其在移动性、环境感知、规划、建图以及实际操作方面的能力。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_1.jpg" alt="robocup_secure_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_2.jpg" alt="robocup_secure_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_3.jpg" alt="robocup_secure_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_4.jpg" alt="robocup_secure_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_5.jpg" alt="robocup_secure_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_6.jpg" alt="robocup_secure_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_7.jpg" alt="robocup_secure_7"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_8.jpg" alt="robocup_secure_8"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_9.jpg" alt="robocup_secure_9"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_10.jpg" alt="robocup_secure_10"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_11.jpg" alt="robocup_secure_11"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_12.jpg" alt="robocup_secure_12"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_secure/robocup_secure_13.jpg" alt="robocup_secure_13"></p>
</li>
</ul>
<hr>
<ul>
<li><h4 id="RoboCup-Industrial"><a href="#RoboCup-Industrial" class="headerlink" title="RoboCup Industrial"></a>RoboCup Industrial</h4><p><strong>RoboCup@Work</strong><br>RoboCup@Work是RoboCup的最新比赛项目，其目标是在借鉴其他已有RoboCup比赛项目经验证的想法和概念基础之上，解决自主移动工业机器人对零件的识别、抓取和放置操作等任务难题。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_industrial/robocup@work/robocup@work_1.jpg" alt="robocup@work_1"></p>
<hr>
<p><strong>RoboCup Logistics</strong><br>RoboCup物流组创办的想法来源于智能工厂中的工业场景，因为未来的智能工厂需要更灵活的物流运输能力，而机器人则是最佳的选择。本次RoboCup比赛物流组项目的机器人全部由FESTO公司提供，虽然我没太看懂那些机器人具体是如何运作的，但从外部蓝色的细管还是可以判断出FESTO的物流机器人应该采用的是气动原理。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_industrial/robocup_logistics/robocup_logistics_1.jpg" alt="robocup_logistics_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/robocup_industrial/robocup_logistics/robocup_logistics_2.jpg" alt="robocup_logistics_2"></p>
</li>
</ul>
<h3 id="参展商"><a href="#参展商" class="headerlink" title="参展商"></a>参展商</h3><ul>
<li><h4 id="KUKA"><a href="#KUKA" class="headerlink" title="KUKA"></a>KUKA</h4><p>KUKA公司来源于德国，是世界领先的四大工业机器人制造商之一。KUKA机器人种类齐全，几乎涵盖了所有负载范围和类型，并确立了人机协作领域的标准。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/exhibitor/kuka/kuka_1.jpg" alt="kuka_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/exhibitor/kuka/kuka_2.jpg" alt="kuka_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/exhibitor/kuka/kuka_3.jpg" alt="kuka_3"></p>
</li>
</ul>
<hr>
<ul>
<li><h4 id="ROBOTIS"><a href="#ROBOTIS" class="headerlink" title="ROBOTIS"></a>ROBOTIS</h4><p>ROBOTIS公司来自于韩国，是世界最为著名的机器人公司之一，该公司的标志性产品为Dynamixel系列舵机和ROBOTIS OP小型人型机器人。ROBOTIS公司的发展理念是：既为孩子们提供教具，让孩子们提升创新能力，也为专家们提供解决方案，让他们把富有创意的想法实现为实际机器人。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/exhibitor/robotis/robotis_1.jpg" alt="robotis_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/exhibitor/robotis/robotis_2.jpg" alt="robotis_2"></p>
</li>
</ul>
<hr>
<ul>
<li><h4 id="IAMT"><a href="#IAMT" class="headerlink" title="IAMT"></a>IAMT</h4><p>中国科学院合肥物质科学研究院先进制造技术研究所（以下简称先进制造所）是中国科学院合肥物质科学研究院（以下简称合肥研究院）下属的研究单位之一，主要研究方向包括：机器人技术（仿生机器人、服务机器人、工业机器人等）和智能装备技术（创新设计、精密制造、智能材料、系统集成等）。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/exhibitor/iamt/iamt_1.jpg" alt="iamt_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/exhibitor/iamt/iamt_2.jpg" alt="iamt_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/exhibitor/iamt/iamt_3.jpg" alt="iamt_3"></p>
</li>
</ul>
<hr>
<ul>
<li><h4 id="GaiTech"><a href="#GaiTech" class="headerlink" title="GaiTech"></a>GaiTech</h4><p>硅步科技是专业提供机器人整体解决方案的创新型公司，其主要业务是基于ROS的智能机器人集成、生产、销售和技术支持服务。目前，随着人工智能技术的不断发展，硅步科技也开始逐步致力于机器人电机控制系统、无人机飞行稳定系统、智能相机和高性能传感器等技术和产品的研究和开发工作。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_1/exhibitor/gaitech/gaitech_1.jpg" alt="gaitech_1"></p>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>RoboCup合肥国际赛第一天的亲身经历让我们能近距离地且亲眼看到很多国内外顶尖参赛队伍的机器人以及相关调试过程，在开拓了视野的同时也让我们对RoboCup比赛有了进一步的认识。除此之外，给我留下印象最深的便是老外对于技术的那种严谨执着的态度。比如，在调试期间，你经常可以看到几个队员三五成群地在一起讨论解决问题的方法，并将每个解决方法记录下来并一一进行测试，而且甚至还有一些队伍在闭馆通知播报完之后依然不愿意离开。我们常常羡慕国外先进的机器人技术，但殊不知在排除资金投入等客观因素的影响之外，我们自己又做的如何呢？我们热爱机器人的人很多，但能以严谨认真的态度来将这份热爱付诸实现的人太少。未来如果我们能全身心地投入到机器人研究和开发工作中去，那总有一天我们能够到达成功的彼岸，我想这就是本次RoboCup国际赛在技术之外所教会给我的东西。</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> RoboCup比赛系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RoboCup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RoboCup比赛系列（二）：RoboCup合肥国际赛前一天]]></title>
      <url>http://myyerrol.io/zh-cn/2017/07/21/robocup_competition_2_hefei/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>RoboCup即机器人世界杯，是目前世界上级别规格最高、影响力最广的机器人赛事（当然，DARPA机器人挑战赛除外）。中国曾经在2008年的时候举办过一次RoboCup国际赛，地点是在苏州，而七年之后，RoboCup国际赛又一次降临中国，这次则是在拥有多年举办机器人赛事经验的合肥。非常幸运的是我们晓萌机器人团队能够被邀请参与本次比赛新增的BSR项目，并获得免费近距离观摩比赛的机会。</p>
<p>这篇文章主要讲述我们在RoboCup合肥国际赛<strong>前一天</strong>所发生的一些事情，内容主要以亲身经历为主，其中也会涉及技术方面，但不是重点。</p>
<a id="more"></a>
<h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><p>我们在开始报到注册的前一天坐火车到达了合肥，之后又乘坐公交车来到了国际会展中心附近。因为长途奔波，大家都比较劳累了，所以在下午办理完入住宾馆的手续之后，大部分队员就在宾馆里休息或为接下来的比赛进行调试，而我则在晚饭之后决定先到比赛场馆附近转一转，一是可以熟悉周围的环境，二是能够满足自己内心对未知新事物的向往。</p>
<h3 id="比赛场馆"><a href="#比赛场馆" class="headerlink" title="比赛场馆"></a>比赛场馆</h3><p>我记得自己从宾馆出来之后，在路上走了一段时间，刚开始路边都是一些居民住宅区和自营小餐馆，可是随着道路一转，一个庞大且点缀有光点的建筑物突然映入我的眼帘，原来那就是胖胖学长所说的国际会展中心（因为之前学长们曾经在这个场馆参加过比赛，所以对场馆及其周围很熟悉）。我走近一看，感觉整个国际会展中心建的还是相当现代化，虽然我不是学建筑出身的，但是会展中心所呈现出来的那种庄严气势还是给我留下了非常深刻的印象。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/competition_venue_1.jpg" alt="competition_venue_1"></p>
<p>从上图中可以看到，国际会展中心的工作人员为了迎接RoboCup这一世界顶级的机器人赛事，正在紧锣密鼓地准备参赛队伍的调试区域、比赛的场地以及各大参展商的展台。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/competition_venue_2.jpg" alt="competition_venue_2"></p>
<p>国际会展中心的周围也是高楼林立，可以看到这个区域周边经济发展得应该还算不错。而且会展中心的外围也早就拉上条幅，升起气球，为赛事的成功举办烘托气氛。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/competition_venue_3.jpg" alt="competition_venue_3"></p>
<p>这张照片是我从会展中心旁边的玻璃环形人行天桥上所拍下来的，从图中可以看到，远处的会展中心坐落在茫茫的夜色之中，似乎预示着即将有重大的事情发生。</p>
<h3 id="宣传海报"><a href="#宣传海报" class="headerlink" title="宣传海报"></a>宣传海报</h3><p>以下照片均是我在会展中心周围所拍，内容以庆祝RoboCup机器人比赛举办和欢迎来自世界各地的参赛队伍为主要主题。虽然当时夜色已经很晚了，但是你依然能从这些宣传海报中感受到合肥这个城市对机器人的喜爱。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/display_board_1.jpg" alt="display_board_1"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/display_board_2.jpg" alt="display_board_2"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/display_board_3.jpg" alt="display_board_3"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/display_board_4.jpg" alt="display_board_4"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/display_board_5.jpg" alt="display_board_5"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/display_board_6.jpg" alt="display_board_6"></p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/display_board_7.jpg" alt="display_board_7"></p>
<h3 id="赛前调试"><a href="#赛前调试" class="headerlink" title="赛前调试"></a>赛前调试</h3><p>当我从外面超市买了一些零食回来的时候，发现下图中的两个大神正在探讨如何将ROS下的自主导航框架与刚从学长那里借来的Robopeak RPLIDAR低成本激光传感器（即图中发绿色光的物体，因为根据BSR项目的要求，价格昂贵的传感器一律不允许使用）进行融合。虽然RPLIDAR官方提供有ROS驱动包，但在实际调试过程还需对其源码进行一定的修改才能获得比较好的使用效果。</p>
<p><img src="http://media.myyerrol.io/images/hefei/day_0/competition_debug.jpg" alt="competition_debug"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在RoboCup合肥国际赛的前一天里，我感受到了合肥这座城市的风土人情，比如我们一起去吃了味道正宗的徽州黄焖鸡，领略到了大部分合肥商人在找钱时用硬币的特殊习惯，而最重要的是我们可以怀揣着对机器人的热爱，在接下来的几天中，亲身参与到RoboCup这一世界最高级别的机器人比赛之中。毫无疑问，我们内心的自豪和激动之情难以言表！</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> RoboCup比赛系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RoboCup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RoboCup比赛系列（一）：中国服务机器人大赛]]></title>
      <url>http://myyerrol.io/zh-cn/2017/07/11/robocup_competition_1_luoyang/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在经过短时间的调试之后，我们新一届晓萌机器人团队终于迎来了检验自己成果的时候。因为晓萌机器人的新机械臂是在比赛出发之前才安装到位，所以本次五月份的比赛我们并没有使用。除此之外，学长在出发之前告诉我们：要放下包袱，尽力去完成比赛，注重与其他队伍的交流，把这次比赛作为自己开阔视野的好机会。赛后确实就像学长所说的那样，我们从本次比赛中学到了很多东西，这对于晓萌团队未来的发展起到了非常积极的作用。</p>
<p>本次中国服务机器人大赛在河南洛阳举办，基本上国内研究服务机器人的高校都悉数到场，比如北理、北信科、二炮、上应技、上大、西北师范等，其中比赛项目主要有RoboCup@Home、Follow、GPSR、WhoIsWho、Shopping等。</p>
<a id="more"></a>
<h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><div class="alert alert-warning"><i class="fa fa-bell"></i>  由于之前本人电脑中存储的照片全部丢失，因此该博客中所显示的照片数量比较有限，希望读者可以理解。</div>
<h3 id="美食"><a href="#美食" class="headerlink" title="美食"></a>美食</h3><ul>
<li><h4 id="锅贴"><a href="#锅贴" class="headerlink" title="锅贴"></a>锅贴</h4><p>经过五个多小时的路程，我们终于来到了牡丹之城——洛阳。在处理完宾馆的入住手续之后，我们就跟随着志愿者来到了当地非常有名的<strong>小街锅贴</strong>店进行用餐。话说这家店做的锅贴味道还真不错，虽然我在北京吃过几次<strong>褡裢火烧</strong>，但都不如这家店做得外皮香脆、肉馅多汁（直到后来才知道<strong>小街锅贴</strong>是河南的老字号和非物质文化遗产，怪不得做的那么好吃）。</p>
<p><img src="/images/luoyang/food/fired_dumpling.jpg" alt="fired_dumpling"></p>
<p>在饱餐一顿之后，我们回到宾馆开始了对机器人底盘的调试工作。尽管后来熬夜到了很晚，但是一想到明天就可以在比赛会场看到其他参赛队伍的服务机器人，所有的劳累就都被抛到了脑后。</p>
</li>
<li><h4 id="牛肉汤"><a href="#牛肉汤" class="headerlink" title="牛肉汤"></a>牛肉汤</h4><p>第二天一早，根据志愿者的热心介绍，我们来到了学校附近的<strong>龙鳞路第一家牛肉汤</strong>店铺喝汤。在洛阳，喝汤是人们挥之不去的习惯，所以我们也入乡随俗，跟随着志愿者一起买饼，然后边喝牛肉汤边吃自己手撕的饼丝，味道确实相当不错。</p>
<p><img src="/images/luoyang/food/beef_broth.jpg" alt="beef_broth"></p>
</li>
</ul>
<h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p><img src="/images/luoyang/registration/registration.jpg" alt="registration"></p>
<p>在完成比赛的注册之后，我们终于来到了比赛场馆——河南科技大学西苑校区体育馆。在这里，我们遇到了几个国内技术水平较高的参赛队伍，接下来对他们进行简单的介绍。</p>
<h3 id="队伍"><a href="#队伍" class="headerlink" title="队伍"></a>队伍</h3><ul>
<li><h4 id="晓萌队"><a href="#晓萌队" class="headerlink" title="晓萌队"></a>晓萌队</h4><p><img src="/images/luoyang/team/team_xm.jpg" alt="team_xm"></p>
<p><strong>简介：</strong><br>晓萌队来自西北工业大学舞蹈机器人基地，由学长们于2010年所创建。经过五年时间的发展，我们的晓萌机器人已经发展到了第三代半（因为相比于第三代，只在原有的基础上添加了新机械臂，所以按照汪学长的意思，目前的晓萌机器人只能算是第三代半，而不是第四代），其中涉及的很多开发技术技术都已逐渐走向成熟。接下来我按照机械、电子和软件这三个层面来对当前晓萌机器人进行简要的介绍。</p>
<p><strong>机械：</strong><br>从图中可以看到，晓萌机器人的前面安装有一个新机械臂。它的机械结构主要由同步轮和同步带这两部分组成。只要发送命令让电机发生转动，在同步轮和同步带的联合作用下，相应的机械臂关节便会发生转动。当然，电机和关节旋转角度之间互相转换的数学关系是非常重要的，特别是对于像我们这样的机械臂，大臂、小臂和手腕关节彼此连接的连杆并不是刚体，所以在对关节数据进行转换的时候，需要通过计算对关节运动进行补偿。</p>
<p>晓萌机器人的底盘部分还是沿用之前的结构——由三个麦克纳姆轮所构成的全向移动平台。虽然整个底盘的移动精度还可以，不过由于新机械臂的升降部分相当重，使得其对底盘部分的压力比较大，所以在赛前调试中底盘移动会出现比较明显的偏差（不过好在可以通过算法来进行一定程度的补偿）。</p>
<p><strong>电子：</strong><br>电子部分基本上还是沿用了上一代学长所留下的成果。从图中可以看到，因为我们这次比赛之前的准备比较仓促，所以还是有很多电线暴露在外面，电机驱动盒和控制板也没有被固定在隔板上。不过，电子部分的运行效果还是相当鲁棒的，至少不像软件那样说跪就跪。</p>
<p><strong>软件：</strong><br>我们本次参赛的晓萌机器人软件部分也依旧继承了之前的架构。在Windows上，我们主要使用微软自带的Speech库来做语音合成和识别；在Ubuntu上，我们则使用ROS来做各模块的开发和集成工作，其中涉及有基于人脸检测的图像模块、基于运动规划和自主控制的底盘模块、以及基于机器人行为的策略模块等。</p>
</li>
<li><h4 id="东风队"><a href="#东风队" class="headerlink" title="东风队"></a>东风队</h4><p><img src="/images/luoyang/team/team_dongfeng.jpg" alt="team_dongfeng"></p>
<p><strong>简介：</strong><br>东风队来自第二炮兵工程大学（现火箭军工程大学）。</p>
</li>
<li><h4 id="侏罗纪队"><a href="#侏罗纪队" class="headerlink" title="侏罗纪队"></a><span id="jump">侏罗纪队</span></h4><p><img src="/images/luoyang/team/team_zhuluoji.jpg" alt="team_zhuluoji"></p>
<p><strong>简介：</strong><br>侏罗纪队来自西北师范大学。</p>
</li>
<li><h4 id="Sun-Home"><a href="#Sun-Home" class="headerlink" title="Sun@Home"></a>Sun@Home</h4><p><img src="/images/luoyang/team/team_sun@home.jpg" alt="team_sun@home"></p>
<p><strong>简介：</strong><br>Sun@Home队来自于北京信息科技大学。</p>
</li>
<li><h4 id="BIT-Home"><a href="#BIT-Home" class="headerlink" title="BIT@Home"></a>BIT@Home</h4><p><img src="/images/luoyang/team/team_bit@home.jpg" alt="team_bit@home"></p>
<p><strong>简介：</strong><br>BIT@Home队来自北京理工大学。</p>
</li>
<li><h4 id="自强队"><a href="#自强队" class="headerlink" title="自强队"></a>自强队</h4><p><img src="/images/luoyang/team/team_ziqiang.jpg" alt="team_ziqiang"></p>
<p><strong>简介：</strong><br>自强队来自上海大学。</p>
</li>
<li><h4 id="创之风队"><a href="#创之风队" class="headerlink" title="创之风队"></a>创之风队</h4><p><img src="/images/luoyang/team/team_chuangzhifeng.jpg" alt="team_chuangzhifeng"></p>
<p><strong>简介：</strong><br>创之风队来自上海应用技术学院。</p>
</li>
</ul>
<h3 id="比赛"><a href="#比赛" class="headerlink" title="比赛"></a>比赛</h3><ul>
<li><h4 id="Follow"><a href="#Follow" class="headerlink" title="Follow"></a>Follow</h4><p><strong>简介：</strong><br>Follow项目测试机器人在陌生环境中多模式交互和安全导航。比赛在外部环境中进行，当比赛开始时，引导者走向机器人并向它发送跟随指令，机器人需要宣布校准完成并开始跟随引导着从起点走向终点。机器人在跟随的途中要经过四个预先指定的路径点。</p>
<ul>
<li><p><strong>路径点1（绕过干扰）：</strong><br>引导者发指令让机器人停止前进，当随机指定的陌生人从机器人和引导者之间缓缓穿过后，机器人能继续跟随引导着前进。</p>
</li>
<li><p><strong>路径点2（进入狭小空间）：</strong><br>引导者和机器人一起进入一个狭小的空间，由于没有足够的运动空间，所以机器人和引导者需要与进入的顺序相反的方式离开该空间。</p>
</li>
<li><p><strong>路径点3（绕过障碍物）：</strong><br>引导者走到障碍物跟前，并绕过障碍物后继续前进，要求机器人也要绕过障碍物继续跟随。</p>
</li>
<li><p><strong>路径点4（终点线）：</strong><br>机器人必须完全超过终点线。</p>
</li>
</ul>
<p><strong>总结：</strong><br>该项测试各个队伍完成的都不是非常好，我记得只有西北师范的机器人能勉强的到达终点线，其他的（当然也包括我们晓萌队）都在半途中出现了各种问题，其中大部分是由于图像识别错误导致机器人不移动或跟丢引导者。这个项目主要考察了机器人的图像识别（具体来说是人脸识别）和自主移动避障能力，测试的难点主要是在规则中的第二个路径点，即机器人和引导者需要共同进入狭小空间。因为机器人需要顺时针旋转90度才能进入，在这个过程中人就很容易被跟丢，而且最重要的是机器人进入的空间（<a href="#jump">以上侏罗纪队比赛图中的白色U型空间</a>）宽度比较小，这对机器人的自主移动避障能力是一个巨大的考验。</p>
</li>
<li><h4 id="GPSR"><a href="#GPSR" class="headerlink" title="GPSR"></a>GPSR</h4><p><strong>简介：</strong><br>GPSR(General Purpose Service Robot)，即服务机器人通用测试。该项目测试机器人的综合能力，包括跟随、定位、导航、抓取、人物检测和识别、物体检测和识别、自然语言理解和对话等。在这个测试中，没有预先定义的场景和可以由确定的基本动作序列完成的任务。</p>
<ul>
<li><p><strong>重点考察能力：</strong></p>
<ul>
<li><p>没有特定顺序的动作集，因此不能由预先定义好的状态机编程来实现。</p>
</li>
<li><p>增强的语音识别、处理能力。由于任务是不确定的，因此语音也是不确定的，命令不再是单纯的动作或物体，可能包含多个物体和动作，例如：“将杯子放在厨房的桌子上（put the mug on the kitchen table）”。</p>
</li>
</ul>
</li>
<li><p><strong>比赛要求：</strong></p>
<ul>
<li><p>所有机器人的能力形成行动集合A（例如寻找特定人、跟随、抓取和运动物体等），这项能力对所有的机器人都是必须要有的，不随着各自机器人能够实现的能力而变化。例如如果机器人只能完成自主行走，而不能进行寻找人、抓取等，则其行动集不会减少。</p>
</li>
<li><p>物体集合B，该集合由比赛过程中各个队伍选择的10个物体构成，在整个比赛中统一使用。</p>
</li>
<li><p>位置集合L，该集合由比赛前确定，如果涉及到抓取任务，则抓取的位置可以由机器人的可达高度来进行一定的取舍。</p>
</li>
</ul>
</li>
<li><p><strong>自主进场：</strong><br>机器人需要自主到达场内的指定位置。到达指定地点之后，机器人被给予一个英文句子或一个中文句子，该句子包含三个任务。每个任务包含一个动作a∈A和相应的依赖动作的物体b∈B或位置l∈L。动作集合和物体以及位置不同，动作集合不是事先给定的，而需要队伍自己去考虑或实现（包括对应动作的同义词）。即对于一个动作，在任务描述中可能有许多不同的说法，例如对于导航类的任务，等价的说法包括go to, move to, drive to或navigate to等。</p>
</li>
<li><p><strong>获取任务：</strong><br>任务由标准的软件生成器生成，并且需要由裁判将任务要求一字不漏的传达给机器人。</p>
</li>
<li><p><strong>过程：</strong><br>如果重负下达任务3次之后，机器人依然没有正确的理解，可以允许重启，重启之后会生成一个新的任务交给机器人去完成。机器人识别整个句子之后，应该完整的将其复述出来才能被认为是理解了命令。</p>
</li>
<li><p><strong>任务示例：</strong><br>“Move to the living room, get the cup and put it on the kitchen table.”，所有的动作都和位置或物体相联系。</p>
</li>
</ul>
<p><strong>总结：</strong><br>我记得这个测试由于难度太大（当然，这里得排除中科大WrightEagle队的可佳），技术委员会在征求各队意见并开会讨论之后，最后将规则进行了简化，只保留了命令理解和简单任务执行部分，不过依然没有一个机器人能够正确地执行完一个完整任务的。从该项测试中不难看出，目前国内高校在服务机器人综合能力的研究方面还存在很多的不足之处。</p>
<p>我个人认为GPSR不仅是整个服务机器人比赛中最具挑战性的项目，它更代表了服务机器人技术领域里的终极目标——能够像人一样理解命令并正确地执行任务。虽然现在让机器人连续完成语义理解、自主移动、识别物体、抓取物体等一系列动作很难，但只要每个模块（如底盘、图像等）都能被封装得足够鲁棒，假以时日，上述的问题都将会得到解决。</p>
</li>
<li><h4 id="WhoIsWho"><a href="#WhoIsWho" class="headerlink" title="WhoIsWho"></a>WhoIsWho</h4><p><strong>简介：</strong><br>机器人需要在陌生环境中自主地识别人。该项测试主要考察机器人的语音识别、人脸检测、人脸识别、自主导航、人机互动等功能。</p>
<ul>
<li><p><strong>场地准备：</strong><br>五个客人先进入场地，等比赛开始之后，机器人才能进入房间。</p>
</li>
<li><p><strong>介绍自己：</strong><br>机器人识别客人，并依次走向每个客人，在此过程中，客人需要面向机器人介绍自己，并向机器人提出自己希望其帮自己拿的物品。在学习阶段，客人绝对不能触碰机器人。在客人告诉机器人自己的名字和所需物品之后，机器人必须说出它所理解到的名字和物品。</p>
</li>
<li><p><strong>获取物品：</strong><br>机器人导航到指定位置获得客人所需物品，机器人得到所需的一个或几个物品后回到客人所在房间。</p>
</li>
<li><p><strong>识别人：</strong><br>机器人回到房间后找到相应的客人，给予他所需的物品，并询问是否满足要求。</p>
</li>
<li><p><strong>离开场地：</strong><br>当机器人已经为所有客人拿好物品后，或者决定停止寻找时，它需从另一扇门离开。</p>
</li>
</ul>
<p><strong>总结：</strong><br>WhoIsWho测试的结果跟上面的GPSR差不多，基本所有队伍在<strong>介绍自己</strong>阶段就跪了，究其原因主要是自主机器人所需的技术比较复杂，而且由于比赛现场环境比较嘈杂和混乱，导致了某些算法在识别精度上大打折扣，从而影响了机器人系统的整体发挥。</p>
</li>
<li><h4 id="Shopping"><a href="#Shopping" class="headerlink" title="Shopping"></a>Shopping</h4><p><strong>简介：</strong><br>该项测试关注机器人在真实环境中的移动操作。由于环境初始是未知的，所以该测试不仅考察机器人的自主抓取，还需要机器人拥有SLAM的能力。</p>
<ul>
<li><p><strong>引导阶段：</strong><br>比赛起点为一些固定的地点，引导者向机器人介绍四个地点。在每个地点，引导者需要引导机器人移动到一个特定的货架，并告诉它需要获取货架上的那一个物品。该物品取自机器人可操作的物品栏。在每个货架上只放有物品清单上的一种类型的物品，而且必须至少有一个物品是放在机器人能够操纵的地方。引导者需要使用某种姿势来指向可操作的物品，等所有四个地点都到达后，引导者引导机器人到预先指定的收银台。</p>
</li>
<li><p><strong>操作和导航阶段：</strong><br>在收银台，引导者命令机器人去货架拿取物品。机器人需要从相应的货架处取回四个物品中的三个，并且将它交给在收银台等候的引导者。三个物品都被取回后，机器人被命令回到开始位置。</p>
</li>
</ul>
<p><strong>总结：</strong><br>对于各个参赛队伍来说，Shopping测试依然很难完成。主要问题在于目前配备有机械臂的机器人很少，只有三个（包括我们那个还无法使用的机械臂），而且机械臂的控制均未达到理想中的水平。不过随着技术的不断成熟和需求的不断增长，机械臂肯定会得到应有的重视。</p>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>虽然这次比赛我们在服务机器人的几个主要项目中都没能发挥出应有的水平，但是失败也让我们懂得了只有辛勤的付出才会有好的结果。我不得不承认我们团队在赛前的准备阶段做得并不是很好，由于受考试等压力的影响，我们每周用于在基地调试机器人的时间不是很多，而且由于在团队管理上缺乏经验，我们在赛前不仅损失了重要模块的负责人，而且在调试的过程中每个成员之间缺少沟通交流，这直接导致了后期晓萌机器人在运行时出现一些比较严重的问题。当然，经历过本次比赛，我们在吸取教训的同时也算是真正地明白了自己与其他强队之间的差距，我相信我们在之后的开发过程中一定能够解决之前出现过的问题，并且绝对不辜负队友和学长的信任，尽全力做出属于我们这一届晓萌团队的成果！</p>
<p>尽管比赛结果我们不是非常满意，但是此行还是有着令人难以置信的好消息：那就是我们非常幸运地被时任RoboCup中国委员会主任、中国科学技术大学的陈小平教授邀请参加在合肥举办的RoboCup国际赛，比赛项目为赛会新创立的BSR(Benchmark Service Robot)，即服务机器人基准测试。届时我们会和来自其他中国高校的服务机器人团队进行比赛，并角逐出最终的名次。当然，对于我们来说，除了参加比赛之外，还能够免费亲眼目睹国内外顶尖高校的机器人以及世界最高水平的机器人比赛，这实在是我们团队的荣幸，我们一定会尽全力在国际赛上用优异的表现来证明自己的实力！</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> RoboCup比赛系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RoboCup </tag>
            
            <tag> RoboCup@Home </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RoboCup比赛系列（零）：总纲]]></title>
      <url>http://myyerrol.io/zh-cn/2017/07/01/robocup_competition_0_superclass/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我记得自己大二刚来基地的时候，狗哥（<strong>西工大一小学生</strong>）就曾告诉我们这一届新队员：</p>
<blockquote>
<p>我们参加机器人比赛重要的是经历和交流，而不是结果。最后获得的奖只能代表你参加过此次比赛，它无法全部证明你的能力。</p>
</blockquote>
<p>当时听完学长的话，我心里面也是非常认同的，直到后来我参加过三次机器人比赛之后，我才算是真正地体会到学长这番话的含义：对于需要好成绩才能从学校那里拿到足够资金的基地来说，结果是重要的。但对于个人来说，我们从比赛中所获得经验教训以及与其他的队伍进行的技术交流才是最重要的，而不是所谓的加分。</p>
<a id="more"></a>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>我们团队参加的比赛类别为RoboCup@Home，即RoboCup服务机器人项目组。关于具体什么是<a href="http://www.robocup.org" target="_blank" rel="external">RoboCup</a>和<a href="http://www.robocupathome.org" target="_blank" rel="external">RoboCup@Home</a>，接下来我会对它们进行详细的介绍。</p>
<h3 id="RoboCup"><a href="#RoboCup" class="headerlink" title="RoboCup"></a>RoboCup</h3><p><img src="/images/robocup/robocup.png" alt="robocup"></p>
<ul>
<li><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>RoboCup is an international scientific initiative with the goal to advance the state of the art of intelligent robots. When established in 1997, the original mission was to field a team of robots capable of winning against the human soccer World Cup champions by 2050.</p>
<p>RoboCup是一项旨在推进智能机器人技术水平的国际科学计划。在1997年成立的时候，其最初的任务是要在2050年之前组建一支能够赢得人类足球世界杯冠军的机器人队。</p>
</li>
<li><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>It is our intention to use RoboCup as a vehicle to promote robotics and AI research, by offering a publicly appealing, but formidable challenge. One of the effective ways to promote science and engineering research is to set a challenging long term goal. When the accomplishment of such a goal has significant social impact, it is called a grand challenge project. Building a robot that plays soccer will not by itself generate significant social and economic impact, but the accomplishment will certainly be considered a major achievement for the field. We call this kind of project a landmark project. RoboCup is a landmark project as well as a standard problem.</p>
<p>我们打算通过提供一个公开吸引人但艰巨的挑战，来把RoboCup作为推动机器人和AI研究的工具。促进科学和工程研究的有效途径之一是制定具有挑战性的长期目标。当这样一个目标的实现具有重大的社会影响时，它就被称为是一个伟大的挑战项目。建立踢足球的机器人本身不会产生重大的社会和经济影响，但成果肯定会被认为是该领域的重大成就。我们称这种项目是一个里程碑式的项目。RoboCup既是一个里程碑式的项目，也是一个标准的问题。</p>
</li>
<li><h4 id="梦想"><a href="#梦想" class="headerlink" title="梦想"></a>梦想</h4><p>We proposed that the ultimate goal of the RoboCup Initiative to be stated as follows:</p>
<blockquote>
<p>By the middle of the 21st century, a team of fully autonomous humanoid robot soccer players shall win a soccer game, complying with the official rules of FIFA, against the winner of the most recent World Cup.</p>
</blockquote>
<p>We propose that this goal will be one of the grand challenges shared by the robotics and AI communities for the next 50 years. This goal may sound overly ambitious given the state of the art of technology today.</p>
<p>Nevertheless, we believe it is important that such a long-range goal should be set and pursued. It took only 50 years from the Wright Brothers’ first aircraft to the Apollo mission, to send a man to the moon and safely return him to the earth. It also took only 50 years, from the invention of the digital computer to Deep Blue, which beat the human world champion in chess. Building a humanoid soccer player requires an equally long period and extensive efforts of a broad range of researchers, and the goal will not be met in the near future.</p>
<p>我们提出，RoboCup计划的终极目标如下：</p>
<blockquote>
<p>到二十一世纪中叶，一个完全自主的类人机器人足球运动员队伍在遵守国际足联的官方规则下与人类世界杯冠军队伍进行对抗，并取得最终的胜利。</p>
</blockquote>
<p>我们提议这个目标将是未来五十年机器人和AI社区所共同面临的巨大挑战之一。鉴于当今的技术水平，这个目标可能听起来过于雄心勃勃。</p>
<p>不过，我们相信如此长远的目标得到确定和追求是很重要的。从莱特兄弟的第一架飞机到派人登上月球上并将其安全送回地球的阿波罗任务仅花了五十年。从数字计算机的发明到在国际象棋比赛中击败人类世界冠军的深蓝也仅花了五十年的时间。构建类人足球运动员需要相当长的时间以及大量研究人员的广泛努力，所以短期内这一目标不会实现。</p>
</li>
<li><h4 id="里程碑"><a href="#里程碑" class="headerlink" title="里程碑"></a>里程碑</h4><p>In the case of RoboCup, the ultimate goal is to “develop a robot soccer team which beats the human world champion team.” (A more modest goal is “to develop a robot soccer team which plays like human players.”)</p>
<p>Needless to say, the accomplishment of the ultimate goal will take decades of effort. It is not feasible, with current technologies to accomplish this goal in the near future. However, this goal can easily lead to a series of well-directed subgoals. Such an approach is common in any ambitious, or overly ambitious project. In the case of the American space program, the Mercury project and the Gemini project, which manned an orbital mission, were two precursors to the Apollo mission. The first subgoal to be accomplished in RoboCup is “to build real and software robot soccer teams which play reasonably well with modified rules.” Even to accomplish this goal will undoubtedly generate technologies, which will impact a broad range of industries.</p>
<p>对于RoboCup来说，其终极目标是“开发一个击败人类世界冠军队伍的机器人足球队”（一个更为谦虚的目标是“开发一个表现与人类运动员类似的机器人足球队”）。</p>
<p>毫无疑问，完成这个终极目标需要几十年的努力，短期内使用当前技术实现该目标是不可行的。然而，该目标很容易催生一系列具有针对性的子目标，这种方法在任何有雄心或过于雄心勃勃的项目中都是常见的。在美国太空计划中，水星项目和配备轨道任务的双子星座项目是阿波罗任务的两个前身。在RoboCup中，第一个将要完成的子目标是“建立真实和基于软件的机器人足球队，它们能根据修改过的规则在比赛中表现得很合理”。即使实现这一目标，毫无疑问也会产生影响广泛行业的新技术。</p>
</li>
<li><h4 id="标准问题"><a href="#标准问题" class="headerlink" title="标准问题"></a>标准问题</h4><p>One other aspect of RoboCup is a view that RoboCup is a standard problem so that various theories, algorithms, and architectures can be evaluated. Computer chess is a typical example of such a standard problem. Various search algorithms were evaluated and developed using this domain. With the accomplishment by Deep Blue team, which beat Garry Kasparov, a human grand master, using the official rules, the computer chess challenge came close to its aim. One of the major reasons for the success of computer chess as a standard problem is that the evaluation of progress was clearly defined. The progress of the research can be evaluated as the strength of the system, which was indicated by its rating. However, as computer chess approached its goal, we needed a new challenge. The challenge needed to foster a set of technologies for the next generation of industries. We think that RoboCup will fulfill such a demand.</p>
<p>RoboCup的另一面可以被看做是一个标准问题，它可以评估各种理论、算法和架构。计算机象棋是这样一个标准问题的典型案例，各种搜索算法都可以使用该模式进行了评估和开发。随着深蓝团队使用官方规则打败人类象棋大师加里·卡斯帕罗夫的成就，计算机象棋挑战接近了它的目标。计算机象棋作为标准问题成功的主要原因之一是对其进度的评估是确定的。研究进展可以通过评估来表现系统的能力。然而，随着计算机象棋接近其目标，我们需要一个新的挑战，它需要为下一代产业培育出一系列新技术，我们认为RoboCup将会满足这样的需求。</p>
</li>
</ul>
<h3 id="RoboCup-Home"><a href="#RoboCup-Home" class="headerlink" title="RoboCup@Home"></a>RoboCup@Home</h3><p><img src="/images/robocup/robocup@home.jpg" alt="robocup@home"></p>
<ul>
<li><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h4><p>The RoboCup@Home league aims to develop service and assistive robot technology with high relevance for future personal domestic applications. It is the largest international annual competition for autonomous service robots and is part of the RoboCup initiative. A set of benchmark tests is used to evaluate the robots’ abilities and performance in a realistic non-standardized home environment setting. Focus lies on the following domains but is not limited to: Human-Robot-Interaction and Cooperation, Navigation and Mapping in dynamic environments, Computer Vision and Object Recognition under natural light conditions, Object Manipulation, Adaptive Behaviors, Behavior Integration, Ambient Intelligence, Standardization and System Integration. It is colocated with the RoboCup symposium.</p>
<p>RoboCup@Home联盟旨在开发服务和辅助机器人技术，与未来个人家庭应用高度相关。它是自主服务机器人最大的国际年度大赛，是RoboCup计划的一部分。一套基准测试用于评估机器人在现实非标准化家庭环境中的能力和性能。研究的重点在于以下领域但不限于：人机交互与合作、动态环境中的导航和建图、自然光条件下的计算机视觉和物体识别、物体操作、自适应行为、行为集成、环境智能、标准化和系统集成。它与RoboCup研讨会共同进行。</p>
</li>
</ul>
<h2 id="总纲"><a href="#总纲" class="headerlink" title="总纲"></a>总纲</h2><p>以下是我原创的RoboCup比赛系列文章：</p>
<p><a href="http://myyerrol.io/zh-cn/2017/07/01/robocup_competition_0_superclass/">RoboCup比赛系列（零）：总纲</a><br><a href="http://myyerrol.io/zh-cn/2017/07/11/robocup_competition_1_luoyang/">RoboCup比赛系列（一）：中国服务机器人大赛</a><br><a href="http://myyerrol.io/zh-cn/2017/07/21/robocup_competition_2_hefei/">RoboCup比赛系列（二）：RoboCup合肥国际赛前一天</a><br><a href="http://myyerrol.io/zh-cn/2017/07/31/robocup_competition_3_hefei/">RoboCup比赛系列（三）：RoboCup合肥国际赛第一天</a><br><a href="http://myyerrol.io/zh-cn/2017/08/11/robocup_competition_4_hefei/">RoboCup比赛系列（四）：RoboCup合肥国际赛第二天</a><br><a href="http://myyerrol.io/zh-cn/2017/08/21/robocup_competition_5_hefei/">RoboCup比赛系列（五）：RoboCup合肥国际赛第三天</a><br><a href="http://myyerrol.io/zh-cn/2017/08/31/robocup_competition_6_hefei/">RoboCup比赛系列（六）：RoboCup合肥国际赛第四天</a><br><a href="http://myyerrol.io/zh-cn/2017/09/11/robocup_competition_7_hefei/">RoboCup比赛系列（七）：RoboCup合肥国际赛第五天</a><br><a href="http://myyerrol.io/zh-cn/2017/09/21/robocup_competition_8_hefei/">RoboCup比赛系列（八）：RoboCup合肥国际赛第六天</a><br><a href="http://myyerrol.io/zh-cn/2017/10/01/robocup_competition_9_guiyang/">RoboCup比赛系列（九）：RoboCup贵阳公开赛</a></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>时至今日，那些过往比赛的经历依然历历在目：我们一起装箱运送机器人、在宾馆里熬夜调试代码、在比赛会场紧张地敲击着命令行。我们既有为失败而留的泪水，也有因努力付出所获得的阶段性成功，无论最终的比赛结果如何，它们已经成为我大学最美好的回忆，同时也是我人生中最不可缺少的宝贵财富。</p>
<p>接下来，我会以系列文章的形式记录我大学所经历过的三次RoboCup比赛，其中重点突出比赛经历，而非技术开发要点。总之，希望自己从比赛中所获得的教训和经验都能始终铭记在心中，并为之后所用。</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> RoboCup比赛系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RoboCup </tag>
            
            <tag> RoboCup@Home </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo教程系列（二）：Freemind主题的配置]]></title>
      <url>http://myyerrol.io/zh-cn/2017/06/07/hexo_blog_2_freemind_configuration/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我之前在选择自己博客网站主题的时候曾浏览过<a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo主题</a>网站，发现Hexo官方提供了不少各具特色的主题。后来为了进一步确定到底使用哪个主题，我又仔细地参考了知乎上有关<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="external">Hexo主题推荐</a>的文章。总之，在一段长时间的纠结和考虑之后，我最终决定放弃参考别人的想法而是遵循自己内心的感觉，选择了一个叫Freemind的主题。</p>
<p>Freemind主题虽然不是Hexo里面排名前十或在推荐里面出现次数较多的主题，但它的那种简约而又专业的风格令我十分喜欢。接下来，我会简要地介绍Freemind主题的特点和安装步骤，并重点地讲解它的配置方法。当然了，Hexo主题的配置基本上大同小异，只要学会了其中一种主题的配置方法，其他的就可以触类旁通了。</p>
<a id="more"></a>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>Freemind主题是由Joe所编写的，它拥有以下几个特点：</p>
<h3 id="双列布局"><a href="#双列布局" class="headerlink" title="双列布局"></a>双列布局</h3><p>使用最传统和舒适的博客布局。</p>
<h3 id="标签插件"><a href="#标签插件" class="headerlink" title="标签插件"></a>标签插件</h3><p>基于<a href="https://github.com/wzpan/hexo-tag-bootstrap" target="_blank" rel="external">hexo-tag-bootstrap</a>编写了功能丰富的标签插件，可以最大程度地发挥Bootstrap的能力。其中包括：</p>
<ul>
<li>可以插入一段带有特殊颜色标记的文本。</li>
<li>可以插入一个按钮，并为其指定超链接、文本和颜色。</li>
<li>可以插入一个标签，并为其指定文本和形式。</li>
<li>可以插入一个徽章，并为其指定文本。</li>
<li>可以插入一段文本信息，并为其指定不同的样式。</li>
</ul>
<h3 id="主题颜色"><a href="#主题颜色" class="headerlink" title="主题颜色"></a>主题颜色</h3><p>Freemind主题内置了十几种颜色，可以通过配置进行修改。</p>
<h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><p>基于<a href="https://github.com/paichyperiondev/hexo-generator-search" target="_blank" rel="external">hexo-generator-search</a>实现了一个支持实时预览的本地搜索引擎。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装Freemind主题"><a href="#安装Freemind主题" class="headerlink" title="安装Freemind主题"></a>安装Freemind主题</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$&gt; <span class="built_in">cd</span> your_blog</div><div class="line">$&gt; git <span class="built_in">clone</span> https://github.com/wzpan/hexo-theme-freemind.git themes/freemind</div></pre></td></tr></table></figure>
<h3 id="安装hexo-tag-bootstrap插件"><a href="#安装hexo-tag-bootstrap插件" class="headerlink" title="安装hexo-tag-bootstrap插件"></a>安装<a href="https://github.com/wzpan/hexo-tag-bootstrap" target="_blank" rel="external">hexo-tag-bootstrap</a>插件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; npm install hexo-tag-bootstrap --save</div></pre></td></tr></table></figure>
<h3 id="安装hexo-generator-search插件"><a href="#安装hexo-generator-search插件" class="headerlink" title="安装hexo-generator-search插件"></a>安装<a href="https://github.com/paichyperiondev/hexo-generator-search" target="_blank" rel="external">hexo-generator-search</a>插件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; npm install hexo-generator-search --save</div></pre></td></tr></table></figure>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h3 id="Hexo目录"><a href="#Hexo目录" class="headerlink" title="Hexo目录"></a>Hexo目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">|__ .deploy_git/</div><div class="line">|__ .git/</div><div class="line">|__ .gitignore</div><div class="line">|__ _config.yaml</div><div class="line">|__ LICENSE</div><div class="line">|__ node_modules/</div><div class="line">|__ package.json</div><div class="line">|__ public/</div><div class="line">|__ README.md</div><div class="line">|__ scaffolds</div><div class="line">|   |__ draft.md</div><div class="line">|   |__ freemind.md</div><div class="line">|   |__ page.md</div><div class="line">|   |__ post.md</div><div class="line">|__ setup.sh</div><div class="line">|__ <span class="built_in">source</span></div><div class="line">|   |__ _posts/</div><div class="line">|   |__ about/</div><div class="line">|   |__ categories/</div><div class="line">|   |__ images/</div><div class="line">|   |__ tags/</div><div class="line">|__ themes</div><div class="line">|   |__ freemind/</div><div class="line">|   |__ landscape/</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>.deploy_git(不被Git管理):</strong><br>存放远程博客网站的全部内容。</p>
</li>
<li><p><strong>.git(不被Git管理):</strong><br>Git的核心功能目录。</p>
</li>
<li><p><strong>.gitignore:</strong><br>Git的忽略文件，用于忽略某些文件的版本管理。</p>
</li>
<li><p><strong>_config.yaml:</strong><br>博客网站的配置文件，里面包含了配置过程中的大部分参数。</p>
</li>
<li><p><strong>db.json(不被Git管理):</strong><br>在博客网站的中间数据库文件。</p>
</li>
<li><p><strong>LICENSE:</strong><br>仓库使用的开源版本协议。</p>
</li>
<li><p><strong>node_modules:</strong><br>博客网站开发所需要或依赖的Node.js模块。</p>
</li>
<li><p><strong>package.json:</strong><br>记录Hexo以及各种插件版本信息的文件。</p>
</li>
<li><p><strong>public(不被Git管理):</strong><br>存放生成的博客网站的全部内容。</p>
</li>
<li><p><strong>README.md:</strong><br>仓库的使用介绍。</p>
</li>
<li><p><strong>scaffolds:</strong><br>模板文件夹，用来创建不同风格的文章。</p>
</li>
<li><p><strong>setup.sh:</strong><br>安装Hexo插件的脚本文件。</p>
</li>
<li><p><strong>source:</strong><br>存放用户资源的文件夹，里面一般文章和图片等。</p>
</li>
<li><p><strong>themes:</strong><br>主题文件夹，Hexo会根据主题来生成相应的静态博客网站。</p>
</li>
</ul>
<h3 id="Freemind目录"><a href="#Freemind目录" class="headerlink" title="Freemind目录"></a>Freemind目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">|__ .gitignore</div><div class="line">|__ _config.yaml</div><div class="line">|__ languages/</div><div class="line">|__ layout/</div><div class="line">|__ LICENSE</div><div class="line">|__ README.md</div><div class="line">|__ <span class="built_in">source</span>/</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>.gitignore:</strong><br>Git的忽略文件，用于忽略某些文件的版本管理。</p>
</li>
<li><p><strong>_config.yaml:</strong><br>主题的配置文件，里面包含了配置过程中的大部分参数。</p>
</li>
<li><p><strong>languages:</strong><br>主题的语言文件夹。</p>
</li>
<li><p><strong>layout:</strong><br>主题的页面布局文件夹。</p>
</li>
<li><p><strong>LICENSE:</strong><br>主题使用的开源版本协议。</p>
</li>
<li><p><strong>README.md:</strong><br>主题的使用介绍。</p>
</li>
<li><p><strong>source:</strong><br>主题的核心功能文件夹。</p>
</li>
</ul>
<h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">theme:</span> <span class="string">freemind</span></div></pre></td></tr></table></figure>
<p>修改Hexo根目录下<code>_config.yaml</code>文件中的theme选项为freemind来启用该主题。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="首页摘要"><a href="#首页摘要" class="headerlink" title="首页摘要"></a>首页摘要</h3><p>在网站首页，文章中的内容默认是全部展开的。你可以通过在文章中添加如下标签，来显示该标签以前文章中的所有内容（通过在文章相应位置插入一个<strong>阅读全文</strong>的按钮来实现），这样做可以让网站首页看起来较为简洁并且突出了每个文章的重点。</p>
<figure class="highlight md"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!--more--&gt;</div></pre></td></tr></table></figure>
<h3 id="标题页面"><a href="#标题页面" class="headerlink" title="标题页面"></a>标题页面</h3><p>Freemind预先已经定义了<strong>分类</strong>、<strong>标签</strong>和<strong>关于</strong>页面的排版和布局，但是要想让它们显示出来，就需要自己手动在博客网站的<code>source</code>目录中添加相应的页面。</p>
<p>例如，为了能让<strong>分类</strong>页面可以在鼠标点击之后显示出来，你需要在<code>source/categories/</code>目录下创建一个<code>index.md</code>文件，其中的内容如下：</p>
<figure class="highlight md"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 分类</div><div class="line"><span class="section">layout: categories</span></div><div class="line">---</div></pre></td></tr></table></figure>
<p><strong>标签</strong>页面的内容与上面类似，具体内容如下：</p>
<figure class="highlight md"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 标签</div><div class="line"><span class="section">layout: tags</span></div><div class="line">---</div></pre></td></tr></table></figure>
<p>最后<strong>关于</strong>页面中的内容如下：</p>
<figure class="highlight md"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 关于</div><div class="line"><span class="section">layout: page</span></div><div class="line">---</div></pre></td></tr></table></figure>
<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  为了能使用Markdown语法来对关于页面中的内容进行编写，我将原本官方教程中需要创建的index.html文件修改为了index.md，经过测试，两者显示效果相同。</div>
<h3 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h3><h4 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">default_layout:</span> <span class="string">freemind</span></div></pre></td></tr></table></figure>
<p>上面的配置（存在于<code>_config.yaml</code>文件中）修改了文章的默认布局，可以在终端里使用如下的命令来简化：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo new <span class="string">"article"</span></div></pre></td></tr></table></figure>
<p>而不需要</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo new freemind <span class="string">"article"</span></div></pre></td></tr></table></figure>
<h4 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h4><p>因为Freemind主题在Hexo的基础之上，额外提供了一些新的front-matter选项，所以我创建了这个freemind布局（<code>scaffolds/freemind.md</code>）来更好地装饰整篇文章。以下是其中的具体内容：</p>
<figure class="highlight md"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">tags:</div><div class="line">categories:</div><div class="line">description:</div><div class="line">feature: false</div><div class="line">toc: true</div><div class="line"><span class="section">comments: true</span></div><div class="line">---</div><div class="line"></div><div class="line">&#123;% alert info %&#125;</div><div class="line">普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div><div class="line">&#123;% endalert %&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>title:</strong><br>文章的标题，由创建文章命令中的title自动写入，可以手动修改。</p>
</li>
<li><p><strong>date:</strong><br>文章的创建日期，由创建文章命令时的系统时间自动写入，可以手动修改。</p>
</li>
<li><p><strong>tags:</strong><br>文章的标签，用于在博客网站首页的标签页里进行显示，可以添加多个。</p>
</li>
<li><p><strong>categories:</strong><br>文章的分类，用于在博客网站首页的分类页里进行显示。</p>
</li>
<li><p><strong>description:</strong>（新）<br>文章的描述，用于在文章顶部插入一段简短的摘要信息。</p>
</li>
<li><p><strong>feature:</strong>（新）<br>文章的特征图，用于在博客网站首页的文章列表中进行显示。</p>
</li>
<li><p><strong>toc:</strong>（新）<br>文章的目录，用于显示文章的目录层级。</p>
</li>
<li><p><strong>comments:</strong><br>文章的评论，用于留言和交流。</p>
</li>
</ul>
<h3 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Disqus</span></div><div class="line"><span class="attr">disqus_shortname:</span> <span class="string">myyerrol</span></div></pre></td></tr></table></figure>
<p>因为多说已经关闭，所以我使用Disqus来取代其做博客的评论系统，上面需要填写的是注册Disqus时所指定的ID。具体的操作步骤如下：</p>
<p><strong>1. 注册或登录Disqus</strong></p>
<p><img src="/images/disqus/disqus_login_and_signup.png" alt="disqus_login_and_signup"></p>
<p>打开<a href="https://disqus.com/" target="_blank" rel="external">Disqus</a>主页，可以看到，Disqus 支持 Facebook，Twitter以及 Google 登录，当然也可以用邮箱注册一个账号，如果是注册的账号，需要验证一下邮箱。</p>
<p><strong>2. 配置Disqus</strong></p>
<p>登陆后，在<a href="https://disqus.com/" target="_blank" rel="external">Disqus</a>主页选择<strong>GET STARTED</strong>按钮，会出现如下界面：</p>
<p><img src="/images/disqus/disqus_get_started.png" alt="disqus_get_started"></p>
<p>选择<strong>I want to install Disqus on my site</strong>选项后，接着会出现下面的界面：</p>
<p><img src="/images/disqus/disqus_create_site.png" alt="disqus_create_site"></p>
<ul>
<li><p><strong>Website Name:</strong><br>你的网站名字，可以随便起，但最好和你的网站相关。</p>
</li>
<li><p><strong>Shortname:</strong><br>这个就是上面Hexo配置中的disqus_shortname，要求全网唯一，设定之后不可改变。推荐使用你的英文名来当做Shortname。</p>
</li>
<li><p><strong>Category:</strong><br>这个是站点的种类，你可以根据自己的实际情况来进行选择。</p>
</li>
</ul>
<p>在填写完上面的内容之后，点击<strong>Create Site</strong>，等待页面的跳转。接下来在页面的左侧点击<strong>Configure Disqus</strong></p>
<p><img src="/images/disqus/disqus_configuration.png" alt="disqus_configuration"></p>
<ul>
<li><p><strong>Website Name:</strong><br>自动从上面创建站点的步骤中读取，不需要手填。</p>
</li>
<li><p><strong>Website URL:</strong><br>自己博客网站的地址，需要如实填写。</p>
</li>
<li><p><strong>Category:</strong><br>自动从上面创建站点的步骤中读取，不需要手填。</p>
</li>
<li><p><strong>Description:</strong><br>网站的描述，可以不写。</p>
</li>
<li><p><strong>Language:</strong><br>Disqus显示在网站中的语言，根据自己的实际情况来选择，一般选择Chinese或English。</p>
</li>
</ul>
<p>配置完以上内容后，点击<strong>Complete Setup</strong>完成Disqus的配置。</p>
<p><strong>3. 配置Hexo</strong></p>
<p>最后，在<code>_config.yaml</code>文件中将disqus_shortname填写为上面Disqus创建的Shortname就可以了。</p>
<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  Disqus评论系统需要翻墙才可以访问，而且在留言之前要先登录个人账户。</div>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><h4 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h4><p>我的Hexo配置文件（<code>_config.yaml</code>）内容如下：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site</span></div><div class="line"><span class="attr">title:</span> <span class="string">Home</span> <span class="string">| myyerrol's blog</span></div><div class="line"><span class="attr">subtitle:</span> <span class="string">Home</span> <span class="string">| myyerrol's blog</span></div><div class="line"><span class="attr">description:</span> <span class="string">"This is my personal website, which uses the hexo system to build. Enter the following URL to access: https://myyerrol.github.io"</span></div><div class="line"><span class="attr">author:</span> <span class="string">myyerrol</span></div><div class="line"><span class="attr">language:</span> <span class="string">zh-cn</span></div><div class="line"><span class="attr">timezone:</span></div><div class="line"></div><div class="line"><span class="comment"># URL</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line"><span class="attr">url:</span> <span class="attr">http://yoursite.com</span></div><div class="line"><span class="attr">root:</span> <span class="string">/</span></div><div class="line"><span class="attr">permalink:</span> <span class="string">:lang/:year/:month/:day/:title/</span></div><div class="line"><span class="attr">permalink_defaults:</span></div><div class="line"><span class="attr">  lang:</span> <span class="string">zh-cn</span></div><div class="line"></div><div class="line"><span class="comment"># Directory</span></div><div class="line"><span class="attr">source_dir:</span> <span class="string">source</span></div><div class="line"><span class="attr">public_dir:</span> <span class="string">public</span></div><div class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></div><div class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></div><div class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></div><div class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></div><div class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></div><div class="line"><span class="attr">skip_render:</span></div><div class="line"></div><div class="line"><span class="comment"># Writing</span></div><div class="line"><span class="attr">new_post_name:</span> <span class="string">:lang/:year-:month-:day-:title.md</span> <span class="comment"># File name of new posts</span></div><div class="line"><span class="attr">default_layout:</span> <span class="string">freemind</span></div><div class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></div><div class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></div><div class="line"><span class="attr">filename_case:</span> <span class="number">0</span></div><div class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></div><div class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></div><div class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></div><div class="line"><span class="attr">future:</span> <span class="literal">true</span></div><div class="line"><span class="attr">highlight:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  tab_replace:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Category &amp; Tag</span></div><div class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></div><div class="line"><span class="attr">category_map:</span></div><div class="line"><span class="attr">tag_map:</span></div><div class="line"></div><div class="line"><span class="comment"># Date / Time format</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></div><div class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></div><div class="line"></div><div class="line"><span class="comment"># Pagination</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line"><span class="attr">per_page:</span> <span class="number">10</span></div><div class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></div><div class="line"></div><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line"><span class="attr">theme:</span> <span class="string">freemind</span></div><div class="line"></div><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:myyerrol/myyerrol.github.io.git</span></div><div class="line"><span class="attr">  branch:</span> <span class="string">master</span></div><div class="line"></div><div class="line"><span class="comment"># Disqus</span></div><div class="line"><span class="attr">disqus_shortname:</span> <span class="string">myyerrol</span></div></pre></td></tr></table></figure>
<h4 id="Freemind"><a href="#Freemind" class="headerlink" title="Freemind"></a>Freemind</h4><p>我的Freemind主题配置文件（<code>themes/freemind/_config.yaml</code>）如下：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div></pre></td><td class="code"><pre><div class="line"><span class="attr">slogan:</span> <span class="string">"Hacking means exploring the limits of what is possible, in a spirit of playful cleverness."</span></div><div class="line"></div><div class="line"><span class="attr">theme:</span> <span class="string">bootstrap</span></div><div class="line"><span class="attr">inverse:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">归档</span></div><div class="line"><span class="attr">    url:</span> <span class="string">archives</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"所有的文章。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-archive"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">分类</span></div><div class="line"><span class="attr">    url:</span> <span class="string">categories</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"所有的分类。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-folder"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">标签</span></div><div class="line"><span class="attr">    url:</span> <span class="string">tags</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"所有的标签。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-tags"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">关于</span></div><div class="line"><span class="attr">    url:</span> <span class="string">about</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"关于。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-user"</span></div><div class="line"></div><div class="line"><span class="attr">links:</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"myyerrol的GitHub"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">http://www.github.com/myyerrol</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"我的GitHub。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-github"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"maksyuki的GitHub"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">http://www.github.com/maksyuki</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"maksyuki的GitHub。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-github"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"mawenke的GitHub"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">http://www.github.com/mawenke</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"mawenke的GitHub。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-github"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"liao-zhihan的GitHub"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">http://www.github.com/liao-zhihan</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"liao-zhihan的GitHub。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-github"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"西工大RoboCup@Home的GitHub"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">http://www.github.com/xm-project</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"西工大RoboCup@Home的GitHub。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-github"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"西工大RoboCup@Rescue的GitHub"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">http://www.github.com/team-explorer-rescue-robot</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"西工大RoboCup@Rescue的GitHub。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-github"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"西工大篮球机器人项目的GitHub"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">http://www.github.com/nwpu-basketball-robot</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"西工大篮球机器人项目的GitHub。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-github"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"HeadsFree项目的GitHub"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">http://www.github.com/HANDS-FREE</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"HeadsFree项目的GitHub。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-github"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"maksyuki的博客"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">http://www.maksyuki.com</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"maksyuki的博客。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-globe"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"mawenke的博客"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">https://mawenke.github.io</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"mawenke的博客。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-globe"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"HandsFree项目的网站"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">http://www.hands-free.org.cn</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"HandsFree项目的网站。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-globe"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"HandsFree项目的维基"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">https://github.com/HANDS-FREE/HANDS-FREE.github.io/wiki</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">"HandsFree项目的维基。"</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-globe"</span></div><div class="line"><span class="attr">  - title:</span> <span class="string">"myyerrol的邮箱"</span></div><div class="line"><span class="attr">    url:</span> <span class="attr">mailto:myyerrol@126.com</span></div><div class="line"><span class="attr">    intro:</span> <span class="string">myyerrol的邮箱。</span></div><div class="line"><span class="attr">    icon:</span> <span class="string">"fa fa-envelope"</span></div><div class="line"></div><div class="line"><span class="attr">widgets:</span></div><div class="line"><span class="bullet">-</span> <span class="string">search</span></div><div class="line"><span class="bullet">-</span> <span class="string">category</span></div><div class="line"><span class="bullet">-</span> <span class="string">tagcloud</span></div><div class="line"><span class="bullet">-</span> <span class="string">recent_posts</span></div><div class="line"><span class="bullet">-</span> <span class="string">links</span></div><div class="line"></div><div class="line"><span class="attr">rss:</span></div><div class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></div><div class="line"><span class="attr">favicon:</span> <span class="string">images/favicon/favicon.ico</span></div><div class="line"><span class="attr">duoshuo_shortname:</span></div><div class="line"></div><div class="line"><span class="comment"># Analytics</span></div><div class="line"><span class="attr">google_analytics:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  siteid:</span></div><div class="line"><span class="attr">baidu_tongji:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  siteid:</span></div><div class="line"></div><div class="line"><span class="comment"># search</span></div><div class="line"><span class="comment"># swiftype_key: ZP2ZSuHgipSZfRyU8uTR</span></div><div class="line"></div><div class="line"><span class="comment"># share widgets</span></div><div class="line"><span class="attr">bdshare:</span> <span class="literal">false</span></div><div class="line"><span class="attr">jiathis:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>slogan:</strong><br>显示在博客网站首页的个性签名。</p>
</li>
<li><p><strong>theme:</strong><br>Freemind的颜色主题，具体可参看<a href="http://hahack.com/hexo-theme-freemind/2016/01/30/color-themes/" target="_blank" rel="external">Freemind颜色主题配置</a>。</p>
</li>
<li><p><strong>inverse:</strong><br>Freemind颜色主题的反转，配合上面的theme选项一起使用。</p>
</li>
<li><p><strong>menu:</strong><br>显示在博客网站首页的导航菜单。</p>
</li>
<li><p><strong>links:</strong><br>显示在博客网站首页的推荐链接。</p>
</li>
<li><p><strong>widgets:</strong><br>显示在博客网站首页右侧的挂件列表。</p>
</li>
<li><p><strong>rss:</strong><br>显示博客网站的RSS链接。</p>
</li>
<li><p><strong>fancybox:</strong><br>是否开启<a href="http://fancyapps.com/fancybox/3/" target="_blank" rel="external">fancyBox</a>功能。</p>
</li>
<li><p><strong>favicon:</strong></p>
</li>
</ul>
<ul>
<li><p><strong>duoshuo_shortname:</strong><br>多说ID，由于关闭，不再使用。</p>
</li>
<li><p><strong>google_analytics:</strong><br>Google分析，用于分析访问量。</p>
</li>
<li><p><strong>baidu_tongji:</strong><br>Baidu统计，用于统计访问量。</p>
</li>
<li><p><strong>swiftype_key:</strong><br>外部搜索的密钥，用于检索博客文章。</p>
</li>
<li><p><strong>bdshare:</strong><br>分享插件。</p>
</li>
<li><p><strong>jiathis:</strong><br>分享插件。</p>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上就是Freemind主题的基本配置方法，概括来说就是对Hexo根目录和Freemind目录下的两个_config.yaml文件进行配置。Hexo提供的主题有很多，大家可以去<a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo主题</a>网站选择适合自己的主题来进行配置。最后，在下一篇文章中，我会介绍关于Freemind主题优化方面的配置。</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> Hexo教程系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ROS经验总结系列（二）：晓萌机器人机械臂]]></title>
      <url>http://myyerrol.io/zh-cn/2017/04/20/ros_experience_2_xmbot_arm/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我在大二的时候加入到了西北工业大学舞蹈机器人基地RoboCup@Home项目组，主要负责家政服务机器人晓萌机械臂的软件开发部分。在开发的过程中，我曾遇到并解决过一些问题，也算是积累了一些机械臂开发的经验，因此现在我打算将这些经验分享出来，希望能给那些正在使用ROS来开发机械臂的后来者们提供一些帮助。当然，写得不对的地方欢迎各位大神指正。</p>
<p>以下，我从技术介绍和学习流程两个方面来进行讲解。其中技术介绍方面又分为机械、电子和软件三个章节。由于我在项目组里做的是软件开发工作，对机械和电子了解得相对较少，因此机械和电子这两个章节的内容我会简略地介绍，而讲解的重点自然便是软件章节。最后关于学习流程方面，我从基础、进阶、高级以及资源这四个章节来分别进行叙述，力求将自己的学习方法完整地呈现出来。</p>
<a id="more"></a>
<p><img src="https://github.com/myyerrol/xm_arm_workspace/raw/master/.images/xm_arm.jpg" alt="xm_arm"></p>
<h2 id="技术介绍"><a href="#技术介绍" class="headerlink" title="技术介绍"></a>技术介绍</h2><p>机械臂作为机器人最为重要的执行器，赋予了机器人与外部世界环境进行物理交互的能力。这使得机器人的智能不仅仅停留在识别和规划层上，还能通过实际的操作将其真正的表达出来。目前国内外机械臂研究的热点主要集中在机械臂自主精确抓取、放置物体上，而根据本人之前的开发经历，要想让机械臂能完美地执行一系列复杂且精确的操作从而使末端执行器到达预定的位置是很难的，这需要我们理解并掌握很多与机械臂解算相关的数学知识。我相信这会让很多非专业开发者感到头疼，不过借助于第三方开源软件，比如<a href="http://www.ros.org/" target="_blank" rel="external">ROS</a>和<a href="http://moveit.ros.org/" target="_blank" rel="external">MoveIT!</a>机械臂的开发就会相对来说简单很多。下面，我分机械、电子和软件三个方面，详细地讲解一下自己在开发过程中所总结的一些技术要点。最后，你可以在<a href="https://github.com/myyerrol/xm_arm_workspace" target="_blank" rel="external">开发代码</a>（在ROS Indigo下能成功编译并运行，不支持ROS Kinetic）和<a href="https://github.com/myyerrol/xm_developer_log/blob/master/xm_developer_log.md" target="_blank" rel="external">问题汇总</a>中找到我之前整理的相关资料。</p>
<h3 id="机械"><a href="#机械" class="headerlink" title="机械"></a>机械</h3><p>我们机器人的机械臂在机械设计上有一些不一样的地方。相比于其他使用大扭矩舵机或电机作为关节的机械臂，我们使用了由同步轮和同步带所组成的机械结构，这种独特的结构使得我们的机械臂在一定程度上拥有了抓取更重物体的负载能力。除此之外，机械臂末端的手爪也由上一代的对称张开闭合的结构变成了平行夹紧的形式，即两个金属滑块可以通过在滑轨上对称平行的移动。这使得手爪可以适应不同粗细、形状的物体，为抓紧物体提供最基本的保障。当然，这个机械臂也曾经给我造成过一些小困扰，我会在下面的软件部分讲到，通过这个困扰的解决，你就可以理解为什么机械的设计在某种程度上会影响软件代码的编写。</p>
<h3 id="电子"><a href="#电子" class="headerlink" title="电子"></a>电子</h3><p>电子部分作为连接机械臂软硬件的重要组成部分，主要的任务是负责将软件组通过RS-485传过来的数据进行解析，并且以最快的速度传递给接有驱动盒的电机来实时地控制机械臂。同样的，通过电机编码器返回的数据可以用来记录每个机械臂关节的实时状态，经过一定的数学解算，就可以将其作为运动规划层的输入，为复杂运动的规划提供基本的保证。机械臂控制使用的是位置闭环算法，具体这方面我了解的并不是很多，不过之前用起来还是很稳定的。</p>
<h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><p><img src="https://github.com/myyerrol/xm_arm_workspace/raw/master/.images/xm_arm_software_architecture.png" alt="xm_arm_software_architecture"></p>
<p>从软件架构图中可以很清楚的看到，机械臂的软件层主要由三个部分组成，从下到上依次为：硬件接口层、运动规划层和任务决策层。</p>
<h4 id="硬件接口层"><a href="#硬件接口层" class="headerlink" title="硬件接口层"></a>硬件接口层</h4><p>机械臂硬件接口层的设计理念来源于<a href="http://wiki.ros.org/ros_control" target="_blank" rel="external">ROS Control</a>。ROS Control是ROS提供的软件与硬件之间进行数据通信的中间件，它对硬件进行了抽象，统一了数据通信的接口，并通过插件的形式封装了一些常用的运动控制算法，为建立机器人软硬件模块之间的数据通路提供了便捷。</p>
<p>ROS Control提供的硬件抽象层主要负责管理机器人的硬件资源，而控制器从抽象层请求资源即可，并不直接接触硬件。这提高了代码的复用率和可移植性。</p>
<p>首先，让我们先看一下ROS Control官方提供的数据流图是什么样子的：</p>
<p><img src="http://wiki.ros.org/ros_control?action=AttachFile&amp;do=get&amp;target=gazebo_ros_control.png" alt="ROS Control"></p>
<p>细心的读者可能会发现这两个架构图在硬件接口层部分有一些不一样的地方。接下来我就讲解一下硬件接口层部分各子模块的功能，并解释彼此不同的原因。</p>
<ul>
<li><p>实体机械臂：<br>这一部分指的就是真实客观存在的机械臂。STM32嵌入式控制器使用位置PID闭环算法来计算由硬件抽象层通过串口通信方式发过来的关节数据，并将计算好的数据直接发送给电机对其进行控制。同时，电机的编码器也将电机实时的位置数据经串口通信返回给上面的硬件抽象层。</p>
</li>
<li><p>硬件抽象层：<br>硬件抽象层和硬件直接打交道，通过<strong>write</strong>和<strong>read</strong>方法来完成对硬件的相关操作。硬件抽象层跟上面官方提供（红色的部分）的有一些不太一样的地方在于我并没有使用ROS Control提供的<strong>Transmissions</strong>（数据转换）和<strong>Joint Limits</strong>(关节限位）的API。原因的话，我在下面会讲到。这首先简要的介绍一下什么是Transmissions和Joint Limits。</p>
<ul>
<li><p>Transmissions：<br>Transmissions就是机器人每个运动关节和电机之间的数学映射。因为机械臂关节结构的不同，会导致机器人上层规划所使用的Joint与Actuator数据之间存在明显的偏差。比如说有简单齿轮和同步带驱动的，有锥齿轮差动机构，四连杆机构等。Transmissions提供的接口中包含有解决上面这些结构进行数据转换的映射公式。</p>
</li>
<li><p>Joint Limits：<br>Joint Limits主要是维护了一个关节限位的数据结构，里面可以包含的数据种类不仅仅是常用的关节位置、速度、力矩、加速度等方面的限位，还可以储存具有安全作用的位置软限位、<a href="http://wiki.ros.org/pr2_controller_manager/safety_limits" target="_blank" rel="external">位置边界</a>和<a href="http://wiki.ros.org/pr2_controller_manager/safety_limits" target="_blank" rel="external">速度边界</a>等。</p>
</li>
</ul>
<p>至于我为什么没有使用以上两个模块的原因，主要是参考了<strong>西工大一小学生</strong>曾经在<a href="http://exbot.net" target="_blank" rel="external">Exbot</a>上发表的有关ROS Control的<a href="http://blog.exbot.net/archives/2337" target="_blank" rel="external">文章</a>。下面就截取其中的一小部分：</p>
<blockquote>
<p>以上两个模块是因为URDF中有相应的标签，写了一堆可以直接Load的，但是实际用处并不是很大。它的设计思想是想在URDF中表示更多的信息，这些信息在Gazebo中可以给出更多的细节。但是解析URDF的程序使得RobotHW体量很大，而且这些细节会因为机器人本体通讯暴露给ROS的细节量而不尽相同，而且还会显著提高编程复杂度，所以这些信息显得冗余，而应用这些信息的库也就显得冗余。</p>
</blockquote>
<p>之前，我是有尝试过在RobotHW中加载URDF中的相关标签，不过用起来确实就如同<strong>小学生</strong>所说的那样，比较麻烦，而且还很冗余。因此，我根据机械组队员提供的有关机械臂关节电机转换的数学公式封装了相应的函数，至于Joint Limits，我是在规划层的地方进行了指定。</p>
</li>
<li><p>控制器管理器：<br>控制器管理器提供一种通用的接口来管理不同的<a href="http://wiki.ros.org/ros_controllers" target="_blank" rel="external">ROS Controllers</a>，它可以加载、开始运行、停止运行、卸载不同的Controller，并且提供了多种工具来完成这些操作。<a href="http://wiki.ros.org/controller_manager" target="_blank" rel="external">Controller Manager</a>的输入就是ROS上层应用的输出。在这里面，我用到了Joint Command Controller和Joint State Controller，它们分别可以完成对每个关节的控制以及读取硬件接口中关节的状态。</p>
</li>
</ul>
<hr>
<p>好的。前面讲了很多新的概念，这里我们还是找个案例来具体的分析一下。这里，以我之前整理的<a href="https://github.com/myyerrol/xm_arm_workspace" target="_blank" rel="external">源码</a>作为参考，分析一下机械臂分别在<a href="http://www.gazebosim.org" target="_blank" rel="external">Gazebo</a>仿真和物理物理环境中是如何体现上面那些概念的。</p>
<p>首先看一张来自Gazebo官网的ROS Control架构图：</p>
<p><img src="https://bitbucket.org/osrf/gazebo_tutorials/raw/default/ros_control/Gazebo_ros_transmission.png" alt="Gazebo ROS Control"></p>
<p>从图中可以看到，<strong>Simulation</strong>和<strong>Hardware</strong>之上的Hardware Resource和Controller Manager是一样的，这很清晰地体现了ROS Control的底层无关性，即无论使用的是抽象的仿真还是具体的硬件，只要程序能继承RobotHW硬件抽象层的基类来做到数据接口的统一，Controller Manager就可以对相应的资源进行管理。</p>
<p>对于<strong>Simulation</strong>和<strong>Hardware</strong>来说，它们内部架构相似，但配置以及使用方式是不一样的。<strong>Simulation</strong>的RobotHW部分，Gazebo官方已经将其实现，并且提供了相应的ROS Control插件来从机械臂的URDF文件中载入所需的数据。用户只需写好URDF和YAML文件，并使用ROS Launch将其整合到一起就万事大吉了。</p>
<p>而对于<strong>Hardware</strong>这部分来说，除了上面说到的配置之外，我们还需要自己编写C++代码来继承RobotHW基类，并在里面分别使用命令和状态硬件接口句柄对相应的关节数据进行<strong>注册</strong>，然后再将不同的硬件接口注册到RobotHW上。最后，我们还要自己编写函数完成对关节和电机数据的相互转换，并且根据指定的通信协议，实现<strong>read</strong>和<strong>write</strong>函数。</p>
<ul>
<li>仿真部分：</li>
</ul>
<blockquote>
<p>xm_arm_description/gazebo/xm_arm_gazebo_transmission.xacro</p>
</blockquote>
<p>每个关节都添加了Hardware Interface，并且在具有父子关系的两个关节之间添加了对应的Transmission。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">robot</span> <span class="attr">xmlns:xacro</span>=<span class="string">"http://www.ros.org/wiki/xacro"</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">"lift_simp_tran"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_lift"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">"lift_motor"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>1<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">"waist_simp_tran"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_waist"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">"waist_motor"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>1<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">"big_arm_simp_tran"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_big_arm"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">"big_arm_motor"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>1<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">"forearm_simp_tran"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_forearm"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">"forearm_motor"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>1<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">"wrist_pitching_simp_tran"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_wrist_pitching"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">"wrist_motor_1"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>1<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">"wrist_rotation_simp_tran"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_wrist_rotation"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">"wrist_motor_2"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>1<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">robot</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_description/gazebo/xm_gazebo_ros_control.xacro</p>
</blockquote>
<p>为了让Gazebo可以识别Transmission标签，需要添加Gazebo的ROS Control插件。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">robot</span> <span class="attr">xmlns:xacro</span>=<span class="string">"http://www.ros.org/wiki/xacro"</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">gazebo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">name</span>=<span class="string">"gazebo_ros_control"</span> <span class="attr">filename</span>=<span class="string">"libgazebo_ros_control.so"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">robotNamespace</span>&gt;</span>/xm_arm<span class="tag">&lt;/<span class="name">robotNamespace</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">robotSimType</span>&gt;</span>gazebo_ros_control/DefaultRobotHWSim<span class="tag">&lt;/<span class="name">robotSimType</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">robot</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_gazebo_controller_config/xm_arm_gazebo_joint_position.yaml</p>
</blockquote>
<p>使用YAML格式的文件来声明我们所需要使用的Controller，以及对应的参数。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="attr">xm_arm:</span></div><div class="line">  <span class="comment"># Position Controllers</span></div><div class="line"><span class="attr">  joint_lift_position_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">position_controllers/JointPositionController</span></div><div class="line"><span class="attr">    joint:</span> <span class="string">joint_lift</span></div><div class="line"><span class="attr">    pid:</span> <span class="string">&#123;p:</span> <span class="number">100.0</span><span class="string">,</span> <span class="attr">i:</span> <span class="number">0.01</span><span class="string">,</span> <span class="attr">d:</span> <span class="number">10.0</span><span class="string">&#125;</span></div><div class="line"><span class="attr">  joint_waist_position_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">position_controllers/JointPositionController</span></div><div class="line"><span class="attr">    joint:</span> <span class="string">joint_waist</span></div><div class="line"><span class="attr">    pid:</span> <span class="string">&#123;p:</span> <span class="number">100.0</span><span class="string">,</span> <span class="attr">i:</span> <span class="number">0.01</span><span class="string">,</span> <span class="attr">d:</span> <span class="number">10.0</span><span class="string">&#125;</span></div><div class="line"><span class="attr">  joint_big_arm_position_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">position_controllers/JointPositionController</span></div><div class="line"><span class="attr">    joint:</span> <span class="string">joint_big_arm</span></div><div class="line"><span class="attr">    pid:</span> <span class="string">&#123;p:</span> <span class="number">100.0</span><span class="string">,</span> <span class="attr">i:</span> <span class="number">0.01</span><span class="string">,</span> <span class="attr">d:</span> <span class="number">10.0</span><span class="string">&#125;</span></div><div class="line"><span class="attr">  joint_forearm_position_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">position_controllers/JointPositionController</span></div><div class="line"><span class="attr">    joint:</span> <span class="string">joint_forearm</span></div><div class="line"><span class="attr">    pid:</span> <span class="string">&#123;p:</span> <span class="number">100.0</span><span class="string">,</span> <span class="attr">i:</span> <span class="number">0.01</span><span class="string">,</span> <span class="attr">d:</span> <span class="number">10.0</span><span class="string">&#125;</span></div><div class="line"><span class="attr">  joint_wrist_pitching_position_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">position_controllers/JointPositionController</span></div><div class="line"><span class="attr">    joint:</span> <span class="string">joint_wrist_pitching</span></div><div class="line"><span class="attr">    pid:</span> <span class="string">&#123;p:</span> <span class="number">100.0</span><span class="string">,</span> <span class="attr">i:</span> <span class="number">0.01</span><span class="string">,</span> <span class="attr">d:</span> <span class="number">10.0</span><span class="string">&#125;</span></div><div class="line"><span class="attr">  joint_wrist_rotation_position_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">position_controllers/JointPositionController</span></div><div class="line"><span class="attr">    joint:</span> <span class="string">joint_wrist_rotation</span></div><div class="line"><span class="attr">    pid:</span> <span class="string">&#123;p:</span> <span class="number">100.0</span><span class="string">,</span> <span class="attr">i:</span> <span class="number">0.01</span><span class="string">,</span> <span class="attr">d:</span> <span class="number">10.0</span><span class="string">&#125;</span></div><div class="line"><span class="attr">  joint_finger_left_position_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">position_controllers/JointPositionController</span></div><div class="line"><span class="attr">    joint:</span> <span class="string">joint_finger_left</span></div><div class="line"><span class="attr">    pid:</span> <span class="string">&#123;p:</span> <span class="number">100.0</span><span class="string">,</span> <span class="attr">i:</span> <span class="number">0.01</span><span class="string">,</span> <span class="attr">d:</span> <span class="number">10.0</span><span class="string">&#125;</span></div><div class="line"><span class="attr">  joint_finger_right_position_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">position_controllers/JointPositionController</span></div><div class="line"><span class="attr">    joint:</span> <span class="string">joint_finger_right</span></div><div class="line"><span class="attr">    pid:</span> <span class="string">&#123;p:</span> <span class="number">100.0</span><span class="string">,</span> <span class="attr">i:</span> <span class="number">0.01</span><span class="string">,</span> <span class="attr">d:</span> <span class="number">10.0</span><span class="string">&#125;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_gazebo_controller_config/xm_arm_gazebo_joint_states.yaml</p>
</blockquote>
<p>使用Joint State Controller来发布每个关节的实时状态。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">xm_arm:</span></div><div class="line">  <span class="comment"># Publish all joint states</span></div><div class="line"><span class="attr">  joint_state_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">joint_state_controller/JointStateController</span></div><div class="line"><span class="attr">    publish_rate:</span> <span class="number">50</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_bringup/launch/xm_arm_bringup_gazebo_joint_control.launch</p>
</blockquote>
<p>最后编写Launch文件来启动Controller Manager中的Spawner，加载上述插件。并启动Gazebo和Rviz载入相关的机械臂模型。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Launch Gazebo  --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_gazebo)/launch/xm_arm_empty_world.launch"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Load joint controller configurations from YAML file to parameter server --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_gazebo_controller_config)/launch/xm_arm_gazebo_joint_position.launch"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_gazebo_controller_config)/launch/xm_arm_gazebo_joint_states.launch"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">"rviz"</span> <span class="attr">pkg</span>=<span class="string">"rviz"</span> <span class="attr">type</span>=<span class="string">"rviz"</span> <span class="attr">args</span>=<span class="string">"-d $(find xm_arm_bringup)/rviz/xm_arm_bringup_gazebo.rviz"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></div></pre></td></tr></table></figure>
<p>在终端中输入以下命令启动Motion Control测试。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$&gt; roslaunch xm_arm_bringup xm_arm_bringup_gazebo_joint_control.launch</div><div class="line">$&gt; rosrun xm_arm_teleop xm_arm_teleop_position_keyboard</div></pre></td></tr></table></figure>
<p>你可以使用键盘上的按键来控制机械臂每个关节的移动位置。</p>
<p><img src="https://github.com/myyerrol/xm_arm_workspace/raw/master/.images/xm_arm_control_gazebo.png" alt="xm_arm_control_gazebo"></p>
<ul>
<li>硬件部分：</li>
</ul>
<blockquote>
<p>xm_arm_robot_hardware/include/xm_arm_robot_hardware/xm_arm_robot_hardware.h</p>
</blockquote>
<p>创建子类继承RobotHW父类，并且声明了一些函数和变量。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArmRobotHardware</span> :</span> <span class="keyword">public</span> hardware_interface::RobotHW</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    ArmRobotHardware(ros::NodeHandle nh);</div><div class="line">    ~ArmRobotHardware();</div><div class="line">    ros::<span class="function">Time <span class="title">getTime</span><span class="params">()</span></span>;</div><div class="line">    ros::<span class="function">Duration <span class="title">getPeriod</span><span class="params">()</span></span>;</div><div class="line">    ros::<span class="function">CallbackQueue* <span class="title">getCallbackQueue</span><span class="params">()</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">const</span> ros::Time, <span class="keyword">const</span> ros::Duration period)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">const</span> ros::Time, <span class="keyword">const</span> ros::Duration period)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">start</span><span class="params">()</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>;</div><div class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getFreq</span><span class="params">()</span> <span class="keyword">const</span></span>;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">publishArmCommand</span><span class="params">(<span class="keyword">const</span> <span class="keyword">u_int8_t</span> func, <span class="keyword">const</span> <span class="keyword">u_int8_t</span> jnt_id,</span></span></div><div class="line">                           <span class="keyword">const</span> <span class="keyword">float</span> jnt_pos);</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">publishArmJState</span><span class="params">(<span class="keyword">const</span> <span class="keyword">u_int8_t</span> func, <span class="keyword">const</span> <span class="keyword">u_int8_t</span> jnt_id)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getArmStateCallback</span><span class="params">(</span></span></div><div class="line">        <span class="keyword">const</span> xm_arm_msgs::xm_ArmSerialDatagram::ConstPtr&amp; msg);</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getArmStatusCallback</span><span class="params">(</span></span></div><div class="line">        <span class="keyword">const</span> xm_arm_msgs::xm_ArmSerialDatagram::ConstPtr&amp; msg);</div><div class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkArmStatus</span><span class="params">()</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">transPositionJointToActuator</span><span class="params">()</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">transPositionActuatorToJoint</span><span class="params">()</span></span>;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    ros::NodeHandle    nh_;</div><div class="line">    ros::CallbackQueue callback_queue_;</div><div class="line">    ros::Publisher     arm_serial_pub_;</div><div class="line">    ros::Subscriber    arm_state_sub_;</div><div class="line">    ros::Subscriber    arm_status_sub_;</div><div class="line">    <span class="keyword">int</span>                arm_command_id_;</div><div class="line">    <span class="keyword">int</span>                arm_state_id_;</div><div class="line">    <span class="keyword">double</span>             freq_;</div><div class="line">    hardware_interface::JointStateInterface    jnt_state_interfece_;</div><div class="line">    hardware_interface::PositionJointInterface jnt_position_interface_;</div><div class="line">    hardware_interface::VelocityJointInterface jnt_velocity_interface_;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;      jnt_name_;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;      act_name_;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="keyword">double</span>&gt; jnt_pos_;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="keyword">double</span>&gt; jnt_vel_;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="keyword">double</span>&gt; jnt_eff_;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="keyword">double</span>&gt; act_pos_;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="keyword">double</span>&gt; jnt_cmd_;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="keyword">double</span>&gt; act_cmd_;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;ros::Time&gt;        jnt_stamp_;</div><div class="line">    <span class="keyword">enum</span> HARDWARE_STATUS &#123;UNKNOWN, READY, RUNNING, ERROR&#125;;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;HARDWARE_STATUS&gt;  jnt_status_;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_robot_hardware/src/xm_arm_robot_hardware.cpp</p>
</blockquote>
<p>初始化关节和电机数据，并使用Hardware Interface对相应的数据进行注册，最后初始化与串口通信有关的Topic。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">ArmRobotHardware::ArmRobotHardware(ros::NodeHandle nh)</div><div class="line">    : nh_(nh),</div><div class="line">      freq_(20)</div><div class="line">&#123;</div><div class="line">    nh_.setCallbackQueue(&amp;callback_queue_);</div><div class="line"></div><div class="line">    jnt_name_.push_back("joint_lift");</div><div class="line">    jnt_name_.push_back("joint_waist");</div><div class="line">    jnt_name_.push_back("joint_big_arm");</div><div class="line">    jnt_name_.push_back("joint_forearm");</div><div class="line">    jnt_name_.push_back("joint_wrist_pitching");</div><div class="line">    jnt_name_.push_back("joint_wrist_rotation");</div><div class="line"></div><div class="line">    act_name_.push_back("actuator_lift");</div><div class="line">    act_name_.push_back("actuator_waist");</div><div class="line">    act_name_.push_back("actuator_big_arm");</div><div class="line">    act_name_.push_back("actuator_forearm");</div><div class="line">    act_name_.push_back("actuator_wrist_left");</div><div class="line">    act_name_.push_back("actuator_wrist_right");</div><div class="line"></div><div class="line">    for (int i = 0; i &lt; jnt_name_.size(); i++)</div><div class="line">    &#123;</div><div class="line">        jnt_pos_[jnt_name_[i]] = 0.0;</div><div class="line">        jnt_vel_[jnt_name_[i]] = 0.0;</div><div class="line">        jnt_eff_[jnt_name_[i]] = 0.0;</div><div class="line">        jnt_cmd_[jnt_name_[i]] = 0.0;</div><div class="line">        act_cmd_[act_name_[i]] = 0.0;</div><div class="line">        act_pos_[act_name_[i]] = 0.0;</div><div class="line"></div><div class="line">        hardware_interface::JointStateHandle jnt_state_handle(jnt_name_[i],</div><div class="line">            &amp;jnt_pos_[jnt_name_[i]], &amp;jnt_vel_[jnt_name_[i]],</div><div class="line">            &amp;jnt_eff_[jnt_name_[i]]);</div><div class="line">        jnt_state_interfece_.registerHandle(jnt_state_handle);</div><div class="line">        hardware_interface::JointHandle jnt_position_handle(</div><div class="line">            jnt_state_interfece_.getHandle(jnt_name_[i]),</div><div class="line">            &amp;jnt_cmd_[jnt_name_[i]]);</div><div class="line">        jnt_position_interface_.registerHandle(jnt_position_handle);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    registerInterface(&amp;jnt_state_interfece_);</div><div class="line">    registerInterface(&amp;jnt_position_interface_);</div><div class="line"></div><div class="line">    for (int i = 0; i &lt; 6; i++)</div><div class="line">    &#123;</div><div class="line">        jnt_stamp_.push_back(ros::Time::now());</div><div class="line">        jnt_status_.push_back(UNKNOWN);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    arm_command_id_ = 3;</div><div class="line">    arm_state_id_   = 4;</div><div class="line"></div><div class="line">    arm_serial_pub_ = nh_.advertise&lt;xm_arm_msgs::xm_ArmSerialDatagram&gt;(</div><div class="line">        "xm_arm_serial/send_arm_command", 1000);</div><div class="line">    arm_state_sub_ = nh_.subscribe("xm_arm_serial/receive_arm_state", 1000,</div><div class="line">        &amp;ArmRobotHardware::getArmStateCallback, this);</div><div class="line">    arm_status_sub_ = nh_.subscribe("xm_arm_serial/receive_arm_status", 1000,</div><div class="line">        &amp;ArmRobotHardware::getArmStatusCallback, this);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>根据机械臂公式，实现关节和电机数据之间的互相转换。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> ArmRobotHardware::transPositionJointToActuator()</div><div class="line">&#123;</div><div class="line">    act_cmd_[<span class="string">"actuator_lift"</span>]        = -jnt_cmd_[<span class="string">"joint_lift"</span>] * <span class="number">100</span>;</div><div class="line">    act_cmd_[<span class="string">"actuator_waist"</span>]       =  jnt_cmd_[<span class="string">"joint_waist"</span>];</div><div class="line">    act_cmd_[<span class="string">"actuator_big_arm"</span>]     = -jnt_cmd_[<span class="string">"joint_big_arm"</span>] * <span class="number">1.6667</span>;</div><div class="line">    act_cmd_[<span class="string">"actuator_forearm"</span>]     = -jnt_cmd_[<span class="string">"joint_forearm"</span>] +</div><div class="line">        jnt_cmd_[<span class="string">"joint_big_arm"</span>] * <span class="number">1.6667</span>;</div><div class="line">    act_cmd_[<span class="string">"actuator_wrist_left"</span>]  = -(-jnt_cmd_[<span class="string">"joint_big_arm"</span>] * <span class="number">1.6667</span> +</div><div class="line">        jnt_cmd_[<span class="string">"joint_forearm"</span>] * <span class="number">1.6000</span> + jnt_cmd_[<span class="string">"joint_wrist_pitching"</span>]) *</div><div class="line">        <span class="number">0.6250</span> + jnt_cmd_[<span class="string">"joint_wrist_rotation"</span>] * <span class="number">0.7917</span>;</div><div class="line">    act_cmd_[<span class="string">"actuator_wrist_right"</span>] = -(-jnt_cmd_[<span class="string">"joint_big_arm"</span>] * <span class="number">1.6667</span> +</div><div class="line">        jnt_cmd_[<span class="string">"joint_forearm"</span>] * <span class="number">1.6000</span> + jnt_cmd_[<span class="string">"joint_wrist_pitching"</span>]) *</div><div class="line">        <span class="number">0.6250</span> - jnt_cmd_[<span class="string">"joint_wrist_rotation"</span>] * <span class="number">0.7917</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Because autuator's direction is not unified, the signs of positive and</span></div><div class="line"><span class="comment">// negative may have problem in the following formula.</span></div><div class="line"><span class="keyword">void</span> ArmRobotHardware::transPositionActuatorToJoint()</div><div class="line">&#123;</div><div class="line">    jnt_pos_[<span class="string">"joint_lift"</span>]    = -act_pos_[<span class="string">"actuator_lift"</span>] * <span class="number">0.010</span>;</div><div class="line">    jnt_pos_[<span class="string">"joint_waist"</span>]   =  act_pos_[<span class="string">"actuator_waist"</span>];</div><div class="line">    jnt_pos_[<span class="string">"joint_big_arm"</span>] = -act_pos_[<span class="string">"actuator_big_arm"</span>] * <span class="number">0.600</span>;</div><div class="line">    jnt_pos_[<span class="string">"joint_forearm"</span>] = -(act_pos_[<span class="string">"actuator_forearm"</span>] +</div><div class="line">        act_pos_[<span class="string">"actuator_big_arm"</span>]);</div><div class="line">    jnt_pos_[<span class="string">"joint_wrist_pitching"</span>] = -(-act_pos_[<span class="string">"actuator_big_arm"</span>] * <span class="number">0.6400</span></div><div class="line">        - act_pos_[<span class="string">"actuator_forearm"</span>] * <span class="number">1.6000</span> +</div><div class="line">        (act_pos_[<span class="string">"actuator_wrist_left"</span>] + act_pos_[<span class="string">"actuator_wrist_right"</span>]) *</div><div class="line">        <span class="number">0.8000</span>);</div><div class="line">    jnt_pos_[<span class="string">"joint_wrist_rotation"</span>] = (act_pos_[<span class="string">"actuator_wrist_left"</span>] -</div><div class="line">        act_pos_[<span class="string">"actuator_wrist_right"</span>]) * <span class="number">0.6316</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>实现定制的read和write函数。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> ArmRobotHardware::read(<span class="keyword">const</span> ros::Time, <span class="keyword">const</span> ros::Duration period)</div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</div><div class="line">        publishArmJState(<span class="number">0x01</span>, i);</div><div class="line"></div><div class="line">    transPositionActuatorToJoint();</div><div class="line"></div><div class="line">    callback_queue_.callAvailable(ros::WallDuration(<span class="number">1</span> / freq_ / <span class="number">3</span>));</div><div class="line">    ros::Time current_time = ros::Time::now();</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> ((current_time - jnt_stamp_[i]).toSec() &gt; <span class="number">0.5</span>)</div><div class="line">        &#123;</div><div class="line">            ROS_WARN_STREAM(<span class="string">"Reading timeout!"</span>);</div><div class="line">            <span class="keyword">return</span> ;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> ArmRobotHardware::write(<span class="keyword">const</span> ros::Time, <span class="keyword">const</span> ros::Duration period)</div><div class="line">&#123;</div><div class="line">    transPositionJointToActuator();</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</div><div class="line">        publishArmCommand(<span class="number">0x01</span>, i, act_cmd_[act_name_[i]]);</div><div class="line"></div><div class="line">    ROS_INFO_STREAM(<span class="string">"joint_command"</span>);</div><div class="line">    ROS_INFO_STREAM(</div><div class="line">        <span class="string">"lift: "</span>    &lt;&lt; jnt_cmd_[<span class="string">"joint_lift"</span>]    &lt;&lt; <span class="string">" "</span> &lt;&lt;</div><div class="line">        <span class="string">"waist: "</span>   &lt;&lt; jnt_cmd_[<span class="string">"joint_waist"</span>]   &lt;&lt; <span class="string">" "</span> &lt;&lt;</div><div class="line">        <span class="string">"big_arm: "</span> &lt;&lt; jnt_cmd_[<span class="string">"joint_big_arm"</span>] &lt;&lt; <span class="string">" "</span> &lt;&lt;</div><div class="line">        <span class="string">"forearm: "</span> &lt;&lt; jnt_cmd_[<span class="string">"joint_forearm"</span>] &lt;&lt; <span class="string">" "</span> &lt;&lt;</div><div class="line">        <span class="string">"wrist_pitching: "</span> &lt;&lt; jnt_cmd_[<span class="string">"joint_wrist_pitching"</span>] &lt;&lt; <span class="string">" "</span> &lt;&lt;</div><div class="line">        <span class="string">"wrist_rotation: "</span> &lt;&lt; jnt_cmd_[<span class="string">"joint_wrist_rotation"</span>] &lt;&lt; <span class="string">" "</span>);</div><div class="line">    ROS_INFO_STREAM(<span class="string">"------"</span>);</div><div class="line"></div><div class="line">    callback_queue_.callAvailable(ros::WallDuration(<span class="number">1</span> / freq_ / <span class="number">3</span>));</div><div class="line">    ros::Time current_time = ros::Time::now();</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> ((current_time - jnt_stamp_[i]).toSec() &gt; <span class="number">0.5</span>)</div><div class="line">        &#123;</div><div class="line">            ROS_WARN_STREAM(<span class="string">"Writing timeout!"</span>);</div><div class="line">            <span class="keyword">return</span> ;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_hardware_controller_config/config/xm_arm_hardware_joint_trajectory.yaml</p>
</blockquote>
<p>Joint Trajectory Controller可以提供经过时间差值的连续关节轨迹，是MoveIT!中默认的数据接口。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="attr">xm_arm:</span></div><div class="line"><span class="attr">  arm_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">"position_controllers/JointTrajectoryController"</span></div><div class="line"><span class="attr">    joints:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_lift</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_waist</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_big_arm</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_forearm</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_wrist_pitching</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_wrist_rotation</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_hardware_controller_config/config/xm_arm_hardware_joint_states.yaml</p>
</blockquote>
<p>这个与上面所仿真使用的Controller是一样的。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">xm_arm:</span></div><div class="line"><span class="attr">  joint_state_controller:</span></div><div class="line"><span class="attr">    type:</span> <span class="string">joint_state_controller/JointStateController</span></div><div class="line"><span class="attr">    publish_rate:</span> <span class="number">50</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_hardware_controller_config/config/xm_arm_hardware_joint_names.yaml</p>
</blockquote>
<p>加载关节名字到ROS的参数服务器中。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="attr">xm_arm:</span></div><div class="line"><span class="attr">  joint_names:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_lift</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_waist</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_big_arm</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_forearm</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_wrist_pitching</span></div><div class="line"><span class="bullet">    -</span> <span class="string">joint_wrist_rotation</span></div></pre></td></tr></table></figure>
<p>以上就是硬件接口层的全部内容了。作为整个机械臂软件架构最底层的部分，它的重要性不言而喻。根据我之前开发机械臂的经验，只有编写出稳定且鲁棒的的硬件接口层，才能为之上的运动规划提供强有力的保证。否则，等到机械臂出现暴走失控的情况的时候就麻烦了（我之前就曾入过这样的坑！）。</p>
<h4 id="运动规划层"><a href="#运动规划层" class="headerlink" title="运动规划层"></a>运动规划层</h4><p>运动规划层在机械臂的自主抓取中扮演了非常重要的角色。而对于运动规划本身来说，里面涉及了非常多的专业知识，比如运动学正逆解算、碰撞检测算法、3D环境感知、动作规划算法等，以上任何一个方面都需要我们长时间的积累才能理解清楚，而对于那些想立马上手机械臂的初学者来说，这简直就是一个灾难。</p>
<p>而幸运的是，ROS提供了强大且易用的<a href="http://moveit.ros.org" target="_blank" rel="external">MoveIt!</a>包，它可以让你在较短的时间内实现仿真乃至实体机械臂的运动学规划演示。</p>
<p>首先，简要地介绍一下什么是MoveIt!。以下是MoveIt官网给出的定义：</p>
<blockquote>
<p>MoveIt! is state of the art software for mobile manipulation, incorporating the latest advances in motion planning, manipulation, 3D perception, kinematics, control and navigation. It provides an easy-to-use platform for developing advanced robotics applications, evaluating new robot designs and building integrated robotics products for industrial, commercial, R&amp;D and other domains.</p>
</blockquote>
<p>概括来说，MoveIt!是ROS中与移动操作相关的组件包的集合。它包含了运动规划、操作控制、3D感知，运动学，碰撞检测等。当然，最重要的是MoveIt!提供了非常友好的配置和调试界面。</p>
<p>下图是MoveIt的总体框架：</p>
<p><img src="http://moveit.ros.org/wordpress/wp-content/uploads/2013/12/Overview.0012.jpg" alt="MoveIt! Architecture"></p>
<p>这张图我在学习MoveIt!的时候看过很多遍，理解这个架构图对于学习MoveIt!非常重要。从图中可以看到，<strong>move_group</strong>是MoveIt!最核心的部分。它将其他独立的组件集成到一起，为使用者提供了一系列可以使用的命令和服务。</p>
<ul>
<li><p>用户接口：<br>用户可以使用C++、Python或者GUI来访问<strong>move_group</strong>。一般对于初学者来说，GUI和Python的使用会更多一些。</p>
</li>
<li><p>配置：<br><strong>move_group</strong>本质上还是一个ROS的节点，它需要使用ROS的参数服务器来获取以下三种信息。</p>
<ul>
<li><p>URDF：<br><strong>move_group</strong>需要机械臂的URDF文件来进行运动规划。</p>
</li>
<li><p>SRDF：<br><strong>move_group</strong>在启动时会寻找机械臂的SRDF文件，它可以通过使用MoveIt! Setup Assistant自动生成。</p>
</li>
<li><p>MoveIt!配置：<br><strong>move_group</strong>在启动时会加载机械臂的关节限位、动力学、运动规划、感知以及其他相关信息。所有以上的配置信息都可以通过使用MoveIt! Setup Assistant自动生成。</p>
</li>
</ul>
</li>
<li><p>机器人接口：<br><strong>move_group</strong>使用ROS中的Topic和Action两种机制来与机械臂进行数据通信。它可以获取当前机械臂的位置信息，点云数据以及其他传感器数据，并且发送命令给机械臂的Controller。</p>
<ul>
<li><p>关节状态信息：<br><strong>move_group</strong>会监听机械臂的/joint_states主题来获取当前的状态信息。注意：<strong>move_group</strong>只管监听，你需要自己给机械臂配置好<a href="http://wiki.ros.org/joint_state_controller" target="_blank" rel="external">Joint State Controller</a>。</p>
</li>
<li><p>坐标转换信息：<br><strong>move_group</strong>可以订阅机械臂的TF主题来确定机械臂内部各关节之间的位置变换关系。跟上面一样，你需要自己运行<a href="http://wiki.ros.org/robot_state_publisher" target="_blank" rel="external">Robot State Publier</a>节点来发布坐标转换。</p>
</li>
<li><p>控制器接口：<br><strong>move_group</strong>使用<a href="http://docs.ros.org/kinetic/api/control_msgs/html/action/FollowJointTrajectory.html" target="_blank" rel="external">Follow Joint Trajectory</a>类型的Action接口来与Controller进行数据通信。<strong>move_group</strong>自己是不带Action接口的，它是使用了一个特殊的插件来发布上述Follow Joint Trajectory类型的Action，而对于机械臂来说，你依然需要自己配置上述类型的Controller来订阅机械臂的数据。</p>
</li>
<li><p>规划场景：<br>Planning Scene指的是机械臂本身以及其周围环境的表示。</p>
</li>
<li><p>扩展能力：<br><strong>move_group</strong>的所有组件都是以独立插件的形式实现的，而且这些插件可以通过使用ROS的参数文件或插件库来进行配置，这使得<strong>move_group</strong>拥有了强大的定制以及可扩展能力。</p>
</li>
</ul>
</li>
</ul>
<p>接下来，我们介绍一下<strong>Motion Planning</strong>。</p>
<p>这里我引用古月居前辈对运动规划的解释：</p>
<blockquote>
<p>假设我们已知机器人的初始姿态和目标姿态，以及机器人和环境的模型参数，那么我们就可以通过一定的算法，在躲避环境障碍物和放置自身碰撞的同时，找到一条到达目标姿态的较优路径，这种算法就称为机器人的运动规划。机器人和环境的模型静态参数由URDF文件提供，在默写场景下还需要加入3D摄像头、激光雷达来动态检测环境变化，避免与动态障碍物发生碰撞。</p>
</blockquote>
<p>在MoveIt!中，运动规划算法是由运动规划器算出来的。当然，运动规划算法有很多，每一个运动规划器都是MoveIt的一个插件，可以根据需求选用不同的规划算法。MoveIt!默认使用的是<a href="http://ompl.kavrakilab.org" target="_blank" rel="external">OMPL</a>。OMPL(Open Motion Planning Library)是开源运动规划库的简写，它提供基于随机化的运动规划器。</p>
<p><img src="http://moveit.ros.org/wordpress/wp-content/uploads/2013/12/Overview.002.jpg" alt="Motion Planning Pipeline"></p>
<ul>
<li><p>运动规划请求：<br>在让运动规划器进行运动规划之前，我们要先发送一个运动规划的请求。这个请求可以是新的机械臂或末端执行器的位置。为了让运动规划器规划出来的轨迹符合要求，我们需要指定一些约束条件：</p>
<ul>
<li><p>位置约束：<br>约束机械臂Link的位置。</p>
</li>
<li><p>方向约束：<br>约束机械臂Link的方向。</p>
</li>
<li><p>可见性约束：<br>约束Link上的某点在某些区域的可见性。</p>
</li>
<li><p>关节约束：<br>约束Joint的运动范围。</p>
</li>
<li><p>自定义约束：<br>使用自定义的回调函数来指定约束条件。</p>
</li>
</ul>
</li>
<li><p>运动规划结果：<br><strong>move_group</strong>节点最终将会根据上面的运动规划请求，生成一条运动轨迹。这条轨迹可以使机械臂移动到预想的目标位置。请注意：<strong>move_group</strong>输出的是一条轨迹，而不是路径。对于机械臂来说，路径是使末端执行器移动到目标位置的过程中，中间所经历的一系列独立的位置点。而轨迹则是在路径的基础上，通过加入速度、加速度约束以及时间参数来使机械臂运动的更加平滑。</p>
</li>
<li><p>规划请求适配器：<br>在运动规划器的输入输出端分别有两个规划请求适配器。它们的作用分别是对规划请求和规划结果进行预处理和后期处理。MoveIt!提供了几种默认的适配器来完成一些特定的功能。</p>
<ul>
<li><p>FixStartStateBounds:<br>当机械臂的一个或多个关节的初始状态<strong>稍微</strong>超出了URDF文件中所定义的Joint Limits后，为了能让运动规划器可以运行，FixStartStateBounds适配器会通过将关节状态移动到Joint Limits处来解决这个问题。不过，如果机械臂关节的偏差很大的话，这种靠软件方式修正的方式就不适用了。</p>
</li>
<li><p>FixWorkspaceBounds:<br>这个适配器会默认地生成一个10x10x10立方米的机械臂规划空间。</p>
</li>
<li><p>FixStartStateCollision:<br>如果已有的关节配置文件会导致碰撞，这个适配器可以采样新的配置文件，并根据摇摆因子来修改已有的配置文件，从而保证新的机械臂不会发生碰撞。</p>
</li>
<li><p>FixStartStatePathConstraints:<br>如果机械臂的初始姿态不满足路径约束，这个适配器可以找到附近满足约束的姿态作为机械臂的初始姿态。</p>
</li>
<li><p>AddTimeParameterization:<br>这个适配器非常重要。它把从运动规划器中输出的空间路径按等距离进行划分，并在其中添加加速度、加速度约束，以及时间戳等必要信息。</p>
</li>
</ul>
</li>
</ul>
<p><strong>Planning Scene</strong></p>
<p><img src="http://moveit.ros.org/wordpress/wp-content/uploads/2013/12/Overview.0031.jpg" alt="Planning Scene"></p>
<p>Planning Scene用来表示机械臂周围的外部世界并且保存机械臂自己本身的状态。它通过监听对应的Topic来获取关节状态信息、传感器信息。并可以根据传感器信息和用户的输入，生成机器人周围3D世界空间的表示。</p>
<p><strong>3D Perception</strong></p>
<p><img src="http://moveit.ros.org/wordpress/wp-content/uploads/2013/12/Overview.004.jpg" alt="3D Perception"></p>
<p>简单来说，3D Perception使用插件来获取点云和深度图像数据，并据此生成<a href="http://octomap.github.io" target="_blank" rel="external">OctoMap</a>，为之后机械臂的碰撞检测提供基础。</p>
<p><strong>Kinematics</strong></p>
<p>运动学算法是机械臂各种算法中的核心，尤其是反向运动学算法IK(Inverse Kinematics)。MoveIt!使用插件的形式可以让用户灵活的选择需要使用的反向运动学算法，也可以选择自己的算法。</p>
<p><strong>Collision Checking</strong></p>
<p>MoveIt!使用CollisionWorld对象进行碰撞检测，采用<a href="http://gamma.cs.unc.edu/FCL/fcl_docs/webpage/generated/index.html" target="_blank" rel="external">FCL</a>(Flexible Collision Library)功能包。碰撞检测是运动规划中最耗时的运算，往往会占用90%左右的时间，为了减少计算量，可以通过设置ACM(Allowed Collision Matrix)来进行优化。</p>
<hr>
<p>好的，讲了这么多抽象的概念，就让我们像上一节讲ROS Control一样，用具体的例子来实践一下。</p>
<p>首先，你需要机械臂的URDF文件，而且保证里面所包含的Link(连杆)、Joint(关节)、运动学参数、动力学参数、可视化和碰撞模型没有问题。这里要注意一下，通过<a href="http://wiki.ros.org/sw_urdf_exporter" target="_blank" rel="external">SolidWorks插件</a>导出的URDF文件，它默认使用的碰撞检测模型和可视化模型是一样的。为了提高运动规划的执行速度，你可以使用<a href="http://www.meshlab.net" target="_blank" rel="external">MeshLab</a>来简化模型（.stl或.dae零件）的点和面。</p>
<blockquote>
<p>xm_arm_description/urdf/xmbot_with_arm.urdf.xacro</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">robot</span> <span class="attr">name</span>=<span class="string">"xmbot"</span> <span class="attr">xmlns:xacro</span>=<span class="string">"http://www.ros.org/wiki/xacro"</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- The following xacro:include files set up definitions of parts of the robot body --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">xacro:include</span> <span class="attr">filename</span>=<span class="string">"$(find xm_arm_description)/urdf/materials.urdf.xacro"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">xacro:include</span> <span class="attr">filename</span>=<span class="string">"$(find xm_arm_description)/urdf/xm_base.urdf.xacro"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">xacro:include</span> <span class="attr">filename</span>=<span class="string">"$(find xm_arm_description)/urdf/xm_wheel.urdf.xacro"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">xacro:include</span> <span class="attr">filename</span>=<span class="string">"$(find xm_arm_description)/urdf/xm_arm.urdf.xacro"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">xacro:include</span> <span class="attr">filename</span>=<span class="string">"$(find xm_arm_description)/urdf/xm_gripper.urdf.xacro"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">xacro:include</span> <span class="attr">filename</span>=<span class="string">"$(find xm_arm_description)/urdf/xm_kinect.urdf.xacro"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">xacro:include</span> <span class="attr">filename</span>=<span class="string">"$(find xm_arm_description)/urdf/xm_laser.urdf.xacro"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Attach the base --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">base</span> <span class="attr">name</span>=<span class="string">"base"</span> <span class="attr">color</span>=<span class="string">"DarkGrey"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Add the drive wheels --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">wheel</span> <span class="attr">parent</span>=<span class="string">"base"</span> <span class="attr">suffix</span>=<span class="string">"1"</span> <span class="attr">color</span>=<span class="string">"DarkGrey"</span> <span class="attr">type</span>=<span class="string">"fixed"</span></span></div><div class="line">         <span class="attr">origin_xyz</span>=<span class="string">"0.19419 0.00022708 -0.042"</span> <span class="attr">origin_rpy</span>=<span class="string">"-1.5708 0 -1.5708"</span></div><div class="line">         <span class="attr">inert_origin_xyz</span>=<span class="string">"8.0491E-16 -1.3878E-17 -0.0042221"</span></div><div class="line">         <span class="attr">inert_ixx</span>=<span class="string">"0.00030696"</span> <span class="attr">inert_ixy</span>=<span class="string">"-3.4634E-22"</span> <span class="attr">inert_ixz</span>=<span class="string">"-7.3136E-19"</span></div><div class="line">         <span class="attr">inert_iyy</span>=<span class="string">"0.00030696"</span> <span class="attr">inert_iyz</span>=<span class="string">"8.9342E-21"</span> <span class="attr">inert_izz</span>=<span class="string">"0.00029643"</span> /&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">wheel</span> <span class="attr">parent</span>=<span class="string">"base"</span> <span class="attr">suffix</span>=<span class="string">"2"</span> <span class="attr">color</span>=<span class="string">"DarkGrey"</span> <span class="attr">type</span>=<span class="string">"fixed"</span></span></div><div class="line">         <span class="attr">origin_xyz</span>=<span class="string">"-0.096968 -0.16833 -0.042"</span> <span class="attr">origin_rpy</span>=<span class="string">"-1.5708 0 2.618"</span></div><div class="line">         <span class="attr">inert_origin_xyz</span>=<span class="string">"-1.3878E-17 1.3878E-17 -0.0042221"</span></div><div class="line">         <span class="attr">inert_ixx</span>=<span class="string">"0.00030696"</span> <span class="attr">inert_ixy</span>=<span class="string">"1.0391E-20"</span> <span class="attr">inert_ixz</span>=<span class="string">"1.3553E-20"</span></div><div class="line">         <span class="attr">inert_iyy</span>=<span class="string">"0.00030696"</span> <span class="attr">inert_iyz</span>=<span class="string">"4.616E-21"</span> <span class="attr">inert_izz</span>=<span class="string">"0.00029643"</span> /&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">wheel</span> <span class="attr">parent</span>=<span class="string">"base"</span> <span class="attr">suffix</span>=<span class="string">"3"</span> <span class="attr">color</span>=<span class="string">"DarkGrey"</span> <span class="attr">type</span>=<span class="string">"fixed"</span></span></div><div class="line">         <span class="attr">origin_xyz</span>=<span class="string">"-0.097362 0.1681 -0.042"</span>   <span class="attr">origin_rpy</span>=<span class="string">"-1.5708 0 0.5236"</span></div><div class="line">         <span class="attr">inert_origin_xyz</span>=<span class="string">"1.4572E-15 0 -0.0042221"</span></div><div class="line">         <span class="attr">inert_ixx</span>=<span class="string">"0.00030696"</span> <span class="attr">inert_ixy</span>=<span class="string">"-3.3256E-21"</span> <span class="attr">inert_ixz</span>=<span class="string">"2.7105E-20"</span></div><div class="line">         <span class="attr">inert_iyy</span>=<span class="string">"0.00030696"</span> <span class="attr">inert_iyz</span>=<span class="string">"-1.1933E-20"</span> <span class="attr">inert_izz</span>=<span class="string">"0.00029643"</span> /&gt;</div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Attach the arm --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">lift</span>  <span class="attr">name</span>=<span class="string">"lift"</span>  <span class="attr">parent</span>=<span class="string">"base"</span> <span class="attr">color</span>=<span class="string">"OffWhite"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">waist</span> <span class="attr">name</span>=<span class="string">"waist"</span> <span class="attr">parent</span>=<span class="string">"lift"</span> <span class="attr">color</span>=<span class="string">"Orange"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">big_arm</span> <span class="attr">name</span>=<span class="string">"big_arm"</span> <span class="attr">parent</span>=<span class="string">"waist"</span> <span class="attr">color</span>=<span class="string">"OffWhite"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">forearm</span> <span class="attr">name</span>=<span class="string">"forearm"</span> <span class="attr">parent</span>=<span class="string">"big_arm"</span> <span class="attr">color</span>=<span class="string">"Orange"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">wrist_pitching</span> <span class="attr">name</span>=<span class="string">"wrist_pitching"</span> <span class="attr">parent</span>=<span class="string">"forearm"</span> <span class="attr">color</span>=<span class="string">"OffWhite"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">wrist_rotation</span> <span class="attr">name</span>=<span class="string">"wrist_rotation"</span> <span class="attr">parent</span>=<span class="string">"wrist_pitching"</span> <span class="attr">color</span>=<span class="string">"OffWhite"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Attach the gripper --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">finger_left</span>  <span class="attr">name</span>=<span class="string">"finger_left"</span>  <span class="attr">parent</span>=<span class="string">"wrist_rotation"</span> <span class="attr">color</span>=<span class="string">"Orange"</span> <span class="attr">type</span>=<span class="string">"revolute"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">finger_right</span> <span class="attr">name</span>=<span class="string">"finger_right"</span> <span class="attr">parent</span>=<span class="string">"wrist_rotation"</span> <span class="attr">color</span>=<span class="string">"Orange"</span> <span class="attr">type</span>=<span class="string">"revolute"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">gripper_frame</span> <span class="attr">name</span>=<span class="string">"gripper_frame"</span> <span class="attr">parent</span>=<span class="string">"wrist_rotation"</span> <span class="attr">color</span>=<span class="string">"OffWhite"</span> <span class="attr">type</span>=<span class="string">"fixed"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Attach the kinect --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head_kinect</span> <span class="attr">name</span>=<span class="string">"kinect"</span> <span class="attr">parent</span>=<span class="string">"base"</span> <span class="attr">color</span>=<span class="string">"DarkGrey"</span> <span class="attr">type</span>=<span class="string">"fixed"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Attach the laser --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">laser</span> <span class="attr">name</span>=<span class="string">"laser"</span> <span class="attr">parent</span>=<span class="string">"base"</span> <span class="attr">color</span>=<span class="string">"DarkGrey"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">robot</span>&gt;</span></div></pre></td></tr></table></figure>
<p>之后，运行下面命令来启动MoveIt! Setup Assistant。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; rosrun moveit_setup_assistant moveit_setup_assistant</div></pre></td></tr></table></figure>
<p><img src="http://docs.ros.org/kinetic/api/moveit_tutorials/html/_images/setup_assistant_start.png" alt="MoveIt! Setup Assistant"></p>
<p>之后你可以根据<a href="http://docs.ros.org/kinetic/api/moveit_tutorials/html/doc/setup_assistant/setup_assistant_tutorial.html" target="_blank" rel="external">MoveIt! Setaup Assistant官网教程</a>完成机械臂的配置。虽然这里我没有详细讲解配置的每一步（其实是我忘了截图），但这一步是非常重要的。我之前就配置过很多次，但总有问题。所以说配置机械臂MoveIt!参数是需要一定经验的。这里，我主要讲两个我在配置过程中遇到的问题，希望对你有所帮助。</p>
<ul>
<li><p>交互式Marker没有在末端执行器上生成：<br>这个问题曾经困扰了我很久，后来我在Google上搜索了一段时间，终于找到问题的原因和解决办法。出现这个问题的原因是我在配置末端执行器的时候，<strong>parent_link</strong>没有选择<strong>arm</strong>组中的link，而是选了<strong>gripper</strong>组中的。因此，解决办法就是选择<strong>arm</strong>组中的最顶端的link填入到<strong>parent_link</strong>中就没问题了。</p>
</li>
<li><p>MoveIt!根据点云数据生成的OctoMap在Rviz中的位置、方向与实际不符：<br>这个问题的原因，你可以通过可视化Rviz中的TF插件来看到。每个Link都有自己的XYZ方向，如果你机器人的Camera Link的XYZ方向恰好与Rviz所使用的XYZ方向不符，就会出现上述问题。我的解决办法是在URDF中再添加一个或两个虚拟的Link来修正方向上的偏差。</p>
</li>
</ul>
<p>打开用MoveIt! Setup Assistant生成的包，我们可以发现里面有config和launch两个文件夹。这里简要介绍下每个文件的功能。</p>
<blockquote>
<p>xm_arm_moveit_config/config/controllers.yaml</p>
</blockquote>
<p>这个文件指定了MoveIt!向Controller发布数据的接口。注意：这个配置文件不是用MoveIt! Setup Assistant自动生成的，你需要自己添加。而且<strong>name</strong>要与<a href="https://github.com/myyerrol/xm_arm_workspace/blob/master/xm_arm_hardware_controller_config/config/xm_arm_hardware_joint_trajectory.yaml" target="_blank" rel="external">Controller配置文件</a>的<strong>namespace</strong>保持一致。否则，MoveIt!输出的轨迹是没法传送给物理机械臂的。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="attr">controller_list:</span></div><div class="line"><span class="attr">  - name:</span> <span class="string">xm_arm/arm_controller</span></div><div class="line"><span class="attr">    action_ns:</span> <span class="string">follow_joint_trajectory</span></div><div class="line"><span class="attr">    type:</span> <span class="string">FollowJointTrajectory</span></div><div class="line"><span class="attr">    default:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    joints:</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_lift</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_waist</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_big_arm</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_forearm</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_wrist_pitching</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_wrist_rotation</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_moveit_config/config/fake_controllers.yaml</p>
</blockquote>
<p>这是虚拟控制器配置文件，方便我们在没有实体机械臂，甚至没有任何模拟器开启的情况下也能运行MoveIt!。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="attr">controller_list:</span></div><div class="line"><span class="attr">  - name:</span> <span class="string">fake_xm_arm_controller</span></div><div class="line"><span class="attr">    joints:</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_lift</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_waist</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_big_arm</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_forearm</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_wrist_pitching</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_wrist_rotation</span></div><div class="line"><span class="attr">  - name:</span> <span class="string">fake_xm_gripper_controller</span></div><div class="line"><span class="attr">    joints:</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_finger_left</span></div><div class="line"><span class="bullet">      -</span> <span class="string">joint_finger_right</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_moveit_config/config/joint_limits.yaml</p>
</blockquote>
<p>这里记录了机械臂各关节的位置、速度、加速度的极限。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># joint_limits.yaml allows the dynamics properties specified in the URDF to be overwritten or augmented as needed</span></div><div class="line"><span class="comment"># Specific joint properties can be changed with the keys [max_position, min_position, max_velocity, max_acceleration]</span></div><div class="line"><span class="comment"># Joint limits can be turned off with [has_velocity_limits, has_acceleration_limits]</span></div><div class="line"><span class="attr">joint_limits:</span></div><div class="line"><span class="attr">  joint_big_arm:</span></div><div class="line"><span class="attr">    has_velocity_limits:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    max_velocity:</span> <span class="number">1</span></div><div class="line"><span class="attr">    has_acceleration_limits:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    max_acceleration:</span> <span class="number">0</span></div><div class="line"><span class="attr">  joint_finger_left:</span></div><div class="line"><span class="attr">    has_velocity_limits:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    max_velocity:</span> <span class="number">1</span></div><div class="line"><span class="attr">    has_acceleration_limits:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    max_acceleration:</span> <span class="number">0</span></div><div class="line"><span class="attr">  joint_finger_right:</span></div><div class="line"><span class="attr">    has_velocity_limits:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    max_velocity:</span> <span class="number">1</span></div><div class="line"><span class="attr">    has_acceleration_limits:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    max_acceleration:</span> <span class="number">0</span></div><div class="line"><span class="attr">  joint_forearm:</span></div><div class="line"><span class="attr">    has_velocity_limits:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    max_velocity:</span> <span class="number">1</span></div><div class="line"><span class="attr">    has_acceleration_limits:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    max_acceleration:</span> <span class="number">0</span></div><div class="line"><span class="attr">  joint_lift:</span></div><div class="line"><span class="attr">    has_velocity_limits:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    max_velocity:</span> <span class="number">1</span></div><div class="line"><span class="attr">    has_acceleration_limits:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    max_acceleration:</span> <span class="number">0</span></div><div class="line"><span class="attr">  joint_waist:</span></div><div class="line"><span class="attr">    has_velocity_limits:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    max_velocity:</span> <span class="number">1</span></div><div class="line"><span class="attr">    has_acceleration_limits:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    max_acceleration:</span> <span class="number">0</span></div><div class="line"><span class="attr">  joint_wrist_pitching:</span></div><div class="line"><span class="attr">    has_velocity_limits:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    max_velocity:</span> <span class="number">1</span></div><div class="line"><span class="attr">    has_acceleration_limits:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    max_acceleration:</span> <span class="number">0</span></div><div class="line"><span class="attr">  joint_wrist_rotation:</span></div><div class="line"><span class="attr">    has_velocity_limits:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    max_velocity:</span> <span class="number">1</span></div><div class="line"><span class="attr">    has_acceleration_limits:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    max_acceleration:</span> <span class="number">0</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_moveit_config/config/kinematics.yaml</p>
</blockquote>
<p>记录运动规划的配置参数。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">xm_arm:</span></div><div class="line"><span class="attr">  kinematics_solver:</span> <span class="string">kdl_kinematics_plugin/KDLKinematicsPlugin</span></div><div class="line"><span class="attr">  kinematics_solver_search_resolution:</span> <span class="number">0.005</span></div><div class="line"><span class="attr">  kinematics_solver_timeout:</span> <span class="number">0.05</span></div><div class="line"><span class="attr">  kinematics_solver_attempts:</span> <span class="number">3</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_moveit_config/config/ompl_planning.yaml</p>
</blockquote>
<p>记录了OMPL算法的各种配置参数。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="attr">planner_configs:</span></div><div class="line"><span class="attr">  SBLkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::SBL</span></div><div class="line"><span class="attr">    range:</span> <span class="number">0.0</span>  <span class="comment"># Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span></div><div class="line"><span class="attr">  ESTkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::EST</span></div><div class="line"><span class="attr">    range:</span> <span class="number">0.0</span>  <span class="comment"># Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0 setup()</span></div><div class="line"><span class="attr">    goal_bias:</span> <span class="number">0.05</span>  <span class="comment"># When close to goal select goal, with this probability. default: 0.05</span></div><div class="line"><span class="attr">  LBKPIECEkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::LBKPIECE</span></div><div class="line"><span class="attr">    range:</span> <span class="number">0.0</span>  <span class="comment"># Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span></div><div class="line"><span class="attr">    border_fraction:</span> <span class="number">0.9</span>  <span class="comment"># Fraction of time focused on boarder default: 0.9</span></div><div class="line"><span class="attr">    min_valid_path_fraction:</span> <span class="number">0.5</span>  <span class="comment"># Accept partially valid moves above fraction. default: 0.5</span></div><div class="line"><span class="attr">  BKPIECEkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::BKPIECE</span></div><div class="line"><span class="attr">    range:</span> <span class="number">0.0</span>  <span class="comment"># Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span></div><div class="line"><span class="attr">    border_fraction:</span> <span class="number">0.9</span>  <span class="comment"># Fraction of time focused on boarder default: 0.9</span></div><div class="line"><span class="attr">    failed_expansion_score_factor:</span> <span class="number">0.5</span>  <span class="comment"># When extending motion fails, scale score by factor. default: 0.5</span></div><div class="line"><span class="attr">    min_valid_path_fraction:</span> <span class="number">0.5</span>  <span class="comment"># Accept partially valid moves above fraction. default: 0.5</span></div><div class="line"><span class="attr">  KPIECEkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::KPIECE</span></div><div class="line"><span class="attr">    range:</span> <span class="number">0.0</span>  <span class="comment"># Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span></div><div class="line"><span class="attr">    goal_bias:</span> <span class="number">0.05</span>  <span class="comment"># When close to goal select goal, with this probability. default: 0.05</span></div><div class="line"><span class="attr">    border_fraction:</span> <span class="number">0.9</span>  <span class="comment"># Fraction of time focused on boarder default: 0.9 (0.0,1.]</span></div><div class="line"><span class="attr">    failed_expansion_score_factor:</span> <span class="number">0.5</span>  <span class="comment"># When extending motion fails, scale score by factor. default: 0.5</span></div><div class="line"><span class="attr">    min_valid_path_fraction:</span> <span class="number">0.5</span>  <span class="comment"># Accept partially valid moves above fraction. default: 0.5</span></div><div class="line"><span class="attr">  RRTkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::RRT</span></div><div class="line"><span class="attr">    range:</span> <span class="number">0.0</span>  <span class="comment"># Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span></div><div class="line"><span class="attr">    goal_bias:</span> <span class="number">0.05</span>  <span class="comment"># When close to goal select goal, with this probability? default: 0.05</span></div><div class="line"><span class="attr">  RRTConnectkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::RRTConnect</span></div><div class="line"><span class="attr">    range:</span> <span class="number">0.0</span>  <span class="comment"># Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span></div><div class="line"><span class="attr">  RRTstarkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::RRTstar</span></div><div class="line"><span class="attr">    range:</span> <span class="number">0.0</span>  <span class="comment"># Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span></div><div class="line"><span class="attr">    goal_bias:</span> <span class="number">0.05</span>  <span class="comment"># When close to goal select goal, with this probability? default: 0.05</span></div><div class="line"><span class="attr">    delay_collision_checking:</span> <span class="number">1</span>  <span class="comment"># Stop collision checking as soon as C-free parent found. default 1</span></div><div class="line"><span class="attr">  TRRTkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::TRRT</span></div><div class="line"><span class="attr">    range:</span> <span class="number">0.0</span>  <span class="comment"># Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span></div><div class="line"><span class="attr">    goal_bias:</span> <span class="number">0.05</span>  <span class="comment"># When close to goal select goal, with this probability? default: 0.05</span></div><div class="line"><span class="attr">    max_states_failed:</span> <span class="number">10</span>  <span class="comment"># when to start increasing temp. default: 10</span></div><div class="line"><span class="attr">    temp_change_factor:</span> <span class="number">2.0</span>  <span class="comment"># how much to increase or decrease temp. default: 2.0</span></div><div class="line"><span class="attr">    min_temperature:</span> <span class="number">10e-10</span>  <span class="comment"># lower limit of temp change. default: 10e-10</span></div><div class="line"><span class="attr">    init_temperature:</span> <span class="number">10e-6</span>  <span class="comment"># initial temperature. default: 10e-6</span></div><div class="line"><span class="attr">    frountier_threshold:</span> <span class="number">0.0</span>  <span class="comment"># dist new state to nearest neighbor to disqualify as frontier. default: 0.0 set in setup()</span></div><div class="line"><span class="attr">    frountierNodeRatio:</span> <span class="number">0.1</span>  <span class="comment"># 1/10, or 1 nonfrontier for every 10 frontier. default: 0.1</span></div><div class="line"><span class="attr">    k_constant:</span> <span class="number">0.0</span>  <span class="comment"># value used to normalize expresssion. default: 0.0 set in setup()</span></div><div class="line"><span class="attr">  PRMkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::PRM</span></div><div class="line"><span class="attr">    max_nearest_neighbors:</span> <span class="number">10</span>  <span class="comment"># use k nearest neighbors. default: 10</span></div><div class="line"><span class="attr">  PRMstarkConfigDefault:</span></div><div class="line"><span class="attr">    type:</span> <span class="attr">geometric::PRMstar</span></div><div class="line"><span class="attr">xm_arm:</span></div><div class="line"><span class="attr">  planner_configs:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">SBLkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">ESTkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">LBKPIECEkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">BKPIECEkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">KPIECEkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">RRTkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">RRTConnectkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">RRTstarkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">TRRTkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">PRMkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">PRMstarkConfigDefault</span></div><div class="line"><span class="attr">  projection_evaluator:</span> <span class="string">joints(joint_lift,joint_waist)</span></div><div class="line"><span class="attr">  longest_valid_segment_fraction:</span> <span class="number">0.05</span></div><div class="line"><span class="attr">xm_gripper:</span></div><div class="line"><span class="attr">  planner_configs:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">SBLkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">ESTkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">LBKPIECEkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">BKPIECEkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">KPIECEkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">RRTkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">RRTConnectkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">RRTstarkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">TRRTkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">PRMkConfigDefault</span></div><div class="line"><span class="bullet">    -</span> <span class="string">PRMstarkConfigDefault</span></div><div class="line"><span class="attr">  projection_evaluator:</span> <span class="string">joints(joint_finger_left,joint_finger_right)</span></div><div class="line"><span class="attr">  longest_valid_segment_fraction:</span> <span class="number">0.05</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_moveit_config/config/sensors_rgbd.yaml</p>
</blockquote>
<p>这个文件用来配置MoveIt!的传感器插件，它可以使MoveIt!订阅点云数据来生成机械臂避障用的OctoMap。注意：这个配置文件不是用MoveIt! Setup Assistant自动生成的，你需要自己添加。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="attr">sensors:</span></div><div class="line"><span class="attr">- sensor_plugin:</span> <span class="string">occupancy_map_monitor/PointCloudOctomapUpdater</span></div><div class="line"><span class="attr">  point_cloud_topic:</span> <span class="string">/head_kinect/depth/points</span></div><div class="line"><span class="attr">  max_range:</span> <span class="number">10</span></div><div class="line"><span class="attr">  padding_offset:</span> <span class="number">0.01</span></div><div class="line"><span class="attr">  padding_scale:</span> <span class="number">1.0</span></div><div class="line"><span class="attr">  point_subsample:</span> <span class="number">1</span></div><div class="line"><span class="attr">  filtered_cloud_topic:</span> <span class="string">output_cloud</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_moveit_config/config/xmbot.srdf</p>
</blockquote>
<p>这是MoveIt!的主配置文件。这里面记录了我们使用MoveIt! Setup Assistant配置时的参数，里面包含了组群、位姿、末端执行器、虚拟关节，以及碰撞免测矩阵的定义。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" ?&gt;</div><div class="line"><span class="comment">&lt;!--This does not replace URDF, and is not an extension of URDF.</span></div><div class="line">    This is a format for representing semantic information about the robot structure.</div><div class="line">    A URDF file must exist for this robot as well, where the joints and the links that are referenced are defined</div><div class="line">--&gt;</div><div class="line"><span class="tag">&lt;<span class="name">robot</span> <span class="attr">name</span>=<span class="string">"xmbot"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--GROUPS: Representation of a set of joints and links. This can be useful for specifying DOF to plan for, defining arms, end effectors, etc--&gt;</span></div><div class="line">    <span class="comment">&lt;!--LINKS: When a link is specified, the parent joint of that link (if it exists) is automatically included--&gt;</span></div><div class="line">    <span class="comment">&lt;!--JOINTS: When a joint is specified, the child link of that joint (which will always exist) is automatically included--&gt;</span></div><div class="line">    <span class="comment">&lt;!--CHAINS: When a chain is specified, all the links along the chain (including endpoints) are included in the group. Additionally, all the joints that are parents to included links are also included. This means that joints along the chain and the parent joint of the base link are included in the group--&gt;</span></div><div class="line">    <span class="comment">&lt;!--SUBGROUPS: Groups can also be formed by referencing to already defined group names--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">group</span> <span class="attr">name</span>=<span class="string">"xm_arm"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_lift"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_waist"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_big_arm"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_forearm"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_wrist_pitching"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_wrist_rotation"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">chain</span> <span class="attr">base_link</span>=<span class="string">"link_lift"</span> <span class="attr">tip_link</span>=<span class="string">"link_gripper_frame"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">group</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">group</span> <span class="attr">name</span>=<span class="string">"xm_gripper"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">name</span>=<span class="string">"link_finger_left"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">name</span>=<span class="string">"link_finger_right"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_finger_left"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_finger_right"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">group</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--GROUP STATES: Purpose: Define a named state for a particular group, in terms of joint values. This is useful to define states like 'folded arms'--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">group_state</span> <span class="attr">name</span>=<span class="string">"initial"</span> <span class="attr">group</span>=<span class="string">"xm_arm"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_big_arm"</span> <span class="attr">value</span>=<span class="string">"1.309"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_forearm"</span> <span class="attr">value</span>=<span class="string">"2.182"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_lift"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_waist"</span> <span class="attr">value</span>=<span class="string">"-0.96"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_wrist_pitching"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_wrist_rotation"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">group_state</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">group_state</span> <span class="attr">name</span>=<span class="string">"prepare"</span> <span class="attr">group</span>=<span class="string">"xm_arm"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_big_arm"</span> <span class="attr">value</span>=<span class="string">"1.309"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_forearm"</span> <span class="attr">value</span>=<span class="string">"2.182"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_lift"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_waist"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_wrist_pitching"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_wrist_rotation"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">group_state</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">group_state</span> <span class="attr">name</span>=<span class="string">"straight"</span> <span class="attr">group</span>=<span class="string">"xm_arm"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_big_arm"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_forearm"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_lift"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_waist"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_wrist_pitching"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">"joint_wrist_rotation"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">group_state</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--END EFFECTOR: Purpose: Represent information about an end effector.--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">end_effector</span> <span class="attr">name</span>=<span class="string">"xm_effector"</span> <span class="attr">parent_link</span>=<span class="string">"link_gripper_frame"</span> <span class="attr">group</span>=<span class="string">"xm_gripper"</span> <span class="attr">parent_group</span>=<span class="string">"xm_arm"</span> /&gt;</span></div><div class="line">    <span class="comment">&lt;!--VIRTUAL JOINT: Purpose: this element defines a virtual joint between a robot link and an external frame of reference (considered fixed with respect to the robot)--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">virtual_joint</span> <span class="attr">name</span>=<span class="string">"base_odom"</span> <span class="attr">type</span>=<span class="string">"fixed"</span> <span class="attr">parent_frame</span>=<span class="string">"odom"</span> <span class="attr">child_link</span>=<span class="string">"base_footprint"</span> /&gt;</span></div><div class="line">    <span class="comment">&lt;!--DISABLE COLLISIONS: By default it is assumed that any link of the robot could potentially come into collision with any other link in the robot. This tag disables collision checking between a specified pair of links. --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_footprint"</span> <span class="attr">link2</span>=<span class="string">"base_link"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_footprint"</span> <span class="attr">link2</span>=<span class="string">"link_big_arm"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_footprint"</span> <span class="attr">link2</span>=<span class="string">"link_kinect"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_footprint"</span> <span class="attr">link2</span>=<span class="string">"link_laser"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_footprint"</span> <span class="attr">link2</span>=<span class="string">"link_lift"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_footprint"</span> <span class="attr">link2</span>=<span class="string">"link_waist"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_footprint"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_1"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_footprint"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_2"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_footprint"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_3"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_link"</span> <span class="attr">link2</span>=<span class="string">"link_kinect"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_link"</span> <span class="attr">link2</span>=<span class="string">"link_laser"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_link"</span> <span class="attr">link2</span>=<span class="string">"link_lift"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_link"</span> <span class="attr">link2</span>=<span class="string">"link_waist"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_link"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_1"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_link"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_2"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"base_link"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_3"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_finger_left"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_finger_right"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_forearm"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_kinect"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_lift"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_waist"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_1"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_2"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_3"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_pitching"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_big_arm"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_rotation"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_finger_left"</span> <span class="attr">link2</span>=<span class="string">"link_finger_right"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_finger_left"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_pitching"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_finger_left"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_rotation"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_finger_right"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_pitching"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_finger_right"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_rotation"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_forearm"</span> <span class="attr">link2</span>=<span class="string">"link_waist"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_forearm"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_2"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_forearm"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_3"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_forearm"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_pitching"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_forearm"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_rotation"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_kinect"</span> <span class="attr">link2</span>=<span class="string">"link_laser"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_kinect"</span> <span class="attr">link2</span>=<span class="string">"link_lift"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_kinect"</span> <span class="attr">link2</span>=<span class="string">"link_waist"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_kinect"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_1"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_kinect"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_2"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_kinect"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_3"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_laser"</span> <span class="attr">link2</span>=<span class="string">"link_lift"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_laser"</span> <span class="attr">link2</span>=<span class="string">"link_waist"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_laser"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_1"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_laser"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_2"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_laser"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_3"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_lift"</span> <span class="attr">link2</span>=<span class="string">"link_waist"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_lift"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_1"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_lift"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_2"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_lift"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_3"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_lift"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_pitching"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_waist"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_1"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_waist"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_2"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_waist"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_3"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_waist"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_pitching"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_wheel_1"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_2"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_wheel_1"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_3"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_wheel_2"</span> <span class="attr">link2</span>=<span class="string">"link_wheel_3"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_wheel_2"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_pitching"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_wheel_3"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_pitching"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_wheel_3"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_rotation"</span> <span class="attr">reason</span>=<span class="string">"Never"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">disable_collisions</span> <span class="attr">link1</span>=<span class="string">"link_wrist_pitching"</span> <span class="attr">link2</span>=<span class="string">"link_wrist_rotation"</span> <span class="attr">reason</span>=<span class="string">"Adjacent"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">robot</span>&gt;</span></div></pre></td></tr></table></figure>
<p>下面，我们打开launch文件夹，你会发现里面有很多launch和xml文件。这时候不要慌，因为MoveIt!的模块化设计思想，它将不同的功能进行拆分并放到不同的文件中，所以文件看起来很多，但每一个都不是很长。这里，我只介绍其中几个重要的文件。</p>
<blockquote>
<p>xm_arm_moveit_config/launch/demo.launch</p>
</blockquote>
<p>这个launch文件是运行MoveIt!的根节点，它里面还包含了其他的launch文件。包括最为重要的move_group.launch。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- By default, we do not start a database (it can be large) --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"db"</span> <span class="attr">default</span>=<span class="string">"false"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- By default, we are not in debug mode --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"debug"</span> <span class="attr">default</span>=<span class="string">"false"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Load the URDF, SRDF and other .yaml configuration files on the param server --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/launch/planning_context.launch"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"load_robot_description"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- If needed, broadcast static tf for robot root --&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- We do not have a robot connected, so publish fake joint states --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">"joint_state_publisher"</span> <span class="attr">pkg</span>=<span class="string">"joint_state_publisher"</span> <span class="attr">type</span>=<span class="string">"joint_state_publisher"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"/use_gui"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">param</span>=<span class="string">"/source_list"</span>&gt;</span>[/move_group/fake_controller_joint_states]<span class="tag">&lt;/<span class="name">rosparam</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Given the published joint states, publish tf for the robot links --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">"robot_state_publisher"</span> <span class="attr">pkg</span>=<span class="string">"robot_state_publisher"</span> <span class="attr">type</span>=<span class="string">"robot_state_publisher"</span> <span class="attr">respawn</span>=<span class="string">"true"</span> <span class="attr">output</span>=<span class="string">"screen"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/launch/move_group.launch"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"allow_trajectory_execution"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"fake_execution"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"info"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"debug"</span> <span class="attr">value</span>=<span class="string">"$(arg debug)"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Run Rviz and load the default config to see the state of the move_group node --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/launch/moveit_rviz.launch"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"config"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"debug"</span> <span class="attr">value</span>=<span class="string">"$(arg debug)"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- If database loading was enabled, start mongodb as well --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/launch/default_warehouse_db.launch"</span> <span class="attr">if</span>=<span class="string">"$(arg db)"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_moveit_config/launch/move_group.launch</p>
</blockquote>
<p>这个launch文件里面设置了很多运动规划时的参数。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/launch/planning_context.launch"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- GDB Debug Option --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"debug"</span> <span class="attr">default</span>=<span class="string">"false"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">unless</span>=<span class="string">"$(arg debug)"</span> <span class="attr">name</span>=<span class="string">"launch_prefix"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span>     <span class="attr">if</span>=<span class="string">"$(arg debug)"</span> <span class="attr">name</span>=<span class="string">"launch_prefix"</span></span></div><div class="line">true   <span class="attr">value</span>=<span class="string">"gdb -x $(find xm_arm_moveit_config)/launch/gdb_settings.gdb --ex run --args"</span> /&gt;</div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Verbose Mode Option --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"info"</span> <span class="attr">default</span>=<span class="string">"$(arg debug)"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">unless</span>=<span class="string">"$(arg info)"</span> <span class="attr">name</span>=<span class="string">"command_args"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span>     <span class="attr">if</span>=<span class="string">"$(arg info)"</span> <span class="attr">name</span>=<span class="string">"command_args"</span> <span class="attr">value</span>=<span class="string">"--debug"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- move_group settings --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"allow_trajectory_execution"</span> <span class="attr">default</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"fake_execution"</span> <span class="attr">default</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"max_safe_path_cost"</span> <span class="attr">default</span>=<span class="string">"1"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"jiggle_fraction"</span> <span class="attr">default</span>=<span class="string">"0.05"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"publish_monitored_planning_scene"</span> <span class="attr">default</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Planning Functionality --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">ns</span>=<span class="string">"move_group"</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/launch/planning_pipeline.launch.xml"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"pipeline"</span> <span class="attr">value</span>=<span class="string">"ompl"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Trajectory Execution Functionality --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">ns</span>=<span class="string">"move_group"</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/launch/trajectory_execution.launch.xml"</span> <span class="attr">if</span>=<span class="string">"$(arg allow_trajectory_execution)"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"moveit_manage_controllers"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"moveit_controller_manager"</span> <span class="attr">value</span>=<span class="string">"xmbot"</span> <span class="attr">unless</span>=<span class="string">"$(arg fake_execution)"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"moveit_controller_manager"</span> <span class="attr">value</span>=<span class="string">"fake"</span> <span class="attr">if</span>=<span class="string">"$(arg fake_execution)"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Sensors Functionality --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">ns</span>=<span class="string">"move_group"</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/launch/sensor_manager.launch.xml"</span> <span class="attr">if</span>=<span class="string">"$(arg allow_trajectory_execution)"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"moveit_sensor_manager"</span> <span class="attr">value</span>=<span class="string">"xmbot"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Start the actual move_group node/action server --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">"move_group"</span> <span class="attr">launch-prefix</span>=<span class="string">"$(arg launch_prefix)"</span> <span class="attr">pkg</span>=<span class="string">"moveit_ros_move_group"</span> <span class="attr">type</span>=<span class="string">"move_group"</span> <span class="attr">respawn</span>=<span class="string">"false"</span> <span class="attr">output</span>=<span class="string">"screen"</span> <span class="attr">args</span>=<span class="string">"$(arg command_args)"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Set the display variable, in case OpenGL code is used internally --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">env</span> <span class="attr">name</span>=<span class="string">"DISPLAY"</span> <span class="attr">value</span>=<span class="string">"$(optenv DISPLAY :0)"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"allow_trajectory_execution"</span> <span class="attr">value</span>=<span class="string">"$(arg allow_trajectory_execution)"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"max_safe_path_cost"</span> <span class="attr">value</span>=<span class="string">"$(arg max_safe_path_cost)"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"jiggle_fraction"</span> <span class="attr">value</span>=<span class="string">"$(arg jiggle_fraction)"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- MoveGroup capabilities to load --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"capabilities"</span> <span class="attr">value</span>=<span class="string">"move_group/MoveGroupCartesianPathService</span></span></div><div class="line">truetruetruetrue      move_group/MoveGroupExecuteService</div><div class="line">truetruetruetrue      move_group/MoveGroupKinematicsService</div><div class="line">truetruetruetrue      move_group/MoveGroupMoveAction</div><div class="line">truetruetruetrue      move_group/MoveGroupPickPlaceAction</div><div class="line">truetruetruetrue      move_group/MoveGroupPlanService</div><div class="line">truetruetruetrue      move_group/MoveGroupQueryPlannersService</div><div class="line">truetruetruetrue      move_group/MoveGroupStateValidationService</div><div class="line">truetruetruetrue      move_group/MoveGroupGetPlanningSceneService</div><div class="line">truetruetruetrue      move_group/ClearOctomapService</div><div class="line">truetruetruetrue      " /&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"planning_scene_monitor/publish_planning_scene"</span> <span class="attr">value</span>=<span class="string">"$(arg publish_monitored_planning_scene)"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"planning_scene_monitor/publish_geometry_updates"</span> <span class="attr">value</span>=<span class="string">"$(arg publish_monitored_planning_scene)"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"planning_scene_monitor/publish_state_updates"</span> <span class="attr">value</span>=<span class="string">"$(arg publish_monitored_planning_scene)"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"planning_scene_monitor/publish_transforms_updates"</span> <span class="attr">value</span>=<span class="string">"$(arg publish_monitored_planning_scene)"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_moveit_config/launch/planning_context.launch</p>
</blockquote>
<p>这里面使用了机械臂的URDF和SRDF文件，以及运动学解算库。不建议修改。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- By default we do not overwrite the URDF. Change the following to true to change the default behavior --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"load_robot_description"</span> <span class="attr">default</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- The name of the parameter under which the URDF is loaded --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"robot_description"</span> <span class="attr">default</span>=<span class="string">"robot_description"</span>/&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Load universal robot description format (URDF) --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">if</span>=<span class="string">"$(arg load_robot_description)"</span> <span class="attr">name</span>=<span class="string">"$(arg robot_description)"</span> <span class="attr">textfile</span>=<span class="string">"$(find xm_arm_description)/urdf/xmbot_with_arm.urdf"</span>/&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- The semantic description that corresponds to the URDF --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"$(arg robot_description)_semantic"</span> <span class="attr">textfile</span>=<span class="string">"$(find xm_arm_moveit_config)/config/xmbot.srdf"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Load updated joint limits (override information from URDF) --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">"$(arg robot_description)_planning"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">"load"</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/config/joint_limits.yaml"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">group</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Load default settings for kinematics; these settings are overridden by settings in a node's namespace --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">"$(arg robot_description)_kinematics"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">"load"</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/config/kinematics.yaml"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">group</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_moveit_config/launch/xmbot_moveit_controller_manager.launch.xml</p>
</blockquote>
<p>这个文件用来指定Controller配置文件的位置。注意：这个文件是MoveIt! Setup Assistant自动生成的，但我记得里面什么也没写。你需要下面例子中的那样进行配置。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Set the param that trajectory_execution_manager needs to find the controller plugin --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"moveit_controller_manager"</span> <span class="attr">default</span>=<span class="string">"moveit_simple_controller_manager/MoveItSimpleControllerManager"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"moveit_controller_manager"</span> <span class="attr">value</span>=<span class="string">"$(arg moveit_controller_manager)"</span>/&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Load controller_list --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">"use_controller_manager"</span> <span class="attr">default</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"use_controller_manager"</span> <span class="attr">value</span>=<span class="string">"$(arg use_controller_manager)"</span> /&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Load joint controller configurations from YAML file to parameter server --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/config/controllers.yaml"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>xm_arm_moveit_config/launch/xmbot_moveit_sensor_manager.launch.xml</p>
</blockquote>
<p>这个文件用来指定Sensor配置文件的位置。同上，你也需要自己编辑这个文件。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Load rgbd sensor configurations from YAML file --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">"load"</span> <span class="attr">file</span>=<span class="string">"$(find xm_arm_moveit_config)/config/sensors_rgbd.yaml"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></div></pre></td></tr></table></figure>
<p>接下来，让我们运行两个例子来测试一下MoveIt!。</p>
<p>首先，我们测试一下MoveIt!的Motion Planning。请在终端中输入下列命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; roslaunch xm_arm_bringup xm_arm_bringup_moveit_and_gazebo.launch</div></pre></td></tr></table></figure>
<p>在Rviz中，你可以使用末端执行器上的交互式Marker来移动机械臂到目标位置。接着，你可以在Planning Library的下拉式菜单中选择OMPL库中的某个特定规划算法。然后，点击Plan按钮，Rviz窗口中就会出现一条从初始位置到目标位置的运动轨迹并循环不断地播放。最后，点击Execute按钮，MoveIt!会将上一步规划出来的机械臂关节轨迹通过FollowJointTrajectoryAction接口发送给Gazebo中对应类型的Controller，使得Gazebo中的机械臂可以移动到目标位置，以下是测试的截图。注意：不同的规划算法所用的时间是不一样的。请尝试每一种算法，并记住最优算法的名字，这是为了之后方便在代码中对其进行调用做准备。</p>
<p><img src="https://github.com/myyerrol/xm_arm_workspace/raw/master/.images/xm_arm_motion_planning_rviz.png" alt="xm_arm_motion_planning_rviz"></p>
<p><img src="https://github.com/myyerrol/xm_arm_workspace/raw/master/.images/xm_arm_motion_planning_gazebo.png" alt="xm_arm_motion_planning_gazebo"></p>
<p>第二个例子，我们来测试一下带有Avoid Collision的Motion Planning。同样的，请在终端中输入下列命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; roslaunch xm_arm_bringup xm_arm_bringup_moveit_and_gazebo.launch</div></pre></td></tr></table></figure>
<p>因为我在Gazebo中给机器人的头部添加了深度传感器的插件，所以当你把桌子放到机器人前方的时候，MoveIt!可以立马从点云Topic中获取物体的信息，并在Rviz中生成可视化的OctoMap。在下一次做运动规划的时候，MoveIt!会将由正方体组成的OctoMap看成障碍物并考虑在内。图中，机械臂的初始位置为伸直形态，我将其从桌子的下方移动到了桌子的正上方，规划的效果如下图所示。</p>
<p><img src="https://github.com/myyerrol/xm_arm_workspace/raw/master/.images/xm_arm_avoide_collision_rviz.png" alt="xm_arm_avoide_collision_rviz"></p>
<p><img src="https://github.com/myyerrol/xm_arm_workspace/raw/master/.images/xm_arm_avoide_collision_gazebo.png" alt="xm_arm_avoide_collision_gazebo"></p>
<p>当然，在使用MoveIt!对机械臂进行运动规划的时候并不是每一次都能成功，有些时候会出现超时报错的情况。遇到这种问题的时候，你可以尝试尝试其他OMPL算法，因为不同的OMPL算法可能对不同的情况有各自的优化。</p>
<p>最后，由于时间的缘故，我没能将MoveIt!的C++和Python的使用代码给整理出来，这对于我来说非常遗憾。不过，我相信随着MoveIt!学习教程的越来越丰富，有关如何用代码来做MoveIt!的运动规划会更加容易。</p>
<h4 id="任务决策层"><a href="#任务决策层" class="headerlink" title="任务决策层"></a>任务决策层</h4><p>任务决策层处于整个架构图最顶端，是控制整个机械臂的大脑所在。首先，我要阐明的一点是：这一部分在我那一届机械臂软件代码中并没有实现，这是我后来总结机械臂开发经验的时候重新设计的。</p>
<p>至于我为什么要选择重新设计新的任务决策层，原因其实很明显，就是我们之前的那个存在着很多的不足的地方。我们之前的那个任务决策层架构比较松散，特别是机械臂的Action接口，我们定义了好几种，但是其中有几种的功能比较相近，显得比较冗余。而且状态机可以直接发送Action的Goal到机械臂模块中，换句话说就是没有经过封装的数据是一直暴露在整个任务决策的各个时间段，这会影响数据通信的稳定性，而且这样的代码也是不容易维护和重构的。</p>
<p>当然，除了上面存在的历史问题，还有一个影响我做出改进的因素就是：中科大蓝鹰队可佳服务机器人早期的<a href="http://ai.ustc.edu.cn/cn/demo/SolveNewProblems.php" target="_blank" rel="external">抓取视频</a>。视频中，可佳机器人的机械臂可以非常精准地操作微波炉，并抓取桌子上三种不同的容器。其中最难的是那个盛有牛奶的碗，整个碗只有一个地方向外伸出了一个手柄，能让机械臂末端手爪精准地抓住碗并且在移动其的过程中不让碗中的牛奶洒出来，这是非常厉害的。当时看完视频之后，我就被深深地震撼了，原来机械臂的自主抓取可以做到这样的程度！后来，<strong>西工大一小学生</strong>跟我们讲：</p>
<blockquote>
<p>这个视频里最厉害的还不是机械臂的抓取，而是可佳机器人的任务决策部分。可佳可以通过对人语义的理解来自动生成相应的任务序列，而且这个任务序列是能被实时的修改和更新的。</p>
</blockquote>
<p>因此，我决定对之前的机械臂任务决策模块进行封装，把所有与机械臂相关的软件细节都隐藏起来，最后暴露给外面的只有数据和任务接口。这样可以大大降低模块与模块之间的耦合性，并减少了不必要的进程通信开销，提高了程序运行时的效率。下面，我简要地讲解一下这个部分的原理。</p>
<p>任务决策层的核心简单来说是在其内部定义了一个小型的状态机，它可以根据不同的任务类型、物体位置以及物体的类型来选择不同的数据发给下面的运动规划层。这里我举一个具体的例子来说明其工作的整个流程：首先，机器人决策模块给机械臂的任务决策层发送了一个<strong>抓取</strong>的状态，任务决策层接收到之后就会在自己事先存储好的状态表中进行查找，如果匹配<strong>抓取</strong>状态成功，就把表中的状态链取出并放到状态队列中去。每次状态控制器会根据当前状态队列中的子动作来分析其所需要的数据。比如说，<strong>抓取</strong>状态可以拆分成很多子动作：初始、准备、抓取、手爪张开、手爪夹紧、手握物体等。此时，如果队列中第一个动作是初始，那控制器便会从预先设定好的机械臂位置池中取出相应的位置，并从MoveIt!参数表中取出其所需要的数据，最后通过MoveIt!接口把初始动作发送给运动规划层进行规范和执行。当机械臂完成这个动作后，任务决策层会比较机械臂实际运动的位置和预想位置之间的差值，如果误差小于某个值，其便会返回执行成果给控制器，控制器则会继续地执行下一个状态，直到整个状态队列中的动作都被执行完。如果误差过大，则报错退出，以防止机械臂出现任何不可控的意外情况。</p>
<p>最后，鉴于这一部分只停留在我的设想阶段，目前只供参考。至于最终能不能实现出来，还有待日后的验证。</p>
<h2 id="学习流程"><a href="#学习流程" class="headerlink" title="学习流程"></a>学习流程</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ul>
<li><h4 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h4><p>首先，我承认我对规范有一种近似疯狂的恪守。很多人都觉得学习开发规范对项目开发没有意义，简直就是在浪费时间。可是我一直坚信着：只有好的开发规范，才能产生成功的项目。我把学习开发规范作为基础中的基础，是因为我曾经在项目开发的过程中吃过这样的亏。因此，我希望每个开发者都能在为项目开始贡献之前耐下心来好好学习本团队的开发规范，并严格地执行规范中的内容。这里，我推荐<a href="https://google.github.io/styleguide" target="_blank" rel="external">Google开发规范</a>和<a href="http://wiki.ros.org/StyleGuide" target="_blank" rel="external">ROS开发规范</a>。当然，如果你感兴趣的话，你可以看一下我曾经自己整理编写的<a href="https://github.com/xm-project/xm_developer_guide" target="_blank" rel="external">晓萌团队开发规范</a>。</p>
</li>
<li><h4 id="版本管理"><a href="#版本管理" class="headerlink" title="版本管理"></a>版本管理</h4><p>我认为掌握版本管理可以说是软件开发的必备技能之一，也是提高代码开发效率的绝对利器，希望大家好好地学习一下。版本管理主要涉及Git和GitHub的使用，这方面的学习资料很多，上网搜一下，花一段时间就能入门。</p>
</li>
<li><h4 id="文档写作"><a href="#文档写作" class="headerlink" title="文档写作"></a>文档写作</h4><p>这方面也有很多的开发者不是很重视。但个人认为如果你想成为真正的强者，只会编代码是远远不够的，你还需要优秀的文档写作能力。比如说你在开发的过程中遇到了一些问题，并成功地解决了。这个时候，你应该及时地将遇到的问题和解决办法以项目日志的形式记录下来，这样伴随着项目开发进度的不断向前，日志的内容也会越来越多。我敢保证，若干年之后，你一定会拥有别人绝对没有的宝贵财富！当然，除了开发日志外，你也要学会如何使用Markdown来编写项目文档。Markdown是你与开源世界交流的最重要的工具，一定要学会，况且它也并不是很难学。</p>
</li>
<li><h4 id="编程能力"><a href="#编程能力" class="headerlink" title="编程能力"></a>编程能力</h4><p>这个我就不用讲太多了，我相信如何学习编程，大家可能知道的比我还多。我这里主要想强调一下，一定要重点理解、学习C++。毕竟编译型语言要比解释性语言Python在执行效率上要高，而且对于机械臂开发来说，MoveIt!中的C++ API也要比Python的要多。</p>
</li>
<li><h4 id="ROS基础"><a href="#ROS基础" class="headerlink" title="ROS基础"></a>ROS基础</h4><p>关于如何学习ROS，我推荐跟我曾经同在西工大舞蹈机器人基地的盛盛在易科上发表过的一篇文章：<a href="http://blog.exbot.net/archives/2667" target="_blank" rel="external">如何学习ROS——盛盛经验谈</a>。这里，我想补充一下，对于机械臂开发来说，除了盛盛在文章里讲到的那些内容之外，各位还要重点理解以下几个部分：</p>
<ul>
<li><a href="http://wiki.ros.org/actionlib" target="_blank" rel="external">Action</a></li>
<li><a href="http://wiki.ros.org/ros_control" target="_blank" rel="external">ROS Control</a></li>
<li><a href="http://wiki.ros.org/joint_state_publisher" target="_blank" rel="external">Joint State Publisher</a></li>
<li><a href="http://wiki.ros.org/robot_state_publisher" target="_blank" rel="external">Robot State Publisher</a></li>
<li><a href="http://wiki.ros.org/joint_trajectory_controller" target="_blank" rel="external">Joint Trajectory Controller</a></li>
<li><a href="http://wiki.ros.org/urdf" target="_blank" rel="external">URDF</a></li>
<li><a href="http://wiki.ros.org/xacro" target="_blank" rel="external">Xacro</a></li>
<li><a href="http://wiki.ros.org/roslaunch/XML" target="_blank" rel="external">Launch XML</a></li>
<li><a href="http://gazebosim.org/tutorials?cat=connect_ros" target="_blank" rel="external">Gazebo Connect to ROS</a></li>
</ul>
</li>
</ul>
<h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><p>等你学习完以上的内容之后，我相信你已经打下了坚实的基础。这个时候，你可以开始入门MoveIt!了。学习MoveIt!的时候，一定要多实践，遇到问题多在<a href="http://answers.ros.org/questions" target="_blank" rel="external">ROS Answers</a>上搜一搜，我相信大部分问题的解决办法你都能找到。有关机械臂的URDF模型，我推荐刚开始入门的时候先从简单的机械臂模型入手，不要一上来就整个PR2的，一是机械臂关节比较多，二是我估计你的电脑不一定能带的动。</p>
<ul>
<li><h4 id="Gazebo"><a href="#Gazebo" class="headerlink" title="Gazebo"></a>Gazebo</h4><p>要熟练地掌握Gazebo仿真软件，因为我觉得并不是每个人都有机械臂，机械臂的成本确实比较高，这个时候如果你学会了如何在仿真环境下搭建机械臂模型并将其与MoveIt!连接在一起，你就能在一定程度上节约时间、资金成本。当然，仿真是永远无法替代实物的，这个我之前在开发机械臂的时候就深刻地体会过，不过，把Gazebo当做算法的前期验证平台还是非常好的。</p>
</li>
<li><h4 id="MoveIt"><a href="#MoveIt" class="headerlink" title="MoveIt!"></a>MoveIt!</h4><p>多看看别人的MoveIt!配置是什么样的，然后你自己再重新地配置几遍，主要是熟悉其中的一些概念。最后，在Rviz里试着拖动机械臂到新的位置，点击<strong>Plan</strong>按钮看看MoveIt!是怎么通过IK来输出一条平滑的轨迹的。当然，如果你配置好了深度传感器接口的话，可以试一试MoveIt!是如何在有障碍物的情况下进行运动规划的。</p>
<p>总之，想要开发好机械臂，MoveIt!+Gazebo是必不可少的。</p>
</li>
</ul>
<h3 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h3><p>至此，如果你能按照我说的完成前两步的话，你应该已经会用MoveIt!，并能用其做简单的运动规划了。当然，如果你想成为机械臂开发大神的话，你还需要重点学习MoveIt!的代码API。MoveIt!的API不少，你需要多尝试，找到最适合你们机械臂使用的API（推荐C++的API）。</p>
<ul>
<li><h4 id="FCL"><a href="#FCL" class="headerlink" title="FCL"></a>FCL</h4><p>在MoveIt!中，碰撞检测使用的是FCL库。你需要了解和学习FCL的API，并将其融入到机械臂的运动规划中去。</p>
</li>
<li><h4 id="OMPL"><a href="#OMPL" class="headerlink" title="OMPL"></a>OMPL</h4><p>MoveIt!默认使用OMPL库来做运动规划，你可以去OMPL的<a href="http://ompl.kavrakilab.org" target="_blank" rel="external">官网</a>仔细地学习一下它的使用方法。如果你有时间的话，也可以研究一下其他几种规划器的效果如何，比如<a href="http://wiki.ros.org/stomp_motion_planner" target="_blank" rel="external">STOMP</a>、<a href="http://wiki.ros.org/sbpl" target="_blank" rel="external">SBPL</a>、<a href="http://www.nathanratliff.com/thesis-research/chomp" target="_blank" rel="external">CHOMP</a>等。</p>
</li>
<li><h4 id="IK解算"><a href="#IK解算" class="headerlink" title="IK解算"></a>IK解算</h4><p>如果你认为你已经对MoveIt!的使用了如指掌，你可以尝试挑战一下难度——根据你们自己机械臂的实际情况，手写IK解算插件并将其集成到OMPL中去。</p>
</li>
<li><h4 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h4><p>完成以上之后，你如果发现自己还想在机械臂领域有更多的提升空间，那工程开发显然已经不能满足你的需求了，你需要阅读机械臂方面的论文以及专业书籍。这里我推荐《Robotics - Modelling, Planning and Control》这本书，里面深入地讲解了机器人的建模、轨迹规划以及运动控制等相关内容。</p>
</li>
</ul>
<h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><p>以下是我认为学习机械臂比较好的资源，推荐给大家。</p>
<ul>
<li><h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><p><a href="http://moveit.ros.org/documentation" target="_blank" rel="external">MoveIt!官方文档</a></p>
</li>
<li><h4 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h4><p>《Effective_Robotics_Programming_with_ROS_Third_Edition》<br>《Learning_ROS_for_Robotics_Programming_Second_Edition》<br>《Mastering_ROS_for_Robotics_Programming》<br>《Programming_Robots_with_ROS》<br>《Robot_Operating_System(ROS)_The_Complete_Reference》<br>《ROS_By_Example_2_Indigo》<br>《ROS_Robotics_By_Example》</p>
</li>
<li><h4 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h4><p><strong>西工大一小学生：</strong><br><a href="http://blog.exbot.net/archives/2337" target="_blank" rel="external">ros_control攻略</a></p>
<p><strong>古月居：</strong><br><a href="http://www.guyuehome.com/435" target="_blank" rel="external">ROS探索总结（二十五）——MoveIt!基础</a><br><a href="http://www.guyuehome.com/455" target="_blank" rel="external">ROS探索总结（二十六）——MoveIt!编程</a><br><a href="http://www.guyuehome.com/890" target="_blank" rel="external">ROS探索总结（三十一）——ros_control</a></p>
<p><strong>redefine：</strong><br><a href="http://www.roswiki.com/read.php?tid=402&amp;fid=9&amp;page=1" target="_blank" rel="external">运动规划 (Motion Planning): MoveIt! 与 OMPL</a><br><a href="http://www.roswiki.com/read.php?tid=535&amp;fid=9" target="_blank" rel="external">基于OMPL的采样运动规划算法(Sampling-based Motion Planning)</a></p>
<p><strong>yaked：</strong><br><a href="http://blog.csdn.net/yaked/article/details/42265325" target="_blank" rel="external">在qt下编写基于KUKA youbot API的程序</a><br><a href="http://blog.csdn.net/yaked/article/details/45022047" target="_blank" rel="external">用ROS控制KUKA youbot的5自由度机械臂和夹子</a><br><a href="http://blog.csdn.net/yaked/article/details/45061889" target="_blank" rel="external">给KUKA youbot机械臂添加dynamic reconfig</a><br><a href="http://blog.csdn.net/yaked/article/details/45098549" target="_blank" rel="external">Actionlib与KUKA youbot机械臂</a><br><a href="http://blog.csdn.net/yaked/article/details/45534381" target="_blank" rel="external">利用rqt_plot与matlab分析KUKA youbot的joint_states信息</a><br><a href="http://blog.csdn.net/yaked/article/details/45618877" target="_blank" rel="external">KUKA youbot机械臂与Moveit工具包（1）</a><br><a href="http://blog.csdn.net/yaked/article/details/45621517" target="_blank" rel="external">KUKA youbot机械臂与Moveit工具包（2）</a><br><a href="http://blog.csdn.net/yaked/article/details/46840763" target="_blank" rel="external">KUKA youbot机械臂与Moveit工具包（3）</a><br><a href="http://blog.csdn.net/yaked/article/details/51412781" target="_blank" rel="external">Gazebo与ros_control（1）：让模型动起来</a><br><a href="http://blog.csdn.net/yaked/article/details/51417742" target="_blank" rel="external">Gazebo与ros_control（2）：七自由度机械臂和两轮差速运动小车</a><br><a href="http://blog.csdn.net/yaked/article/details/51436262" target="_blank" rel="external">Gazebo与ros_control（3）：Moveit输出规划轨迹到Gazebo</a><br><a href="http://blog.csdn.net/yaked/article/details/51483531" target="_blank" rel="external">Gazebo与ros_control（4）：举一反三，实战youBot</a></p>
<p><strong>邱博士：</strong><br><a href="http://blog.exbot.net/archives/2908" target="_blank" rel="external">使用MoveIt进行运动规划</a><br><a href="http://www.leiphone.com/news/201703/0JJyEB2eqdRe9XS8.html" target="_blank" rel="external">实例介绍机械臂运动规划及前沿研究方向</a><br><a href="https://www.zhihu.com/people/fly_qq/answers" target="_blank" rel="external">邱博士知乎问题回答</a></p>
<p><strong>创客智造：</strong><br><a href="http://www.ncnynl.com/archives/201610/947.html" target="_blank" rel="external">MoveIt!入门教程系列</a></p>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我在大二的时候了加入西工大舞蹈机器人基地家政组，负责机械臂的软件开发工作。那个时候ROS的版本还是Indigo，MoveIt!用的人还不是很多，RoboCup@Home比赛队伍中用机械臂的还很少。如今接近两年的时间过去了，当我再次打开MoveIt!官网的时候，教程的数量和质量已经不可同日而语了。我相信现在的机器人爱好者或研究者们要比我当初那会儿更容易地学习并掌握机械臂的开发，并能将其应用到解决当今人们所遇到的问题中去。我们正处在人工智能的伟大时代，而机器人作为人工智能技术最为重要的技术载体，需要我们为此付出努力并勇于探索前方未知的道路。最后，我希望这篇文章可以让更多的开发者迈入机械臂开发的大门，并为机械臂的研究发展贡献你们自己的一份力量！</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> ROS经验总结系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ROS </tag>
            
            <tag> MoveIt! </tag>
            
            <tag> Gazebo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ROS经验总结系列（一）：晓萌机器人系统]]></title>
      <url>http://myyerrol.io/zh-cn/2017/04/18/ros_experience_1_xmbot_system/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我在大二的时候加入到了西北工业大学舞蹈机器人基地RoboCup@Home项目组，在接近一年半的学习与开发过程中，我与负责其他模块的成员一起在原有晓萌机器人的基础上，对其整个系统架构进行了全面的升级，以便满足实际比赛的需要。同时在这个过程中，我也对新一代晓萌机器人系统有了更深的认识与理解。这里，我把自己对晓萌机器人系统的见解总结下来，一方面算是对我们这一届成员开发成果的总结，另一方面也希望这些经验总结可以留给未来的继任者，能给他们一些开发上的指导和借鉴。</p>
<p>本篇文章重点介绍晓萌机器人的系统架构，其中主要分为硬件层、嵌入式层、驱动层和软件层。除了技术方面的内容之外，我还会介绍其他有关开发的内容。不过由于这些内容都是来源于自己的个人见解，所以有些地方可能会讲得不够准确，欢迎各位成员在留言处进行指正。</p>
<a id="more"></a>
<h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><p><img src="/images/xmbot/xm_system_architecture.png" alt="xm_system_architecture"></p>
<p>如上图所示，晓萌机器人的架构主要分为四层，分别为硬件层、嵌入式层、驱动层和软件层。</p>
<h3 id="硬件层"><a href="#硬件层" class="headerlink" title="硬件层"></a>硬件层</h3><ul>
<li><h4 id="机械平台"><a href="#机械平台" class="headerlink" title="机械平台"></a>机械平台</h4><p><strong>底盘：</strong><br>机械平台分为底盘和机械臂两个部分。根据《自主移动机器人导论》书中的相关内容，底盘采用三角布局的全向轮结构，经过一定的运动学解算，可以实现底盘的全向移动。</p>
<p><strong>机械臂：</strong><br>机械臂由我们上一届学长设计，整个机械结构由复合的同步轮和与之匹配的同步带组成。由于没有采用传统的舵机关节结构，因此该机械臂可以抓取更重的载荷，并且在末端精度上也表现得很出色。</p>
</li>
<li><h4 id="传感器"><a href="#传感器" class="headerlink" title="传感器"></a>传感器</h4><p><strong>音频：</strong><br>晓萌机器人安装有话筒和音响两种音频设备。话筒用于接收人所发出的语音信息，不过由于比赛现场声音过于嘈杂，所以人与话筒的距离要保持得比较近才能使语音命令能够被采集到。</p>
<p>音响主要用来播放晓萌机器人的语音信息。根据比赛规则，晓萌机器人需要在某些比赛项目中通过播放语音的方式来表明机器人已经理解裁判所下达的命令或完成了某个阶段的任务。</p>
<p><strong>激光：</strong><br>晓萌机器人装配有Hokuyo公司的廉价激光传感器，它主要被用于建立未知环境的地图，为机器人的自主导航提供坚实的基础。同时，它也能检测到机器人周围的障碍物，使得机器人能避免与其相撞。</p>
<p><strong>Kinect：</strong><br>Kinect是微软公司推出的一款RGB-D相机，我们将其安装在机械臂的升降台上，主要用于获取点云数据并使用相关图像算法来识别放置在架子上的不同物体。</p>
<p><strong>Xtion Pro Live：</strong><br>Xtion Pro Live是华硕公司推出的一款RGB-D相机，我们将其应用于人脸识别。该相机位于晓萌机器人的顶部云台上，云台则由两个Dynamixel舵机组成。当比赛中需要机器人跟随人一起移动时，晓萌机器人可以通过改变两个舵机的角度来确保人脸始终存在于相机的有效视野内，从而降低跟丢情况的发生。</p>
</li>
<li><h4 id="执行器"><a href="#执行器" class="headerlink" title="执行器"></a>执行器</h4><p>执行器是机器人重要的运动部件，如图所示，晓萌机器人的执行器包含有舵机和电机两个部分。舵机主要用于相机云台的旋转以及机械臂末端手爪的开合，电机则负责底盘和机械臂部分的移动和控制。</p>
</li>
<li><h4 id="反馈器"><a href="#反馈器" class="headerlink" title="反馈器"></a>反馈器</h4><p>反馈器可以实时地获取机器人的运动状态，为实现机器人自主闭环控制提供基本的保障。这里，晓萌机器人采用电机编码器来向上层返回电机的实测数据，以便对原有数据进行一定的修正，减少误差对机器人自主运动或控制的影响。</p>
</li>
</ul>
<h3 id="嵌入式层"><a href="#嵌入式层" class="headerlink" title="嵌入式层"></a>嵌入式层</h3><ul>
<li><h4 id="底层控制"><a href="#底层控制" class="headerlink" title="底层控制"></a>底层控制</h4><p>嵌入式层的核心是底层控制。我们使用基于ARM Cortex-M3架构的STM32芯片作为下位机的主控，它的主要任务是对通信数据进行解析，并根据一定的解算，将最终的控制命令发送给连接有底盘和机械臂电机的驱动盒进行相应的控制。同样的，通过电机编码器返回的数据可以用来计算底盘的里程和机械臂关节的实时状态，为机器人的上层规划提供基础。</p>
</li>
<li><h4 id="数据通信"><a href="#数据通信" class="headerlink" title="数据通信"></a>数据通信</h4><p>主控与上位机之间采用串口通信，而主控与电机驱动盒之间则使用CAN网络进行连接。经过实测，该机器人通信架构可以满足需求。</p>
</li>
</ul>
<h3 id="驱动层"><a href="#驱动层" class="headerlink" title="驱动层"></a>驱动层</h3><ul>
<li><h4 id="内核设备驱动"><a href="#内核设备驱动" class="headerlink" title="内核设备驱动"></a>内核设备驱动</h4><p>内核设备驱动是驱动层最基本的组成部分，它们由硬件设备开发商提供，并嵌入在操作系统中，为访问设备提供最基本的保障。</p>
</li>
<li><h4 id="传感器驱动"><a href="#传感器驱动" class="headerlink" title="传感器驱动"></a>传感器驱动</h4><p>传感器驱动则由软件开发者所编写，它们主要负责封装底层细节并向上暴露出特定的数据接口，方便开发者进行使用或二次开发。</p>
</li>
<li><h4 id="控制器驱动"><a href="#控制器驱动" class="headerlink" title="控制器驱动"></a>控制器驱动</h4><p>从图中可以清楚地看到，控制器驱动和传感器驱动处于同一层，所以它们的功能类似，不同点在于控制器驱动服务的对象不是传感器而是舵机和电机。</p>
</li>
</ul>
<h3 id="软件层"><a href="#软件层" class="headerlink" title="软件层"></a>软件层</h3><ul>
<li><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>在Windows上，我们主要使用微软自带的Speech库来做语音合成和识别。其实在赛前的开发过程中，我们也曾在Ubuntu下使用过各种语音库，但测试出来的效果都不如Speech库。</p>
</li>
<li><h4 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h4><p>在Ubuntu上，我们全部使用ROS来做各模块的开发和集成工作，其中涉及有负责物体识别和人脸检测的图像模块、负责运动规划和控制的底盘和机械臂模块、以及负责机器人行为决定的策略模块等。</p>
<p>因为在软件组中，我主要负责机械臂软件部分，所以我对晓萌机械臂模块的开发还是有着比较深的理解和总结的。由于篇幅的缘故，我不在这里展开进行讲解。对于那些想了解如何开发机械臂的初学者来说，我会在下一篇系列博客中对此进行详细地总结。以下是机械臂的软件架构图，各位可以先睹为快：</p>
</li>
</ul>
<p><img src="/images/xmbot/xm_arm_software_architecture.png" alt="xm_arm_software_architecture"></p>
<h2 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h2><h3 id="机械"><a href="#机械" class="headerlink" title="机械"></a>机械</h3><ul>
<li><h4 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h4><p>底盘的四周用隔板做了简单的封装，并使用束线带对杂乱的线缆进行了整理，从而降低调试过程中因线缆互相缠绕而导致的一些问题（之前由于电机线缆被缠绕在机械臂的底座上，导致机械臂在升起的过程中，出现线缆被扯断的严重问题）。</p>
</li>
<li><h4 id="手爪"><a href="#手爪" class="headerlink" title="手爪"></a>手爪</h4><p>前一代手爪是那种可以对称张开闭合的结构，而现在使用的是平行结构，即两个金属滑块通过在滑轨上完成对称平行的移动来实现抓取操作。除此之外，手爪的内侧还特别加装有塑料海绵，可以保证在不失舵机扭矩的前提下，尽可能地夹紧物体。</p>
</li>
</ul>
<h3 id="电子"><a href="#电子" class="headerlink" title="电子"></a>电子</h3><ul>
<li><h4 id="机械臂控制"><a href="#机械臂控制" class="headerlink" title="机械臂控制"></a>机械臂控制</h4><p>相比底盘电机的速度闭环控制，机械臂控制使用的是位置闭环。抛开机械上的误差，电子组在控制机械臂的位置精度上做得还是很不错的。</p>
</li>
<li><h4 id="主控制板"><a href="#主控制板" class="headerlink" title="主控制板"></a>主控制板</h4><p>我们也拥有自行设计的基于STM32芯片的控制板，虽然稳定性还需改进，但相比于直接使用战舰等学习板，我们设计的控制板可以最大程度地满足自身嵌入式开发的需要，并精简冗余的部分，提高整个硬件的运行效率。</p>
</li>
</ul>
<h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><ul>
<li><h4 id="语音模块"><a href="#语音模块" class="headerlink" title="语音模块"></a>语音模块</h4><p>语音模块的主体虽然还是之前Windows上开发的那一套，但在软件界面和识别精度上都有了很大程度的提高。在2015年的RoboCup贵阳赛中，我们在语音测试环节中识别出了几乎全部的测试用例。虽然有的队全部识别正确，但是对于我们来说能在那样的环境下做到这样已经很不错了。</p>
</li>
<li><h4 id="图像模块"><a href="#图像模块" class="headerlink" title="图像模块"></a>图像模块</h4><p>图像模块的改进主要体现在物体识别上。因为我们之前想用的是和MoveIt!集成在一起的ork，但经过上一届搞图像的学长的研究发现，ork很难配置起来，而且也不是很好用。所以，这一届我的两个队友非常给力地完成了晓萌机器人第一代的物体识别算法，经过测试，识别的效果还是非常不错的。</p>
</li>
<li><h4 id="底盘模块"><a href="#底盘模块" class="headerlink" title="底盘模块"></a>底盘模块</h4><p>底盘模块的成果主要是添加了机器人自主进门以及更加鲁棒的SLAM。当然，对于BSR（Benchmark Service Robot，即服务机器人基准测试）项目来说，基于Kinect定制的视觉SLAM也是不错的成果。</p>
</li>
<li><h4 id="机械臂模块"><a href="#机械臂模块" class="headerlink" title="机械臂模块"></a>机械臂模块</h4><p>机械臂模块的成果是显而易见的，我们做到了晓萌机器人团队自创立以来第一次的机械臂自主抓取。尽管在运动控制以及策略的制订上还存在明显的不足，但可以肯定的是，机械臂是服务机器人不可或缺的重要组成部分，未来我们仍需要不断地努力，让机械臂的控制变得更加精准。</p>
</li>
<li><h4 id="策略模块"><a href="#策略模块" class="headerlink" title="策略模块"></a>策略模块</h4><p>最后是整个晓萌机器人的策略模块。放到最后才讲是因为它的确很重要，它可以说是机器人的大脑，也是整个机器人核心智能的体现（虽然我们还远远没有达到）。策略模块的成果主要是根据所要测试的项目添加了对应的状态机控制，这样就可以通过调用以上不同的模块来让机器人自主完成不同状态下的任务。</p>
</li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li><h4 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h4><p>我们基于GitHub搭建了晓萌机器人团队的代码管理系统，并根据开发角色和分配任务的不同，将代码仓库的管理权限分配给各自需要进行维护的成员，这提高了团队协作开发的效率，也减少了因代码版本不同而导致的问题。</p>
</li>
<li><h4 id="开发指南"><a href="#开发指南" class="headerlink" title="开发指南"></a>开发指南</h4><p>我们编写了一套比较完整的软件开发指南，其中包含常用编程语言以及代码版本管理方面的内容，这些指南主要被用于统一各团队成员的编码风格，使得各成员所编写的模块可以无缝地对接，提高开发效率并降低代码出错的可能。</p>
</li>
<li><h4 id="团队建设"><a href="#团队建设" class="headerlink" title="团队建设"></a>团队建设</h4><p>我们设计了自己团队的标志、海报和队服，我们以此希望未来的成员能以自己是晓萌机器人团队的一份子而感到自豪，并努力地为晓萌机器人的发展贡献自己的力量！</p>
</li>
</ul>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="机械-1"><a href="#机械-1" class="headerlink" title="机械"></a>机械</h3><ul>
<li><h4 id="机械臂"><a href="#机械臂" class="headerlink" title="机械臂"></a>机械臂</h4><p>现在，机械臂每次初始化都需要在断电的情况下由人手动地将沉重的机械臂掰成水平，然后才能上电复位。虽然这比于之前使用的限位开关要精准的多，但使用起来依然不是很方便。造成这个问题的原因是我们的机械臂构造比较特殊，由同步轮和同步带组成的关节很难保证在限位开关被触发的时候能够及时停下，所以希望新成员能找到方法来解决这个问题。</p>
</li>
<li><h4 id="机械手爪"><a href="#机械手爪" class="headerlink" title="机械手爪"></a>机械手爪</h4><p>现在，控制手爪舵机的方法是由软件组直接通过串口发送舵机旋转所需要的角度，而角度的计算则是根据物体的宽度通过解算得到的。虽然我们可以对误差进行一定的修正，以使得舵机能多次做到抓紧物体而又不会过载，但是本身这种方式就不是很科学。因为，我们不能绝对保证手爪每次都能到达物体的相同高度，对于那些是等宽圆柱体的物体来说，我们现在使用的这种纯通过计算的方式没有问题，但对于不等宽的圆柱体来说，这么做很有可能会导致手爪要么太松，抓不住。要么手爪抓得太紧，舵机过载失去扭矩。我认为解决的最好办法就是在手爪上装个压力传感器，并预先根据舵机可以承受的最大过载设定一个安全的压力阈值，这样每当抓一个物体的时候，不管它是什么形状，手爪都能根据压力的变化来尽可能地抓紧物体。</p>
</li>
</ul>
<h3 id="电子-1"><a href="#电子-1" class="headerlink" title="电子"></a>电子</h3><ul>
<li><h4 id="封装-1"><a href="#封装-1" class="headerlink" title="封装"></a>封装</h4><p>主要是有太多裸露的电线，这样既不美观，也很影响机器人的调试工作。之前，我们在调试机械臂的时候就曾出现过升降电机的线被底盘缠住，在升降复位上升的过程中直接将其扯断的悲惨经历。希望之后的电子组成员可以在布线这个问题上多考虑考虑，多参考其他队伍是如何把线布的既方便使用又能简洁美观的。</p>
</li>
<li><h4 id="机械臂-1"><a href="#机械臂-1" class="headerlink" title="机械臂"></a>机械臂</h4><p>机械臂关节移动的正方向比较混乱，希望电子组之后统一方向为：向上为正、向右为正。即软件组发送关节数据为正时，机械臂关节要向上或向右动才行。</p>
</li>
</ul>
<h3 id="软件-1"><a href="#软件-1" class="headerlink" title="软件"></a>软件</h3><ul>
<li><h4 id="串口"><a href="#串口" class="headerlink" title="串口"></a>串口</h4><p>在启动底盘和机械臂的robot_hardware，并打开串口给下位机发送数据的时候，串口总是会出现莫名其妙的崩溃问题。当时我和负责底盘的队友商量之后，决定写一个ROS Service来切换底盘和机械臂的模式，这样做虽然可以保证每次只有底盘或机械臂在给串口发数据，暂时地解决了问题，但它并不是一个很好的解决方案，因为它使得底盘和机械臂无法同时工作。</p>
<p>我个人认为问题的原因应该和串口发送接收队列有关。RS-485串口的波特率已经达到了我们所能使用的极限了，所以要修改的话，应该在软件组代码中对发送或接收队列进行适当的延迟，以抵消大量的数据对数据线路的冲击。</p>
</li>
<li><h4 id="MoveIt"><a href="#MoveIt" class="headerlink" title="MoveIt!"></a>MoveIt!</h4><p>我之前在研究机械臂控制的时候，发现在调用MoveIt!做机械臂逆解时，总会出现解算不成功的问题。后来我们简化了机械臂的控制，并没有在机械臂中用到MoveIt!。希望新成员能够解决这个问题，使晓萌的机械臂控制更上一层楼。</p>
</li>
</ul>
<h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><h3 id="机械-2"><a href="#机械-2" class="headerlink" title="机械"></a>机械</h3><p>希望机械上可以减轻机械臂升降台的重量，因为负责底盘的队友曾经抱怨沉重的升降使得他的底盘在导航的时候跑得不稳定。还有就是对于BSR项目底盘的设计，希望可以向中科大和上交学习，尝试地使用两轮驱动，因为两轮驱动的话，底盘过门槛是没有问题的，而且底盘电机可以承受的重量也要在设计的时候好好考虑，毕竟负重越重，得分所乘的权值越大。</p>
<h3 id="软件-2"><a href="#软件-2" class="headerlink" title="软件"></a>软件</h3><p>希望软件组各个模块的负责人可以在已有学长学姐的技术积累之上，让模块本身做得足够稳定。我知道虽然我在这里讲的很容易，但真要实现起来，对于我们本科生来说，确实也不容易。但我们不相信自己还能相信谁呢？就像之前我们的学长告诉我们的那样：如果各位不做，西工大就再也没有人去做了。时代把任务交给你们，你们就必须肩负起这个使命。所以为了晓萌机器人项目的发展，希望每届项目组的成员都要做出自己应有的贡献。</p>
<h3 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h3><p>最后，我的个人愿望就是希望我能在大四本科毕业之前，看到晓萌机器人能自主完成GPSR项目，或者至少可以去大学生超市秀一把机械臂的自主抓取。虽然愿望很美好，但到底能不能完成，还要看未来的新成员给不给力了。</p>
<h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p>我知道有很多人喜欢编程，不喜欢花时间来写文档（首先阐明一下，这里的文档指的是广义上的文档，即包括图片、视频、文字、架构图等）。但我不得不说，文档对于一个项目的发展是至关重要的。在我们2015年贵阳赛比完之后，我们组的ROS大牛学长就曾告诉过我：只要晓萌的技术方向没有问题，经过一段时间的发展，我们超越除中科大之外的其他队是没有问题的。我想，相比于代码来说，整个晓萌团队的技术架构、需求设计才最为重要。而往往新架构的设计要花费很多时间，而且还可能需要组内各个模块负责人之间要相互讨论和统一意见。</p>
<p>总之，我真的很不希望看到在若干年之后：我们拿不出曾经调试或比赛的照片来告诉新成员过去几代的晓萌机器人长什么样子；我们拿不出合适的视频资料来证明我们曾经在调试或比赛的时候也完成过某项测试；我们拿不出曾经设计严谨的架构图或技术文档来指导学弟学妹未来晓萌该如何前进和发展。所以为了下一代的发展，我觉得我们应该把我们已有的技术、经验、成果、和对未来的规划以纸质文档、照片、视频等方式永久地记录下来，这样在过了几代发展之后，晓萌机器人才能以一种增量式开发的成果展现在人们的面前。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>首先我很幸运自己能有机会在本科阶段就加入到这样一支强大的团队中来，而且还能做我自己喜欢做的东西。当然，我觉得最重要的是我体会到了什么才叫真正的团队。回顾以往的开发经历，我们也曾遇到过人员流失等种种困难，但团结一心使我们最终坚持到了现在。多少个周末、寒暑假，别人在放松休息的时候，我们在埋头为晓萌团队的发展贡献自己的力量。我也记不清赛前我们到底熬了多少个昼夜，为比赛项目测试了多少次，但有一点是值得肯定的，我们能够彼此不懈努力并为此拼命的最大动力只来源于学长曾经教导过我们的一句话：绝对不能坑自己的队友。</p>
<p>其实有很多人都不理解我们，说我们比赛名次不是很好，拿的奖也不是国际奖，为什么还要牺牲那么多的时间或者有时还要冒着挂科的巨大风险来去做这些东西。其实我想说的是，奖这个东西往往不代表能力，或者说奖不能完全体现出我们的真实水平。就像学长曾说过的，奖只能证明你曾经经历过，只有你自己知道你配得上还是配不上这个奖。总之，在经历过三次比赛之后，我开始慢慢意识到也许奖真的不那么重要，重要的是我们可以用我们的能力来陪伴并见证晓萌的不断成长。有收获，就不遗憾了。</p>
<p>未来，我觉得有必要多花一些时间来研究理论，因为如果你只会调别人的API，你是很难有非常大的进步的。只有掌握了最核心、最基础的理论知识，才可能在未来创造出令别人刮目相看的东西。</p>
<p>最后，我想说的是：做你最想做的事情，并且为之奋斗下去，永不后悔！</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> ROS经验总结系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ROS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ROS经验总结系列（零）：总纲]]></title>
      <url>http://myyerrol.io/zh-cn/2017/04/15/ros_experience_0_superclass/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我最早开始接触ROS是在大一的下半学期，那时因为自己对电子制作以及机器人等非常感兴趣，所以经常每周跑去图书馆阅读相关方面的杂志（推荐《<strong>无线电</strong>》）和书籍。</p>
<p>有一次，我跟往常一样来到机器人书架前，无意中发现了一本叫《开源机器人操作系统》的红书。当时我心里面有些疑惑：机器人还可以有操作系统？于是抱着好奇的心态，我翻了翻这本书的前几页，其中乌龟外形的标志当时给我留下了非常深刻的印象。</p>
<p>后来没过多长时间，我加入了西北工业大学舞蹈机器人基地RoboCup@Home项目组，开始正式地学习ROS并逐渐体会到它的强大之处，以下我简要地介绍一下ROS。</p>
<a id="more"></a>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>近年来，随着人工智能技术的飞速发展，机器人领域也同样取得了举世瞩目的成就。性价比较高的机器人平台，包括地面移动机器人、旋翼无人机和类人机器人等，得到了广泛应用。更令人感到振奋的是，越来越多的高级智能算法让机器人的自主等级逐步提高。</p>
<p>面对日新月异的技术发展，显然传统的机器人开发框架已不能满足广大机器人软件开发者的需求，因此斯坦福大学联合柳树车库公司（Willow Garage）共同开发了ROS（Robot Operting System），它有效地解决机器人开发中的问题并提高了软件编写的效率，以下是ROS的官方定义：</p>
<blockquote>
<p>ROS是面向机器人的开源元操作系统。它能够提供类似传统操作系统的诸多功能，如硬件抽象、底层设备控制、常用功能实现、进程间消息传递和程序包管理等。此外，它还提供相关工具和库，用于获取、编译、编辑代码以及在多个计算机之间运行程序完成分布式计算。</p>
</blockquote>
<p>总之，ROS大幅度地降低了开发和应用机器人的难度，方便了全世界的机器人爱好者和研究者分享各自的研究成果，从而为机器人的通用化、模块化、智能化发展提供了良好的基础。</p>
<h2 id="总纲"><a href="#总纲" class="headerlink" title="总纲"></a>总纲</h2><p>以下是我原创的ROS经验总结系列文章：</p>
<p><a href="http://myyerrol.io/zh-cn/2017/04/15/ros_experience_0_superclass/">ROS经验总结系列（零）：总纲</a><br><a href="http://myyerrol.io/zh-cn/2017/04/18/ros_experience_1_xmbot_system/">ROS经验总结系列（一）：晓萌机器人系统</a><br><a href="http://myyerrol.io/zh-cn/2017/04/20/ros_experience_2_xmbot_arm/">ROS经验总结系列（二）：晓萌机器人机械臂</a></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>也许从我接触ROS的那一刻起，我就与ROS结下了不解之缘，并在学习、开发ROS的过程中受益匪浅。所以，我也希望有更多的机器人爱好者能够参与到ROS的学习之中来，因为它不仅可以教会你机器人的开发方法，而且更重要的是它可以让你掌握更多与之相关的开发知识，让你的能力得到更快的提升。</p>
<p>接下来，我就自己曾经在西北工业大学舞蹈机器人基地RoboCup@Home项目组的实战开发经历，总结了两篇文章，欢迎各位阅读。</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> ROS经验总结系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ROS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo教程系列（一）：Hexo的安装和配置]]></title>
      <url>http://myyerrol.io/zh-cn/2017/03/31/hexo_blog_1_installation_and_configuration/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo的安装和配置内容主要由四个部分组成，它们分别是：</p>
<ul>
<li><p><strong>Node.js:</strong><br>因为Hexo是基于Node.js框架进行开发的，所以Node.js为Hexo提供了必需的运行基础。</p>
</li>
<li><p><strong>Git:</strong><br>Git是著名的分布式版本控制软件，它可以对博客网站的仓库进行管理和远程部署。</p>
</li>
<li><p><strong>GitHub Pages:</strong><br>GitHub Pages是面向用户、组织和项目开放的公共静态页面搭建托管服务，博客站点可以被免费托管在GitHub上。</p>
</li>
<li><p><strong>Hexo:</strong><br>Hexo是一个简洁且强大的博客框架。</p>
</li>
</ul>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>首先需要安装以下程序：</p>
<ul>
<li><a href="https://nodejs.org/en" target="_blank" rel="external">Node.js</a></li>
<li><a href="https://git-scm.com" target="_blank" rel="external">Git</a></li>
</ul>
<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><h4 id="Windows系统"><a href="#Windows系统" class="headerlink" title="Windows系统"></a>Windows系统</h4><p>直接从<a href="https://nodejs.org" target="_blank" rel="external">Node.js</a>官网上下载相应（32或64位）的Node.js软件安装包，一路Next即可。</p>
<h4 id="Ubuntu系统"><a href="#Ubuntu系统" class="headerlink" title="Ubuntu系统"></a>Ubuntu系统</h4><p>安装Node.js的最佳方式是使用nvm。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure>
<p>安装完之后，使用以下命令来安装Node.js</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; nvm install stable</div></pre></td></tr></table></figure>
<h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><h4 id="Windows系统-1"><a href="#Windows系统-1" class="headerlink" title="Windows系统"></a>Windows系统</h4><p>直接从<a href="https://git-scm.com" target="_blank" rel="external">Git</a>官网上下载相应（32或64位）的软件安装包进行安装。安装时，请勾选<strong>Add to PATH</strong>选项。安装时强烈建议勾选<strong>Git Bash</strong>，<strong>Git Bash</strong>提供了一组Linux风格的Shell环境。在该环境下，你可以直接通过命令行的方式来安装Node.js以及之后的Hexo。因为Hexo的很多操作都涉及命令行的操作，所以<strong>Git Bash</strong>很重要！</p>
<h4 id="Ubuntu系统-1"><a href="#Ubuntu系统-1" class="headerlink" title="Ubuntu系统"></a>Ubuntu系统</h4><p>直接通过命令行来安装</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$&gt; sudo apt-get update</div><div class="line">$&gt; sudo apt-get install git-core</div></pre></td></tr></table></figure>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在国内，npm下载安装包的速度会很慢（除了已翻墙的用户），推荐使用淘宝源或镜像，速度会比较快。</p>
<h4 id="安装Hexo-cli"><a href="#安装Hexo-cli" class="headerlink" title="安装Hexo-cli"></a>安装Hexo-cli</h4><p><strong>方法一：</strong>使用淘宝源来替换官方软件源</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</div></pre></td></tr></table></figure>
<p>之后跟官方教程一样安装Hexo</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; npm install -g hexo-cli</div></pre></td></tr></table></figure>
<p><strong>方法二：</strong>使用淘宝镜像来替换官方镜像</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>
<p>之后就可以使用cnpm命令来安装Hexo了</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; cnpm install -g hexo-cli</div></pre></td></tr></table></figure>
<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  淘宝NPM镜像是一个完整npmjs.org镜像，你可以用此代替官方版本(只读)，同步频率目前为10分钟 一次，以保证尽量与官方服务同步。</div>
<p>因为我本人是一个坚定的<strong>K.I.S.S</strong>(Keep It Simple, Stupid)支持者，崇尚Unix的设计哲学。所以我在安装Hexo时会选择方法一，因为它不需要安装额外的软件，只是修改了用户的配置，比较精简。</p>
<h4 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h4><p>切换目录到用户桌面</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; <span class="built_in">cd</span> ~/Desktop</div></pre></td></tr></table></figure>
<p>创建空文件夹，名字可以随便取，但最好跟你的博客有关</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$&gt; mkdir xxx_blog</div><div class="line">$&gt; <span class="built_in">cd</span> xxx_blog</div></pre></td></tr></table></figure>
<p>初始化博客文件夹</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo init</div></pre></td></tr></table></figure>
<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  Hexo-cli在这个过程中会将landscape主题包以及其所依赖的Hexo软件包都下载下来并以本地安装的方式安装到博客文件夹下的node_modules目录下。关于安装的软件包的详细信息，可以打开博客文件夹下的package.json来查看。</div>
<p>安装Hexo默认的依赖和插件</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; npm install</div></pre></td></tr></table></figure>
<p>安装Git插件并保存为Hexo的依赖，为部署到GitHub Page做准备</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="配置Git和GitHub"><a href="#配置Git和GitHub" class="headerlink" title="配置Git和GitHub"></a>配置Git和GitHub</h3><p>已配置过<strong>SSH Key</strong>的可以略过本小节。</p>
<ul>
<li><p>打开Shell软件（Windows下<strong>Git Bash</strong>，Ubuntu下为默认的<strong>Terminal</strong>），依次输入以下命令</p>
<p>配置全局的用户名和E-mail地址</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$&gt; git config --global user.name <span class="string">"your_name"</span></div><div class="line">$&gt; git config --global user.email <span class="string">"your_email@xxx.com"</span></div></pre></td></tr></table></figure>
<p>根据E-mail地址生成特定的ssh密钥</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; ssh-keygen -t rsa -c <span class="string">"your_email@xxx.com"</span></div></pre></td></tr></table></figure>
<p><strong><div class="alert alert-warning"><i class="fa fa-bell"></i>  Windows用户注意：如果生成的.ssh文件夹默认不在C:\Users\xxx下，你可以通过向用户添加HOME环境变量为C:\Users\xxx来解决这个问题。</div></strong></p>
</li>
<li><p>登录GitHub并点击<strong>Setting</strong>选项。</p>
<p><img src="/images/github/github_settings.png" alt="github_settings"></p>
</li>
<li><p>使用文本编辑器打开<code>.ssh</code>文件夹下的<code>id_rsa.pub</code>文件，将里面的内容添加到你的GitHub账户设置中的<strong>SSH Key</strong>中去。</p>
<p><img src="/images/github/github_ssh_keys.png" alt="github_ssh_keys"></p>
</li>
<li><p>再次打开Shell软件（Windows下<strong>Git Bash</strong>，Ubuntu下为默认的<strong>Terminal</strong>），输入以下命令</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; ssh -T git@github.com</div></pre></td></tr></table></figure>
<p>如果Shell软件返回以下信息，就说明Git已经配置好了。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; Hi xxx! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="配置GitHub-Pages"><a href="#配置GitHub-Pages" class="headerlink" title="配置GitHub Pages"></a>配置GitHub Pages</h3><p>已配置过<strong>GitHub Page</strong>的可以略过本小节。</p>
<ul>
<li><p>登录你的GitHub，点击<strong>New repository</strong>。</p>
<p><img src="/images/github/github_new_repository.png" alt="github_new_repository"></p>
</li>
<li><p>填写仓库的名字和相关描述。</p>
<p><img src="/images/github/github_create_repository.png" alt="github_create_repository"></p>
<p><strong><p class="text-danger">在设置界面上填写Repository name时一定要注意，仓库的名字是固定的。即your_name.github.io</p></strong></p>
</li>
<li><p>点击<strong>Create repository</strong>完成。</p>
</li>
</ul>
<h3 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h3><p>以下是生成的<code>_config.yaml</code>中的默认内容</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site</span></div><div class="line"><span class="attr">title:</span> <span class="string">Hexo</span></div><div class="line"><span class="attr">subtitle:</span></div><div class="line"><span class="attr">description:</span></div><div class="line"><span class="attr">author:</span> <span class="string">John</span> <span class="string">Doe</span></div><div class="line"><span class="attr">language:</span></div><div class="line"><span class="attr">timezone:</span></div><div class="line"></div><div class="line"><span class="comment"># URL</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line"><span class="attr">url:</span> <span class="attr">http://yoursite.com</span></div><div class="line"><span class="attr">root:</span> <span class="string">/</span></div><div class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></div><div class="line"><span class="attr">permalink_defaults:</span></div><div class="line"></div><div class="line"><span class="comment"># Directory</span></div><div class="line"><span class="attr">source_dir:</span> <span class="string">source</span></div><div class="line"><span class="attr">public_dir:</span> <span class="string">public</span></div><div class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></div><div class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></div><div class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></div><div class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></div><div class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></div><div class="line"><span class="attr">skip_render:</span></div><div class="line"></div><div class="line"><span class="comment"># Writing</span></div><div class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></div><div class="line"><span class="attr">default_layout:</span> <span class="string">post</span></div><div class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></div><div class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></div><div class="line"><span class="attr">filename_case:</span> <span class="number">0</span></div><div class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></div><div class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></div><div class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></div><div class="line"><span class="attr">future:</span> <span class="literal">true</span></div><div class="line"><span class="attr">highlight:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  tab_replace:</span></div><div class="line"></div><div class="line"><span class="comment"># Category &amp; Tag</span></div><div class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></div><div class="line"><span class="attr">category_map:</span></div><div class="line"><span class="attr">tag_map:</span></div><div class="line"></div><div class="line"><span class="comment"># Date / Time format</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></div><div class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></div><div class="line"></div><div class="line"><span class="comment"># Pagination</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line"><span class="attr">per_page:</span> <span class="number">10</span></div><div class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></div><div class="line"></div><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line"><span class="attr">theme:</span> <span class="string">landscape</span></div><div class="line"></div><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span></div></pre></td></tr></table></figure>
<p>以下讲解每个参数的含义以及推荐的基本配置</p>
<h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认</th>
<th>推荐</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>title</strong></td>
<td>网站标题</td>
<td>Hexo</td>
<td>自由发挥</td>
</tr>
<tr>
<td><strong>subtitle</strong></td>
<td>网站副标题</td>
<td>x</td>
<td>自由发挥</td>
</tr>
<tr>
<td><strong>description</strong></td>
<td>网站描述</td>
<td>x</td>
<td>自由发挥</td>
</tr>
<tr>
<td><strong>author</strong></td>
<td>作者的名字</td>
<td>John Doe</td>
<td>英文用户名</td>
</tr>
<tr>
<td><strong>language</strong></td>
<td>网站的语言</td>
<td>英文</td>
<td>zh-cn或en</td>
</tr>
<tr>
<td><strong>timezone</strong></td>
<td>网站时区</td>
<td>本电脑时区</td>
<td>不写</td>
</tr>
</tbody>
</table>
<p><strong><div class="alert alert-warning"><i class="fa fa-bell"></i>  修改language参数时一定要注意：要看themes/xxx/languages文件夹下的文件名，根据具体的文件名来填写参数。特别是对于zh-cn和zh-CN这两种写法，Windows和Git默认是不进行区分的，但你在填写参数时一定要区分开来，否则Hexo只会使用默认的英文。</div></strong></p>
<h4 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认</th>
<th>推荐</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>url</strong></td>
<td>网址</td>
<td><a href="http://yoursite.com" target="_blank" rel="external">http://yoursite.com</a></td>
<td>不改</td>
</tr>
<tr>
<td><strong>root</strong></td>
<td>网址根目录</td>
<td>/</td>
<td>不改</td>
</tr>
<tr>
<td><strong>permalink</strong></td>
<td>文章的永久链接</td>
<td>:year/:month/:day/:title/</td>
<td>:lang/:year/:month/:day/:title/</td>
</tr>
<tr>
<td><strong>permalink_defaults</strong></td>
<td>永久链接中的默认值</td>
<td>x</td>
<td>lang: zh-cn</td>
</tr>
</tbody>
</table>
<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认</th>
<th>推荐</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>source_dir</strong></td>
<td>资源文件夹（存放自己的博客文章）</td>
<td><code>source</code></td>
<td>不改</td>
</tr>
<tr>
<td><strong>public_dir</strong></td>
<td>公共文件夹（存放生成的站点文件）</td>
<td><code>public</code></td>
<td>不改</td>
</tr>
<tr>
<td><strong>tag_dir</strong></td>
<td>标签文件夹</td>
<td><code>tags</code></td>
<td>不改</td>
</tr>
<tr>
<td><strong>archive_dir</strong></td>
<td>归档文件夹</td>
<td><code>archives</code></td>
<td>不改</td>
</tr>
<tr>
<td><strong>category_dir</strong></td>
<td>分类文件夹</td>
<td><code>categories</code></td>
<td>不改</td>
</tr>
<tr>
<td><strong>code_dir</strong></td>
<td>代码文件夹</td>
<td><code>downloads/code</code></td>
<td>不改</td>
</tr>
<tr>
<td><strong>i18n_dir</strong></td>
<td>国际化文件夹</td>
<td>:lang</td>
<td>不改</td>
</tr>
<tr>
<td><strong>skip_render</strong></td>
<td>跳过指定文件的渲染</td>
<td>x</td>
<td>不写</td>
</tr>
</tbody>
</table>
<h4 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认</th>
<th>推荐</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>new_post_name</strong></td>
<td>新文章的文件名称</td>
<td>:title.md</td>
<td>:lang/:year-:month-:day-:title.md</td>
</tr>
<tr>
<td><strong>default_layout</strong></td>
<td>默认布局</td>
<td>post</td>
<td>不改</td>
</tr>
<tr>
<td><strong>titlecase</strong></td>
<td>标题转换为Title Case模式</td>
<td>false</td>
<td>不改</td>
</tr>
<tr>
<td><strong>external_link</strong></td>
<td>在新标签中打开链接</td>
<td>true</td>
<td>不改</td>
</tr>
<tr>
<td><strong>finename_case</strong></td>
<td>文件名转换为大写或小写</td>
<td>0</td>
<td>不改</td>
</tr>
<tr>
<td><strong>render_drafts</strong></td>
<td>显示草稿</td>
<td>false</td>
<td>不改</td>
</tr>
<tr>
<td><strong>post_asset_folder</strong></td>
<td>启用资源文件夹</td>
<td>false</td>
<td>不改</td>
</tr>
<tr>
<td><strong>relative_link</strong></td>
<td>把链接更改为相对于根目录的地址</td>
<td>false</td>
<td>不改</td>
</tr>
<tr>
<td><strong>future</strong></td>
<td>显示未来的文章</td>
<td>true</td>
<td>不改</td>
</tr>
<tr>
<td><strong>highlight</strong></td>
<td>代码块的设置</td>
<td>…</td>
<td>tab_replace: true</td>
</tr>
</tbody>
</table>
<h4 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类 &amp; 标签"></a>分类 &amp; 标签</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认</th>
<th>推荐</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>default_category</strong></td>
<td>默认分类</td>
<td>uncategorized</td>
<td>不改</td>
</tr>
<tr>
<td><strong>category_map</strong></td>
<td>分类别名</td>
<td>x</td>
<td>不写</td>
</tr>
<tr>
<td><strong>tag_map</strong></td>
<td>标签别名</td>
<td>x</td>
<td>不写</td>
</tr>
</tbody>
</table>
<h4 id="日期-amp-时间格式"><a href="#日期-amp-时间格式" class="headerlink" title="日期 &amp; 时间格式"></a>日期 &amp; 时间格式</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认</th>
<th>推荐</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>date_format</strong></td>
<td>日期格式</td>
<td>YYYY-MM-DD</td>
<td>不改</td>
</tr>
<tr>
<td><strong>time_format</strong></td>
<td>时间格式</td>
<td>HH:mm:ss</td>
<td>不改</td>
</tr>
</tbody>
</table>
<h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认</th>
<th>推荐</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>per_page</strong></td>
<td>每页显示的文章数量</td>
<td>10</td>
<td>不改</td>
</tr>
<tr>
<td><strong>pagination_dir</strong></td>
<td>分页目录</td>
<td>page</td>
<td>不改</td>
</tr>
</tbody>
</table>
<h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认</th>
<th>推荐</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>theme</strong></td>
<td>主题</td>
<td>landscape</td>
<td><a href="https://hexo.io/themes/" target="_blank" rel="external">主题列表</a></td>
</tr>
</tbody>
</table>
<h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>deploy</strong></td>
<td>部署配置</td>
<td>x</td>
</tr>
</tbody>
</table>
<p>最后讲一下Hexo<strong>部署</strong>的详细配置过程</p>
<p>修改以下配置</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span></div></pre></td></tr></table></figure>
<p>为</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:your_name/your_name.github.io.git</span></div><div class="line"><span class="attr">  branch:</span> <span class="string">master</span></div></pre></td></tr></table></figure>
<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  到此，Hexo的安装和基本配置就全部结束了。如果你按照教程一步一步走到这里没问题的话，那祝贺你，你已经拥有了自己的第一个博客了！当然，如果你在安装和配置Hexo的过程中出现了自己无法解决的问题，你可以在下面的留言板块中提出你的问题，我会尽我所能帮助你解决出现的问题！</div>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>Hexo的命令极简单，安装后只需要记住以下五个常用的即可。<strong>执行命令时，需要Shell处于当前<code>xxx_blog</code>文件夹根目录下</strong>。</p>
<ul>
<li><p>新建一篇文章，默认使用<code>_config.yaml</code>中<strong>default_layout</strong>参数指定的布局</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>生成静态文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo generate</div></pre></td></tr></table></figure>
<p>或者简写为</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo g</div></pre></td></tr></table></figure>
</li>
<li><p>启动本地调试服务器</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo server</div></pre></td></tr></table></figure>
<p>或者简写为</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo s</div></pre></td></tr></table></figure>
</li>
<li><p>部署到远程网站，部署前请确保已经安装Git插件并已经按照上述完成了<code>_config.yaml</code>中的相关配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo deploy</div></pre></td></tr></table></figure>
<p>或者简写为</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo d</div></pre></td></tr></table></figure>
</li>
<li><p>清除缓存文件<code>db.json</code>和已生成的静态文件夹<code>public</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&gt; hexo clean</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>至此，最基本的Hexo博客网站就已经搭建好了，后续就是使用Markdown语法来写文章，最后部署就行了。当然，以上只是Hexo配置和使用的最基本流程，如果你想拥有个性化的博客网站界面以及一些增强功能的话，我会在接下来的文章中详细地介绍Hexo主题的配置方法，它肯定可以让你的博客变得更加酷炫的。</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> Hexo教程系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo教程系列（零）：总纲]]></title>
      <url>http://myyerrol.io/zh-cn/2017/03/31/hexo_blog_0_superclass/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我大一时就想过搭建一个属于自己的博客网站来记录一些自己曾经做过项目的开发经验和个人的生活感悟等，但由于时间缘故，我的这个想法一直没有实现。时间一晃到了大四，由于毕设前期任务不是很重，所以这次我决定要花一些时间把自己的博客网站搭建出来，一方面算是实现了自己当初的想法，另一方面也可以有机会将自己大学本科四年的经历总结下来，以供他人学习借鉴。</p>
<p>搭建网站的一般做法是：先买个域名，再租个服务器，最后在其上部署WordPress来进行相关的配置。虽然WordPress学起来不难，但是这样做不仅需要花钱，而且还需要不少前期准备工作，搭建起来比较繁琐。后来我经同学介绍认识了Hexo，才发现它的简洁和强大，接下来简要地介绍一下Hexo。</p>
<a id="more"></a>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul>
<li><h4 id="免费"><a href="#免费" class="headerlink" title="免费"></a>免费</h4><p>可以部署到GitHub、GitCafe和七牛上，都是完全免费的。</p>
</li>
<li><h4 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h4><p>比部署WordPress要简单得多，只需要简单几部就能搭建好环境，仅需要记住几条简短的命令和Markdown语法，即可写出精彩的文章。</p>
</li>
<li><h4 id="稳定"><a href="#稳定" class="headerlink" title="稳定"></a>稳定</h4><p>不用去操心服务器主机的运维。</p>
</li>
<li><h4 id="快速"><a href="#快速" class="headerlink" title="快速"></a>快速</h4><p>Node.js所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。同时将网站部署到GitHub、GitCafe、七牛，在全球都可获得优秀的访问速度。</p>
</li>
<li><h4 id="强大"><a href="#强大" class="headerlink" title="强大"></a>强大</h4><p>Hexo拥有强大的插件系统，安装插件可以让Hexo支持Jade、CoffeeScript。</p>
</li>
</ul>
<h2 id="总纲"><a href="#总纲" class="headerlink" title="总纲"></a>总纲</h2><p>以下是我编写的Hexo教程系列文章：</p>
<p><a href="http://myyerrol.io/zh-cn/2017/03/31/hexo_blog_0_superclass/">Hexo教程系列（零）：Hexo教程系列总纲</a><br><a href="http://myyerrol.io/zh-cn/2017/03/31/hexo_blog_1_installation_and_configuration/">Hexo教程系列（一）：Hexo的安装和配置</a><br><a href="http://myyerrol.io/zh-cn/2017/06/07/hexo_blog_2_freemind_configuration/">Hexo教程系列（二）：Freemind主题的配置</a></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在开始接触Hexo之后，我在网上搜集并学习一些有关Hexo的教程资料，算是基本掌握了Hexo的配置和使用方法。总之，我的个人博客网站已经搭建完成，后续我会使用这个平台来记录自己大学四年以及未来的项目经验和生活感悟。当然，我会首先把上面的Hexo教程系列文章完成，希望能让更多的人可以据此来搭建网站并分享自己的故事。</p>
<div class="alert alert-info"><i class="fa fa-info"></i>  普通个人转载请注明出处。获得许可后，要求转载时保留注明出处和网站链接，谢谢！</div>
]]></content>
      
        <categories>
            
            <category> Hexo教程系列 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
